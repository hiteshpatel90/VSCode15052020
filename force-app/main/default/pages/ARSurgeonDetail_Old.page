<apex:page id="thePage" applyBodyTag="false" applyHtmlTag="false" showChat="false" showHeader="false" sidebar="false" showQuickActionVfHeader="false" standardStylesheets="false" controller="CS_ARContactsCC"  extensions="CS_ARCCExtension" docType="html-5.0">
        
<apex:composition template="ARtemplate">
<apex:define name="bodyContent">  
  
  <style>
    table.table-calendar {
      table-layout: fixed;
      word-wrap: break-word;
    }
    table.table-calendar tbody td {
      font-size: 0.8em;
    }

    table.table-calendar tbody tr {
      cursor: pointer;
    }
    
    table.table-surgeon {
      table-layout: fixed;
      word-wrap: break-word;
    }
    table.table-surgeon tbody td {
      font-size: 0.8em;
    }
    
    table.table-affiliations {
      table-layout: fixed;
      word-wrap: break-word;
    }
    table.table-affiliations tbody td {
      font-size: 0.8em;
    }
    table.table-affiliations tbody tr {
      cursor: pointer;
    }

    table.table-contacts tbody tr {
      cursor: pointer;
    }

    .profile-photo-28 {
      width: 28px;
      height: 28px;
      border-radius: 50%;
    }
    div.contact-row {
      padding: 0px;
    }
    div.contact-row div {
      padding: 0px !important;
    }

    div.tab-pane p {
      word-wrap: break-word;
    }

    textarea {
      resize: none;
    }
    
    .label_block{
        display: block;
    }
    
    .GGrid-content {
        border-top-color: #151516 !important;
    }

    .fa-border{
          background-color: #545454;
        }
        .fa-meeting-background{
          background-color: #a94442 !important;
        }
        .fa-meeting-task{
          background-color: #3c763d !important;
        }
        .fa-meeting-surgicalcase{
          background-color: #337ab7 !important;
        }
        .fa-meeting-note{
          background-color: #ed5565 !important;
        }
        .fa-meeting-log{
          background-color: #f8ac59 !important;
        }
        .fa-pardot-email{
          background-color: #337ab7 !important;
          border-color: #ffffff;
        }
        .fa-pardot-visit{
          background-color: #337ab7 !important;
          border-color: #ffffff;
        }
        
        .default-color {
            color: #333;
            background-color: #fff;
            border-color: #ccc;
        }
        
        .dropdown {
            position: relative;
            display: inline-block;
        }
        
        .dropdown-content {
            top: 40px;
            background-color: #f9f9f9;
            min-width: 160px;
            min-height: 150px;
            overflow: auto;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            padding: 12px 16px;
            display: none;
            position: absolute;
            z-index: 2;
        }
  
  </style>
  
  <!--CID - 000057/Swetha P/Dec/9/2016/Validation on phone number field-->

  <script type="text/javascript">
         // Function for Phone number validation - do not allow to enter characters in phone number field
          function isNumberCommaDot(evt) {
             var theEvent = evt || window.event;
             var key = theEvent.keyCode || theEvent.which;
        
             if (key === 9 ) { //TAB was pressed
             phoneFormate($('#pPersonMobilePhone').val(),theEvent );
             init();
                return;
             }
        
             key = String.fromCharCode(key);
             if (key.length == 0) return;
             var regex = /^[0-9,\9\b]*\.?[0-9]*$/;
             if (!regex.test(key)) {
                 theEvent.returnValue = false;
                 if (theEvent.preventDefault) theEvent.preventDefault();
             }
         }
   <!--CID - 000057/Swetha P/Dec/9/2016/Validation on phone number field-->
         
         
        var currentUserId = "{!$User.Id}";
        var currenUserTZ = "{! currentUserTimeZone}";
      
        //Function to call for textbox that ONLY NUMERIC will accept
          function OnlyNum(evt) {
                evt = (evt) ? evt : window.event;
                var charCode = (evt.which) ? evt.which : evt.keyCode;
                if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                    return false;
                }
                return true;
            }
            
            function populateOwnerInfo(ownerId){
                    
                        Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARCCExtension.retrieveUsersInMyTerritory}",
                        function(result, event) {
                            
                            $('#case-prop-modal .case-owner').empty();
                            $('#case-prop-modal .case-owner')
                                     .append($("<option></option>")
                                                .attr("value","")
                                                .text(""));
                            
                            $.each(result, function(key, value) {
                                 $('#case-prop-modal .case-owner')
                                     .append($("<option></option>")
                                                .attr("value",value.Id)
                                                .text(value.Name)); 
                            });
                        
                            console.log("Owner Has: " + ownerId + "\t in the list: " + $("#case-prop-modal .case-owner option[value='"+ownerId+"']").length);
                            if($("#case-prop-modal .case-owner option[value='"+ownerId+"']").length > 0){
                                $('#case-prop-modal .case-owner').val(ownerId);
                            } else{
                                //$('#case-prop-modal .case-owner').prop('disabled', 'disabled');
                                $('#case-prop-modal .case-owner').val("");
                            }
                        
                        }); //  end of remote call
                        
                        
                    }   //  end of populateOwnerInfo
                  

            function loadPardotActivity(email, type, loadMore){
                if(email != null){

                console.log('Load loadPardotActivity begins!');

                if(!loadMore){
                  //First time loading Pardot
                  $("#pardot-refresh").show();
                  $("#PardotActivityDisplay").empty();  
                  console.log('First time loading Pardot');
                }
                else{
                  //Hide load more button
                  $(".load-more").hide();
                  $("#pardot-load-refresh").show();
                  
                  console.log('Load more pardot activities');
                }

                Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrievePractitionerPardotActivities}",
                        email, loadMore, function(result, event) {

                          if(event.status && result != null){
                          //Process pardot activities
                          console.log(result);

                          //Retrieve the list of Prospect activities
                          var prospectActivityList = result.result.visitor_activity;
                          console.log('Pardot activity list: ');
                          console.log(prospectActivityList);

                          var activityTypeList = [];
                          
                          //iterate each event and construct the UI
                          $.each(prospectActivityList, function(i, v){                      
                              //filter based on the type list

                              if(type == 'Any Type' ){
                                htm = constructPardotActivity(v);
                                $("#PardotActivityDisplay").append(htm);  
                                console.log('New activity: ' + v.type_name + ' id: ' + v.email_id);
                                activityTypeList.push(v.type_name);

                              }else if(type == v.type_name){
                                htm = constructPardotActivity(v);
                                $("#PardotActivityDisplay").append(htm);  
                                console.log('New activity: ' + v.type_name + ' id: ' + v.email_id);
                                activityTypeList.push(v.type_name);
                              }

                          });

                          //Display Request More button
                          //Add a refresh icon for load more action
                          if(loadMore == false && type == 'Any Type'){
                            var b_htm = '<div class="col-sm-12 form-group detail_div" " style="display: inline;"> '+
                                '     <div class="col-sm-8"> '+ 
                                ' <button class="btn btn-primary btn-xs load-more">Load More</button>' +
                                '     </div> '+
                                ' </div>' +
                                '<div class="col-sm-12 form-group detail_div" " style="display: inline;"> '+
                                '     <div class="col-sm-8"> '+
                                '<i id="pardot-load-refresh" class="detail-busy fa fa-refresh fa-spin" style="font-size: 3rem; float: left; display:none;"></i>' +
                                '     </div> '+
                                ' </div>';
                            $("#PardotActivityDisplay").append(b_htm); 

                          }

                          //Construct Activity Type Filter
                          if(activityTypeList.length!=0 && type == 'Any Type'){
                            $("#activityFilter").empty();
                            //remove duplicates
                            activityTypeList = activityTypeList.filter(function(elem, pos){
                              return activityTypeList.indexOf(elem) == pos;
                            });

                            activityTypeList.push('Any Type');
                            activityTypeList.sort();

                            console.log(activityTypeList);

                            $.each(activityTypeList, function(index, value){
                                var activityFilterHtml;
                                if(value == type){
                                  activityFilterHtml = constructActivityFilter(value, 1);
                                }
                                else{
                                  activityFilterHtml = constructActivityFilter(value, 0);
                                }
                                console.log('filter item: ' + activityFilterHtml);
                                $("#activityFilter").append(activityFilterHtml);
                            });

                          }
                          $("#pardot-refresh").hide();
                          $("#pardot-load-refresh").hide();
                      
                          $("#surgeon-detail i.activities-busy").hide();
                          $("#surgeon-detail a[href=#tab-activities]").show();
                          
                        } 
                          
                        else{
                                //Error handling
                                if(result == null && loadMore == false){
                                  console.log('empty list');
                                htm = '<div class="col-sm-12 form-group detail_div" " style="display: inline;"> '+
                                '     <div class="col-sm-8"> '+ 
                                ' No Activity Available from Pardot' +
                                '     </div> '+
                                ' </div>';
                                  $("#PardotActivityDisplay").html(htm); 

                                }
                                console.log('Status: ' + event.status + ' Type: ' + event.type + ' Message: ' + event.message + ' Where: ' + event.where);
                                //alert(result.Prospect.id);
                                 $("#pardot-refresh").hide();
                                $("#surgeon-detail i.activities-busy").hide();
                                $("#surgeon-detail a[href=#tab-activities]").show();

                          }                                 

                       });
              }
              else{
                console.log('No email found on the surgeon for pardot');

              }

              console.log('Done loadPardotActivity');

            }// end of loadPardotActivity function

 function constructActivityFilter(type, isSelect){

        if(isSelect){
          var html = '<option selected="selected" id="' + type + '" value="' + type + '">' + type + '</option>';
        }
        else{
          var html = '<option id="' + type + '" value="' + type + '">' + type + '</option>';
        }
        console.log(html);
        return html
      }


      function constructPardotActivity(v){
                        if(v.type_name == 'Email'){
                          htm = '<div class="col-sm-12 form-group detail_div" '+ 'pardot-type="Email"'+ 'email-id="' + v.email_id + '" style="display: inline;">' +
                                                        '     <div class="col-sm-1">  '+
                                                        ' <a class="btn btn-primary btn-xs" style="text-decoration: none; color:white;"> ' +
                                                        '         <i class="'+getUIClassForActivity(v.type_name)+' pardot-email-detail""></i></a> '+
                                                        '     </div> '+
                                                        '     <div class="col-sm-8"> '+ 
                                                        '         '+v.type_name+' <br/> '+
                                                        '     '+v.details + ' @' + v.campaign.name+
                                                        '     </div> '+
                                                        '     <div class="col-sm-3"> '+ 
                                                        '         '+ moment(v.created_at).format("YYYY-MM-DD") +
                                                        '     </div> '+
                                                        ' </div>';
                                                  

                        }
                        else if(v.type_name == 'Visit'){                
                          htm = '<div class="col-sm-12 form-group detail_div" pardot-type="Visitor" visit-id="' + v.visit_id + '" style="display: inline;"> '+
                                '     <div class="col-sm-1">  '+
                                '    <a class="btn btn-primary btn-xs" style="text-decoration: none; color:white;"> ' +
                                '<i class="'+getUIClassForActivity(v.type_name)+' pardot-visit-detail"></i> </a>'+
                                '     </div> '+
                                '     <div class="col-sm-8"> '+ 
                                '         '+v.type_name+' <br/> '+
                                '         '+v.details + ': ' + v.campaign.name +
                                '     </div> '+
                                '     <div class="col-sm-3"> '+ 
                                '         '+ moment(v.created_at).format("YYYY-MM-DD") +
                                '     </div> '+
                                ' </div>';

                       }
                        return htm;
                    }   //  end of constructActivity


      function getUIClassForActivity(type){
                        switch(type){
                            case "Visit":
                                return "fa fa-clock-o";
                            //case "SURGICAL CASE":
                              //  return "fa fa-calendar fa-2x fa-inverse fa-border fa-meeting-surgicalcase";
                            case "Email":
                                return "fa fa-envelope-o";
                        }   //  end of switch
                        
                        //fa fa-calendar fa-2x fa-inverse fa-border fa-meeting-background
                    }   //  end of getUIClassForActivity

      function adjustPardotActivityList(type){
        console.log(type + ' selected');
        
        var surgeonEmail = $("#surgeon-detail p.email").text();
        console.log('##--surgeonEmail: '+ surgeonEmail);
        
        //below should be removed when in prod.
        //surgeonEmail = 'mremley@STEELHEADSURGICAL.COM';
        loadPardotActivity(surgeonEmail, type, 0);
        /*if(type == 'Email'){
          $("div[pardot-type='Email']").css("display", "inline");
          $("div[pardot-type='Visitor']").css("display", "none");
        }
        else if(type == 'Visitor'){
          $("div[pardot-type='Email']").css("display", "none");
          $("div[pardot-type='Visitor']").css("display", "inline");

        }
        else{
          
          //$("#PardotActivityDisplay div.detail_div").show();
           $("div[pardot-type='Email']").css("display", "inline");
          $("div[pardot-type='Visitor']").css("display", "inline");

        }*/

 
      }
      
      /*Release 2.2
      Component ID CID:- 000064
      Developer Name:- Mimansha Samal
      Date Added:- 11/9/2016
      Feature:- Populate the Account Typeahead*/
      
      function populateAccounts(){
          $("#add-account-affiliation-modal i.account-busy").show();
          Visualforce.remoting.Manager.invokeAction("CS_ARCCExtension.retrieveProviders",
          function(result, event) {

              // setup the account type ahead options object
              var accountTypeAheadOptions = {
                  minLength: 0,
                  items: 50,
                  source: result,
                  showHintOnFocus: false,
                  displayText: function(item) {
                      return globalDecodeEntities(item.Name);
                  },              
                  afterSelect: function(item) {
                      $("#add-account-affiliation-modal input.account").val(globalDecodeEntities(item.Name));
                      $("#add-account-affiliation-modal input.account").attr("data-record-id", item.Id);
                      
                      if ( $("#add-account-affiliation-modal span[data-record-id="+item.Id+"].ctag").length === 0)
                      {
                          //no duplicates and cant add yourself
                          $("#add-account-affiliation-modal div.ctag-list.account").append(obj2ctag(item));
                      } 
                      $("#add-account-affiliation-modal .account-typeahead").val("");     
                  }
              };
              // init the provider type ahead
              $("#add-account-affiliation-modal input.account-typeahead").typeahead(accountTypeAheadOptions);  
             
              $("#add-account-affiliation-modal i.account-busy").hide();
          });
      }
        //Code added by Ansu for release 2.2/CID-000065 adding surgeon affliations 
        function populateSurgeons(){
          $("#add-surgeon-affiliation-modal i.surgeon-busy").show();
          Visualforce.remoting.Manager.invokeAction("CS_ARCCExtension.retrievePractitioners",
          function(result, event) {
               console.log('sur typeahead=='+result[0].Name);
              // setup the account type ahead options object
              var surgeonTypeAheadOptions = {
                  minLength: 0,
                  items: 50,
                  source: result,
                  showHintOnFocus: false,
                  displayText: function(item) {
                      return globalDecodeEntities(item.Name);
                  },              
                  afterSelect: function(item) {
                      $("#add-surgeon-affiliation-modal input.surgeon").val(globalDecodeEntities(item.Name));
                      $("#add-surgeon-affiliation-modal input.surgeon").attr("data-record-id", item.Id);
                      var practId = item.Id;
    
                                    if ( $("#add-surgeon-affiliation-modal span[data-record-id="+item.Id+"].ctag").length === 0)
                                         {
                                        // no duplicates and can't add yourself
                                        $("#add-surgeon-affiliation-modal div.ctag-list.surgeon").append(obj2ctag(item));
                                    } 
                                    $("#add-surgeon-affiliation-modal .surgeon-typeahead").val("");  
                  }
                  
              };
              //console.log('dr====='+$("#add-surgeon-affiliation-modal div.surgeon").attr("data-record-id")+"===="+item.Id);
              // init the provider type ahead
              $("#add-surgeon-affiliation-modal input.surgeon-typeahead").typeahead(surgeonTypeAheadOptions);  
             
              $("#add-surgeon-affiliation-modal i.surgeon-busy").hide();
          });
      }
      
     function obj2ctag(obj) {
                        var label = globalDecodeEntities(obj.Name);
                        var id = obj.Id;
            
                        var ctag = '<span class="ctag alert alert-info" data-record-id="'+id+'">';
                        ctag += label
                        ctag += '&nbsp;<span data-role="remove-tag"></span></span>';
                        
                        return ctag;
                    }
     function isValidDate(year, month, day) {
                var d = new Date(year, month, day);
                if ((d.getFullYear() == year && d.getMonth() == month && d.getDate() == day)||(month == -1 && day.trim() == "") ){ 
                    return true;
                    }
                return false;
            }
            
     function getMonthFromString(mon){

               var d = Date.parse(mon + "1, 2012");
               if(!isNaN(d)){
                  return new Date(d).getMonth();
               }
           return -1;
         }       
        //Code added by Ansu ends

    $(document).ready(function() {
      
        //displayPractitionerDetail("0015B00000Ef2m8");
        displayPractitionerDetail("001i000000gDdc4");
       // use the summernote RTE instead of the default Salesforce editor, this prevents us from having to have a 
      // dummy object in the controller to render CKEditor
      $("div.rte").summernote({
        height: 150,
        minHeight: null,
        maxHeight: null,
        shortcuts: false,
        toolbar: [
          ['style', ['bold', 'italic', 'underline']],
          ['font', ['strikethrough', 'superscript', 'subscript']],
          ['para', ['ul', 'ol']],
        ]
      }); 
                        
        $('#case-prop-modal').on('show.bs.modal', function (e) { 
        
            $("#case-prop-modal button.case-detail-save-and-btn").hide(); 
            $("#case-prop-modal div#divCaseSurgicalTechnique").hide();
            $("#case-prop-modal select.status option:first").attr('selected','selected');
            //$("#case-prop-modal div#divCaseOwner").hide();
            //$("#case-prop-modal div#divCaseStatus").hide(); 
        }); 

      // init any select2 enabled select elements
      $("select.select2").select2();
      

      // initialize the responsive tabs plugin
      fakewaffle.responsiveTabs(['xs', 'sm', 'md']);


      // set contact link as actice
      $('#mySurgeon').addClass('active');
      $("h2.title-icon-container i").removeClass().addClass("fa fa-group");
        
      // load in the areas of interest list
      Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveAreaOfInterestValues}",
        function(result, event) { 
          for ( var i=0; i < result.length; i++) {
            var txt = globalDecodeEntities(result[i]);
            $("#edit-surgeon-modal select.specialty").append("<option value='"+txt+"'>"+txt+"</option>");
          }          
      });

      // load in the practice focus list
      Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrievePracticeFocusValues}",
        function(result, event) { 
          for ( var i=0; i < result.length; i++) {
            var txt = globalDecodeEntities(result[i]);
            $("#edit-surgeon-modal select.practice-focus").append("<option value='"+txt+"'>"+txt+"</option>");
          }          
      });

      // load in the designation list
      Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveDesignationValues}",
        function(result, event) { 
          for ( var i=0; i < result.length; i++) {
            var txt = globalDecodeEntities(result[i]);
            $("#edit-surgeon-modal select.designation").append("<option value='"+txt+"'>"+txt+"</option>");
          }          
      });

      // load in the salutation list
      Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveSalutationValues}",
        function(result, event) { 
          for ( var i=0; i < result.length; i++) {
            var txt = globalDecodeEntities(result[i]);
            $("#edit-surgeon-modal select.salutation").append("<option value='"+txt+"'>"+txt+"</option>");
          }          
      });
      
      // load in the user type list
      Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveUserTypeValues}",
        function(result, event) { 
          for ( var i=0; i < result.length; i++) {
            if ( result[i].startsWith("Surgeon") ) {
              var txt = globalDecodeEntities(result[i]);
              $("#edit-surgeon-modal select.user-type").append("<option value='"+txt+"'>"+txt.split(" - ")[1]+"</option>");
            }
          }
      });
      
      // load in the gender list
      Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveGenderValues}",
        function(result, event) { 
          for ( var i=0; i < result.length; i++) {
            var txt = globalDecodeEntities(result[i]);
            $("#edit-surgeon-modal select.gender").append("<option value='"+txt+"'>"+txt+"</option>");
          }      
      }); 
             
      //Release 2.2/CID - 000065/Ansu Routray/Dec.16.2016/Get picklist values for account details modal  
       Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveBusinessHourValues}",
        function(result, event) { 
          for ( var i=0; i < result.length; i++) {
            var txt = globalDecodeEntities(result[i]);
            $("#account-detail-modal select.businessHourStartTime").append("<option value='"+txt+"'>"+txt+"</option>");
            $("#account-detail-modal select.businessHourEndTime").append("<option value='"+txt+"'>"+txt+"</option>");
          }      
      }); 
      Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveSterileProcessingHourValues}",
        function(result, event) { 
          for ( var i=0; i < result.length; i++) {
            var txt = globalDecodeEntities(result[i]);
            $("#account-detail-modal select.SterileProcessingHourStartTime").append("<option value='"+txt+"'>"+txt+"</option>");
            $("#account-detail-modal select.SterileProcessingHourEndTime").append("<option value='"+txt+"'>"+txt+"</option>");
          }      
      });
      Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveFiscalYearDayValues}",
        function(result, event) { 
          for ( var i=0; i < result.length; i++) {
            var txt = globalDecodeEntities(result[i]);
            //$("#account-detail-modal select.AccountFiscalYearStartDay").append("<option value='"+txt+"'>"+txt+"</option>");
            $("#account-detail-modal select.AccountFiscalYearEndDay").append("<option value='"+txt+"'>"+txt+"</option>");
          }      
      });
      Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveFiscalYearMonthValues}",
        function(result, event) { 
          for ( var i=0; i < result.length; i++) {
            var txt = globalDecodeEntities(result[i]);
            //$("#account-detail-modal select.AccountFiscalYearStartMonth").append("<option value='"+txt+"'>"+txt+"</option>");
            $("#account-detail-modal select.AccountFiscalYearEndMonth").append("<option value='"+txt+"'>"+txt+"</option>");
          }      
      });
      
      //Code added by Ansu ends
      
      // institution typeaheads
      $("#surgeon-bio-modal input.institution-typeahead").typeahead({
          minLength: 2,
          source: function(query, onSuccess) {
              Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.searchInstitutions}",
              query, function(result, event) {
                  if (event.status) {
                      onSuccess(result);
                  } else {
                      console.log("Errors returned but no error handler found");
                  }
              });
          },
          displayText: function(item) {
              return globalDecodeEntities(item.Name);
          },
          afterSelect: function(item) {
              
              // set the record id on the bound input element
              var input = $(this)[0].$element;
              $(input).attr("data-record-id", item.Id);
          }
      });

      // load in the state list
      /* not working for some reason 
      Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveStateValues}",
        function(result, event) { 
          for ( var i=0; i < result.length; i++) {
            console.log(result[i]);
            $("#edit-surgeon-modal select.state").append("<option value='"+result[i]+"'>"+result[i]+"</option>");
          }      
      });      
      */

      // Given a select.multi-select retrieve the ctag record ids in a semicolon
      // delimitted string
      var getMultiSelectValues = function getMultiSelectValues(el) {
          var ctags = "";
          $(el).next("div.ctag-list").children().each(function() {
              var val = $(this).attr("data-record-id");
              ctags += val+";";
          });          
          return ctags.substring(0, (ctags.length-1)); // trims off the trailing semicolon
      };
        
      // Marks a select option as selected based on the option label for the given select element (supports multi-select)
      var setSelectedValueByLabel = function setSelectedValueByLabel(el, label) {
          
          if ( Array.isArray(label) ) {
            // this is an array of values so a multi-select
            
            for ( var i=0; i < label.length; i++) {
                // add ctags
                val = "0";
               $(el).find("option").each(function() {
                  if ( $(this).text() === label[i] ) {
                      val = $(this).val();
                        var tag = '<span class="ctag alert alert-info" data-record-id="'+val+'">';
                        tag += globalDecodeEntities(label[i])+'&nbsp;<span data-role="remove-tag"></span></span>';
                        $(el).next("div.ctag-list").append(tag);
                    }
                });             
            }
              
          } else {
              // single select, just set the val, if we can't find by label then just set the val and hope for the best
              var found = false;
              $(el).find("option").each(function() {
                if ( $(this).text() === label ) {
                  val = $(this).val();
                    $(el).val(val);
                    found = true;
                }
              });

              if ( !found ) {
                $(el).val(label);
              }
          }
      };
                
      // cool tab based multi-select support for picklists
      $("select.multi-select").on("change", function(e) {
         
          var val = $(this).val();
          var isDup = ( $(this).next("div.ctag-list").find("span.ctag[data-record-id='"+val+"']").length > 0 );
          if ( val != "0" && !isDup ) {
             var label = $(this).find("option[value='"+val+"']").text();
             var tag = '<span class="ctag alert alert-info" data-record-id="'+val+'">';
             tag += label+'&nbsp;<span data-role="remove-tag"></span></span>';
             $(this).next("div.ctag-list").append(tag);
          }  
          // reset back to "- SElect -"
          $(this).val("0");
          
      });   
        
      
      // init date fields
      $("#edit-surgeon-modal div.birthdate-container").datetimepicker({ 
              stepping:30,
              useCurrent: true,
              showClose: true,
              ignoreReadonly: true,
              format: 'MM/DD/YYYY'
          });

      function openCaseModalFromCaseId(caseId) {
        Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveCalendarEventDTOByCaseId}",
        caseId,
        function(calEvent, event) {

          $("#case-prop-modal").attr("data-record-id",calEvent.url);

          $("#case-prop-modal").attr("data-calevent-id",calEvent.id);
          $("#case-prop-modal input.provider").attr("data-record-id", calEvent.providerId);
          $("#case-prop-modal input.provider").val( globalDecodeEntities(calEvent.provider) );
          $("#case-prop-modal input.practitioner").attr("data-record-id", calEvent.practitionerId);
          $("#case-prop-modal input.practitioner").val( globalDecodeEntities(calEvent.practitioner) );
          $("#case-prop-modal textarea.notes").val( globalDecodeEntities(calEvent.description) );
          $("#case-prop-modal input.start-date").val(moment(calEvent.startDate).format("MM/DD/YYYY h:mm A"));
          $("#case-prop-modal input.end-date").val(moment(calEvent.endDate).format("MM/DD/YYYY h:mm A"));

          
                  
          // turn on the export button
          $("#case-prop-modal button.case-export-btn").show();

          // turn off save button
          $("#case-prop-modal button.case-save-btn").hide();
          $("#case-prop-modal button.case-save-and-btn").hide();
          $("#case-prop-modal button.btn-add-taxonomy").hide();
         
          
          //hide picklistrow
          $("#case-prop-modal .trhidePicklistRow").hide();
          // viewing 
          $("#case-prop-modal span.modal-title-txt").text("View Case");
          
          console.log('##--case title: '+ $("#case-prop-modal span.modal-title-txt").text());                                                         
          // make everthing read only
          $("#case-prop-modal input").attr("disabled",true);
          $("#case-prop-modal select").attr("disabled",true);
          $("#case-prop-modal span[data-role=remove-tag]").off("click");
          
          // show the modal
          $("#case-prop-modal").modal('show');
          
          if ( calEvent.status == null ) {
            $("#case-prop-modal select.status option:first").attr('selected','selected');
          } else {
            $("#case-prop-modal select.status").val(calEvent.status);
          }
          //displayPrefCardProdDetails("#case-prop-modal", "#tableTaxonomy", calEvent.lstCaseProceduresWrapper, false);  
          populateOwnerInfo(calEvent.ownerId);
                 
        });
      }
      

      function search(q, controllerMethod, successCallback, errorCallback) {
              // calls a search method on the controller, method passed in as a param

        Visualforce.remoting.Manager.invokeAction(controllerMethod,
              q,
              function(result, event) {
                  if (event.status) {
                      successCallback(result);
                  } else {
                      if ( typeof errorCallback === 'function' ) {
                          errorCallback(event);
                      } else {
                          console.log("Errors returned but no error handler found");
                      }
                  }
              });
          
          }
     

          function formatAddress(streetStr, cityStr, stateStr, zipStr, countryStr) {

            var address = "";
            var street = streetStr || "";
            var city = cityStr || "";
            var zip = zipStr || "";
            var state = stateStr || "";
            var country = countryStr || "";

            if ( street.length > 0 ) {
              address = street+"<br/>";
            }

            if ( city.length > 0 ) {
              address += city+", ";
            }
            address +=  state+" "+zip;

            if ( address.length > 0 ) { address += " "; }
            address += country;

            return address;
          }

          function displayProviderDetail(accountId) {
            $("#surgeon-detail").hide();
            $("#provider-detail").show();       
            
            $("#provider-detail table.table-contacts tbody").empty();
            $("#provider-detail div.nickname").text("");
            $("#provider-detail p.website").text("");
           
            $("#provider-detail p").text("");
            $("#provider-detail button.new-contact-btn").attr("data-record-id",accountId);

            $("i.detail-busy").show();
        
        Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveProvider}",
          accountId,     
                function(result, event) {
                  $("i.detail-busy").hide();

                  $("#edit-provider-detail-modal").attr("data-record-id", result.Id);
                  
                  $("#provider-detail div.nickname").text(globalDecodeEntities(result.Preferred_Name__c) || "None");
                  $("#provider-detail p.website").text(globalDecodeEntities(result.Website) || "No website available");
                  $("#provider-detail p.sap-name").text(globalDecodeEntities(result.Name) || "None");
                  $("#provider-detail p.number").text(result.Customer_Number__c || "None");
                  $("#provider-detail p.phone").text(result.Phone || "None");
                  $("#provider-detail p.fax").text(result.Fax || "None");

                  
                  var street = globalDecodeEntities(result.ShippingStreet) || "";
                  var city = globalDecodeEntities(result.ShippingCity) || "";
                  var zip = result.ShippingPostalCode || "";
                  var state = result.ShippingState || "";
                  var country = result.ShippingCountryCode || "";

                  var address = formatAddress(street, city, state, zip, country);

                  $("#provider-detail p.address").html(address);
                  
                  displayProviderRelatedContacts(accountId);
                  
                  //Code added by Ansu for release 2.2/CID-000065 
                  displayProviderRelatedSurgeons(accountId);
                  var Credentialing_Company = result.Credentialing_Company__c ? $("<div/>").html(result.Credentialing_Company__c ).text() : "";
                  var SignInLocation = result.Sign_In_Location__c? $("<div/>").html(result.Sign_In_Location__c).text() : "";
                  var RepresentativeParking= result.Representative_Parking__c? $("<div/>").html(result.Representative_Parking__c).text() : "";
                  var OperatingRoomLocation= result.Operating_Room_Location__c? $("<div/>").html(result.Operating_Room_Location__c).text() : "";
                  var SterileProcessingLocation= result.Sterile_Processing_Location__c? $("<div/>").html(result.Sterile_Processing_Location__c).text() : "";
                  var RequiredtoChangeScrubs= result.Required_to_Change_Scrubs__c? $("<div/>").html(result.Required_to_Change_Scrubs__c).text() : " ";
                  var OtherAttireNotes= result.Other_Attire_Notes__c ? $("<div/>").html(result.Other_Attire_Notes__c ).text() : "";
                  var SterileProcessingHours= (result.Sterile_Processing_Hours_Start__c || result.Sterile_Processing_Hours_End__c ) ? $("<div/>").html(globalDecodeEntities((result.Sterile_Processing_Hours_Start__c || " ")+ '-' +(result.Sterile_Processing_Hours_End__c || " "))).text() : " ";
                  var time= (result.Business_Hours_Start__c || result.Business_Hours_End__c)? $("<div/>").html(globalDecodeEntities((result.Business_Hours_Start__c || " ")+ '-' +(result.Business_Hours_End__c || " "))).text() : " ";
                  var AccountFiscalYear = (result.Account_Fiscal_Year_End_Day__c && result.Account_Fiscal_Year_End_Month__c)? $("<div/>").html(globalDecodeEntities(result.Account_Fiscal_Year_End_Month__c+ ' ' +result.Account_Fiscal_Year_End_Day__c)).text() : " ";
                  //var AccountFiscalYearEnd = result.Account_Fiscal_Year_End_Day__c? $("<div/>").html(globalDecodeEntities(result.Account_Fiscal_Year_End_Day__c+ ' ' +result.Account_Fiscal_Year_End_Month__c)).text() : " ";
                    
                  
                  $("#tab-account-details div.credentialcompany").text(Credentialing_Company.replace(/;/g, ", "));
                  $("#tab-account-details div.SignInLocation").text(SignInLocation.replace(/;/g, ", "));
                  $("#tab-account-details div.RepresentativeParking").text(RepresentativeParking.replace(/;/g, ", "));
                  $("#tab-account-details div.OperatingRoomLocation").text(OperatingRoomLocation.replace(/;/g, ", "));
                  $("#tab-account-details div.SterileProcessingLocation").text(SterileProcessingLocation.replace(/;/g, ", "));
                  $("#tab-account-details div.RequiredtoChangeScrubs").text(RequiredtoChangeScrubs.replace(/;/g, ", "));
                  $("#tab-account-details div.OtherAttireNotes").text(OtherAttireNotes.replace(/;/g, ", "));
                  $("#tab-account-details div.SterileProcessingHours").text(SterileProcessingHours.replace(/;/g, ", "));                 
                  $("#tab-account-details div.time").text(time.replace(/;/g, ", "));                 
                  $("#tab-account-details div.AccountFiscalYear").text(AccountFiscalYear.replace(/;/g, ", "));                 
                  //$("#tab-account-details div.AccountFiscalYearEnd").text(AccountFiscalYearEnd.replace(/;/g, ", "));                 
                  
                  Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveTerritoryForPractitioner}",
                  accountId, function(result, event) {
                    console.log('HCPId in territory-----------------'+accountId+'result--'+result);
                    var assignedTo = '';               
                    if( result.length > 0 )
                    {
                        for ( var i=0; i < result.length; i++) {
                        
                            assignedTo += ", " + globalDecodeEntities(result[i]).replace(/,/g , "");                        
                        }
                    }
                    
                    console.log('assignedTo =='+assignedTo );                   
                    $("#tab-account-details div.AssignedTo").text( assignedTo.substring(2) || "None" ); 

                 });
                 
                 //Code by Ansu ends
                    
                });

          } // End of displayProviderDetail

          function displayProviderRelatedContacts(accountId) {

            $("#provider-contact-modal").attr("data-account-id", accountId);

            $("i.contact-busy").show();   
              Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveProviderContacts}",
              accountId,
              function(results, event) {


                  var rows = [];
                  for ( var i=0; i < results.length; i++) {

                    rows.push({
                      name: globalDecodeEntities(results[i].LastName)+", "+globalDecodeEntities(results[i].FirstName),
                      title: globalDecodeEntities(results[i].Title),
                      email: results[i].Email,
                      phone: results[i].Phone,
                      contact: results[i]
                    });

                  }

                  // init the bootstrap table witih sorting
                  $("#provider-detail table.table-contacts").bootstrapTable('destroy');
                  $("#provider-detail table.table-contacts").bootstrapTable({
                      sortable: true,
                      pagination: true,
                      classes: "table-no-bordered table-striped table-hover",
                      onClickRow: function(rowData, $element) {
                          $("#spnPhone").html("validated").hide();
                          $("#spnMobilePhone").html("validated").hide();
                          
                          $("#provider-contact-modal").attr("data-record-id", rowData.contact.Id);
                          
                          
                          $("#provider-contact-modal input.firstName").val(rowData.contact.FirstName);
                          $("#provider-contact-modal input.lastName").val(rowData.contact.LastName);
                          $("#provider-contact-modal input.title").val(rowData.contact.Title);
                          $("#provider-contact-modal input.email").val(rowData.contact.Email);
                          $("#provider-contact-modal input.phone").val(rowData.contact.Phone);
                          $("#provider-contact-modal input.mobile").val(rowData.contact.MobilePhone);
                          $("#provider-contact-modal input.street").val(rowData.contact.MailingStreet);
                          $("#provider-contact-modal input.city").val(rowData.contact.MailingCity);
                          $("#provider-contact-modal select.state").val(rowData.contact.MailingState);
                          $("#provider-contact-modal input.zip").val(rowData.contact.MailingPostalCode);
                          $("#provider-contact-modal textarea.notes").val(rowData.contact.Description); 


                          $("#provider-contact-modal button.btn-delete").show();
                          $("#provider-contact-modal").modal("show");
                                                                   
                      },
                      columns: [{
                          field: 'name',
                          title: 'Name',
                          sortable: true,
                      }, {
                          field: 'title',
                          title: 'Title',
                          sortable: true
                      },{
                          field: 'email',
                          title: 'Email',
                          sortable: true,
                      },{
                          field: 'phone',
                          title: 'Phone',
                          sortable: true,
                      }],
                      data: rows
                  });
/*
                    var row = "<tr data-record-id='"+results[i].Id+"'><td>";
                    row += "<div class='clearfix'>";
                    row += "<div class='pull-left'>"+results[i].Contact__r.LastName+", "+results[i].Contact__r.FirstName+"</div>";
                    row += "<div class='pull-right'><button class='btn btn-sm btn-danger btn-del-contact'>Delete</button></div>";
                    row += "</div>";
                    row += "</td></tr>"
                    $("#provider-detail table.contacts tbody").append(row); 
*/
                
                $("i.contact-busy").hide();
            });
          }
          //Code added by Ansu forAccount Affiliations tab release 2.2/CID-000065  change 
          function displayProviderRelatedSurgeons(accountId) {
                
            $("#add-surgeon-affiliation-modal").attr("data-account-id", accountId);
            $("#provider-contact-modal").attr("data-account-id", accountId);
            console.log('affiliation tab');
            $("i.contact-busy").show();   
              Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveSurgeonAffiliationsByAccount}",
              accountId,
              function(results, event) {

                  console.log('resultsSur==='+results[0]+'accountId=='+accountId+'results[0].Account_p__r.FirstName');
                  var rows = [];
                  var assignedTeams = '';
                  var practitionerId;
                  
                  var assignedTeams = []; 
                  Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveTerritoryForPractitioners}",
                  accountId, function(result, event) {
                  
                    console.log('PractitionerId-----------------'+accountId);             
                    if( result.length > 0 )
                    {
                    console.log('PractitionerId in territory-----------------'+accountId+'result=='+result[0].Territory2.Name);
                    
                        for ( var i=0; i < result.length; i++) {
                       var terrString="";
                            for ( var j=0; j < result.length; j++) {
                            if(result[i].ObjectId==result[j].ObjectId)
                             terrString+= ", " + globalDecodeEntities(result[j].Territory2.Name).replace(/,/g , ""); 
                        
                         } 
                         assignedTeams.push({
                         practitioner:result[i].ObjectId,
                         assignedTerr:terrString
                         
                         })    //assignedTeam += ", " + globalDecodeEntities(result[i]).replace(/,/g , "");                        
                        }
                    console.log('assignedTeams----------------'+assignedTeams[0].assignedTerr)    ;               

                    }
                    
                  
                 var htm="";
                 for ( var i=0; i < results.length; i++) {
                    practitionerId=globalDecodeEntities(results[i].Account_p__c);
                    var team="";
                    for(var j=0; j < assignedTeams.length; j++)
                    {
                     //console.log('assignedTeams in loop----------------'+assignedTeams[j].assignedTerr+'assignedTeams[j].practitioner=='+assignedTeams[j].practitioner+'practitionerId=='+practitionerId) 
                     if(assignedTeams[j].practitioner==practitionerId )
                      team=assignedTeams[j].assignedTerr;
                    }
                    console.log('team =='+team+'results.Full_Name__c'+results[i].Full_Name__c);
                    var typeStr=results[i].Surgeon_Type__c || " ";
                    var splitStr= typeStr.split("-");
                    rows.push({
                      name: globalDecodeEntities(results[i].Full_Name__c || " "),
                      designation: globalDecodeEntities(results[i].Surgeon_Designation__c || " ").substring(0,(globalDecodeEntities(results[i].Surgeon_Designation__c || " ").length)-1),
                      email: results[i].Person_Email__c || " ", //PersonEmail,
                      phone: results[i].Surgeon_Phone__c || " ",
                      type: globalDecodeEntities(splitStr[1] || " "), //User_Type__pc,
                      teams: team.substring(2) || " ",
                      surgeonAffiliation: results[i]
                    });
                   htm += "<div id='"+results[i].Id+"' data-surgeon-id='"+results[i].Account_p__c+"'></div>";
                            
                   
                  }
                  $("#surgeonsTag").html(htm);
                  
                  // init the bootstrap table witih sorting
                  $("#provider-detail table.table-surgeons").bootstrapTable('destroy');
                  $("#provider-detail table.table-surgeons").bootstrapTable({
                      sortable: true,
                      pagination: true,
                      classes: "table-no-bordered table-striped table-hover",
                      onClickRow: function(rowData, $element) {
                          
                            $("#add-surgeon-affiliation-modal").attr("data-record-id", rowData.surgeonAffiliation.Id);
                            $("#add-surgeon-affiliation-modal input.surgeon-typeahead").val(rowData.surgeonAffiliation.Account_p__r.Name);
                            $("#add-surgeon-affiliation-modal").attr("data-surgeon-id", rowData.surgeonAffiliation.Account_p__c);
                            $(this).attr("data-surgeon-id", rowData.surgeonAffiliation.Account_p__c);
                            $("#add-surgeon-affiliation-modal button.btn-delete").show();
                            $("#add-surgeon-affiliation-modal button.btn-save").hide();                    
                            $("#add-surgeon-affiliation-modal").modal("show");
                            $("#add-surgeon-affiliation-modal input").attr("disabled",true);
                                                                   
                      },
                      columns: [{
                          field: 'name',
                          title: 'Full Name',
                          sortable: true,
                      }, {
                          field: 'designation',
                          title: 'Designation',
                          sortable: true
                      }, {
                          field: 'type',
                          title: 'Surgeon Type',
                          sortable: true
                      },{
                          field: 'email',
                          title: 'Email',
                          sortable: true,
                      },{
                          field: 'phone',
                          title: 'Phone',
                          sortable: true,
                      },{
                          field: 'teams',
                          title: 'Teams',
                          sortable: true,
                      }],
                  
                      data: rows
                  });

                });
                
                $("i.contact-busy").hide();
            });
            //Display typeahead for surgeon affliations                
             populateSurgeons();
          }
          
          
          //Code added by Ansu for Release 2.2/CID-000065 account requirement--edit modal
           $("#provider-detail button.edit-accountDetail-btn").on("click", function() {
           
               
               var strpos=($("#tab-account-details div.SterileProcessingHours")).text().search("-");
               var busstrpos=($("#tab-account-details div.time")).text().search("-");
               var yrpos=($("#tab-account-details div.AccountFiscalYear")).text().search("-");
               var yrstrtdate=($("#tab-account-details div.AccountFiscalYear").text().substring(0, yrpos));
               var yrenddate=($("#tab-account-details div.AccountFiscalYear").text().substring(yrpos+1));
               var yrstrtstrpos=yrstrtdate.trim().search(" ");
               var yrendstrpos=yrenddate.trim().search(" ");
               bsHourStrtTime=($("#tab-account-details div.time")).text().split("-");
               SterilHourStrtTime=($("#tab-account-details div.SterileProcessingHours")).text().split("-");
               //console.log('bsHourStrtTime=='+bsHourStrtTime+'SterilHourStrtTime=='+SterilHourStrtTime+'strpos=='+strpos+'busstrpos=='+busstrpos+'yrendstrpos=='+yrendstrpos);
               //console.log('bsHourStrtTime=='+( (bsHourStrtTime!=" "? bsHourStrtTime[1].trim() : " "))+'SterilHourStrtTime=='+( (SterilHourStrtTime!=" "?SterilHourStrtTime[1].trim() : " " )) );
             
            // populate the fields from the detail
              $("#account-detail-modal input.credentialcompany").val( $("#tab-account-details div.credentialcompany").text() );
              $("#account-detail-modal input.SignInLocation").val( $("#tab-account-details div.SignInLocation").text() );
              $("#account-detail-modal input.RepresentativeParking").val( $("#tab-account-details div.RepresentativeParking").text() );
              $("#account-detail-modal select.SterileProcessingHourStartTime ").val((SterilHourStrtTime!=" "?(SterilHourStrtTime[0].trim()!=""?SterilHourStrtTime[0].trim():" ") : " " ));
              $("#account-detail-modal select.SterileProcessingHourEndTime ").val((SterilHourStrtTime!=" "?(SterilHourStrtTime[1].trim()!=""?SterilHourStrtTime[1].trim():" ") : " " ));
              $("#account-detail-modal select.businessHourStartTime").val( (bsHourStrtTime!=" "? (bsHourStrtTime[0].trim()!=""?bsHourStrtTime[0].trim():" ") : " "));
              $("#account-detail-modal select.businessHourEndTime").val( (bsHourStrtTime!=" "? (bsHourStrtTime[1].trim()!=""?bsHourStrtTime[1].trim():" ") : " "));
              //$("#account-detail-modal select.AccountFiscalYearStartDay").val( yrstrtdate.trim().substring(yrstrtstrpos+1) || " ");
              //$("#account-detail-modal select.AccountFiscalYearStartMonth").val( yrstrtdate.trim().substring(0, yrstrtstrpos) || " ");
              $("#account-detail-modal select.AccountFiscalYearEndDay").val( yrenddate.trim().substring(yrendstrpos+1) || " ");
              $("#account-detail-modal select.AccountFiscalYearEndMonth").val( yrenddate.trim().substring(0, yrendstrpos) || " ");
              
              $("#account-detail-modal input.OtherAttireNotes").val( $("#tab-account-details div.OtherAttireNotes").text() );
              $("#account-detail-modal input.OperatingRoomLocation").val( $("#tab-account-details div.OperatingRoomLocation").text() );
              $("#account-detail-modal input.SterileProcessingLocation").val( $("#tab-account-details div.SterileProcessingLocation").text() );
              $("#account-detail-modal select.RequiredtoChangeScrubs").val( $("#tab-account-details div.RequiredtoChangeScrubs").text() );
             

              // replace '<br/>' with newlines for display in textarea
              var address = $("#provider-detail p.address").html().replace(/\<br\>/g, "\n").replace(/\<br \/\>/g, "\n")
             // $("#edit-provider-detail-modal textarea.address").val( address );

              // clear any old errors before we bring up the modal
              $("#account-detail-modal .error").text("");

                $("#account-detail-modal").modal("show");
                
                $("#provider-detail i.edit-busy").hide();
            });
          //Code added by Ansu for Surgeon Affiliations tab release 2.2/CID-000065 change ends
          
          //Code added by Ansu for edit Surgeon affliations release 2.2 
          //Cancel Add surgeon Affiliation Modal
          $("#add-surgeon-affiliation-modal button.btn-cancel").on("click", function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            $("#add-surgeon-affiliation-modal input").val("");
            //$("#add-surgeon-affiliation-modal").attr("data-account-id", "");
            $("#add-surgeon-affiliation-modal").attr("data-record-id", "");

            $("#add-surgeon-affiliation-modal button.btn-delete").hide();
            var accountId = $("#add-surgeon-affiliation-modal").attr("data-account-id");
            console.log('account ID in Close--'+accountId );
            displayProviderRelatedSurgeons(accountId);
            $("#add-surgeon-affiliation-modal #affiliationErrors").html('');
            $("#add-surgeon-affiliation-modal").modal("hide");

          });
          
          $('#add-surgeon-affiliation-modal').on('hidden.bs.modal', function (e) {
                        $('#add-surgeon-affiliation-modal input.clear-on-close').val('');
                        $('#add-surgeon-affiliation-modal select.clear-on-close').val('');
                        $("#add-surgeon-affiliation-modal button.btn-delete").hide();
                        $("#add-surgeon-affiliation-modal button.btn-save").show();
                        $("#add-surgeon-affiliation-modal #affiliationErrors").html('');
                        $("#add-surgeon-affiliation-modal div.ctag-list.surgeon").empty();
                        $("#add-surgeon-affiliation-modal input").removeAttr("disabled");
                        
                       
          });
          
          // Delete surgeon affiliation for account
          $("#add-surgeon-affiliation-modal button.btn-delete").on("click", function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            var affiliationId = $("#add-surgeon-affiliation-modal").attr("data-record-id");
            var accountId = $("#add-surgeon-affiliation-modal").attr("data-account-id");
            
            console.log('Affiliation ID to be deleted----'+affiliationId+'accountId =='+accountId );
            
            var btnTxt = $("#add-surgeon-affiliation-modal button.btn-delete").text();
            $("#add-surgeon-affiliation-modal #affiliationErrors").text("");
            $("#add-surgeon-affiliation-modal button.btn-delete").text("Deleting...");
            $("#add-surgeon-affiliation-modal button").attr("disabled",true);
            Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.deleteSurgeonAffiliation}", 
              affiliationId, function(result, event) {

              if(event.statusCode == 200){   
                  $("#add-surgeon-affiliation-modal button.btn-delete").text(btnTxt);
                  $("#add-surgeon-affiliation-modal button").removeAttr("disabled");

                  $("#add-surgeon-affiliation-modal input").val("");                  
                  $("#add-surgeon-affiliation-modal save-error").text("");

                  $("#add-surgeon-affiliation-modal").attr("data-record-id", "");
                  $("#add-surgeon-affiliation-modal").attr("data-surgeon-id", "");

                  displayProviderRelatedSurgeons(accountId);

                  $("#add-surgeon-affiliation-modal").modal("hide");
              }
              else{
                  $("#add-surgeon-affiliation-modal #affiliationErrors").html('Unexpected error. Please try again.');
                  $("#add-surgeon-affiliation-modal button.btn-delete").text(btnTxt);
                  $("#add-surgeon-affiliation-modal button").removeAttr("disabled");
              }                  

            });

          }); 
          
           $("#add-surgeon-affiliation-modal button.btn-save").on("click", function() {
                        console.log('enter');
                        $('#add-surgeon-affiliation-modal #affiliationErrors').html('');
                        var surgeons = [];
                        var surgeonAlreadyExistsError = false;
                        populateSurgeons();
                        var accountId = $("#add-surgeon-affiliation-modal").attr("data-account-id");
                        
                        $("#add-surgeon-affiliation-modal div.surgeon").children().each(function() {
                            var surgeonId =$(this).attr("data-record-id");
                                                            
                                console.log('surgeonId =='+accountId +'=='+surgeonId );
                                if($('#surgeonsTag').children('div[data-surgeon-id='+surgeonId+']' ).length != 0){
                                    surgeonAlreadyExistsError = true;
                                }else{
                                    if($(this).attr("data-record-id")!=" " && $(this).attr("data-record-id")!=null ){
                                    surgeons.push($(this).attr("data-record-id"));
                                    }
                                }
                                                    
                         }); 
                        console.log('surgeons===='+surgeons.length);
                        if(surgeonAlreadyExistsError){
                            $("#add-surgeon-affiliation-modal #affiliationErrors").html('Surgeon already exists. Please add a different surgeon.');
                        }else if (! surgeons.length == 0 ){
                           Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.saveSurgeonAffiliations}",
                                accountId,
                                surgeons,
                                function(result, event) {  
                                    
                                if(event.statusCode == 200){
                            
                                    $('#add-surgeon-affiliation-modal').modal('hide'); 
                                    displayProviderRelatedSurgeons(accountId);
                                   
                                } else{
                                    $("#add-surgeon-affiliation-modal #affiliationErrors").html('Unexpected error. Please try again.');
                                }
                              });   //  end of remote call
                            
                        } else{
                            console.log('enters save null error22222');  
                            $("#add-surgeon-affiliation-modal #affiliationErrors").html('Please select atleast one surgeon.');
                            
                        } 
                        
                    }); //  end of surgeon add type modal.save click   
          //Code added by Ansu ends

          function displayPractitionerDetail(practitionerId) {
            
            $("#surgeon-detail").show();
            $("#provider-detail").hide();
            

            $("#surgeon-detail h2.name").text("");
            $("#surgeon-detail p").text("");
            //alert(practitionerId);
            $("#surgeon-detail img.profile-pic").hide();                     
            $("i.detail-busy").show();
            
            Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrievePractitioner}",
        practitionerId, function(result, event) {
          
            
          $("i.detail-busy").hide();
          $("#surgeon-detail img.profile-pic").attr("src", result.Profile_Picture__c).show();
          
          var name = globalDecodeEntities(result.FirstName)+" "+globalDecodeEntities(result.LastName);
          if ( result.Salutation ) {
            name = globalDecodeEntities(result.Salutation)+" "+name;
          }

          pardotEmail = result.PersonEmail;

          // Main header section
          $("#surgeon-detail h2.name").text(name);
          $("#surgeon-detail p.organization").text(globalDecodeEntities(result.Practice_Name__c));
          $("#surgeon-detail p.email").text(result.PersonEmail);
          $("#surgeon-detail p.phone").text(result.Phone);
          $("#surgeon-detail p.mobilePhone").text(result.PersonMobilePhone);

          // this button and 2 links are only visible on tablet and smaller devices
          $("#surgeon-detail button.create-case").attr("data-practitioner-name", name );
          $("#surgeon-detail button.create-case").attr("data-practitioner-id", result.Id);

          $("#surgeon-detail a.mail").attr("href","mailto:"+result.PersonEmail );
          if ( typeof result.PersonEmail == "undefined" || result.PersonEmail.length === 0 ) {
            $("#surgeon-detail a.mail").attr("disabled","true");
          }

          $("#surgeon-detail a.telephone").attr("href", "tel:"+result.Phone );
          if ( typeof result.Phone == "undefined" || result.Phone.length === 0  ) {
              $("#surgeon-detail a.telephone").attr("disabled","true");
          }
          // end button and links only visible on tablet and smaller devices          
            
          var focusOfMyPractice = result.Focus_of_my_practice__pc ? $("<div/>").html(result.Focus_of_my_practice__pc).text() : "";
          $("#surgeon-detail p.practice-focus").text(focusOfMyPractice.replace(/;/g, ", ")); 
                     
          //Release 2.2- Surgeon req
          //CID:- 000064
          //Developer:- Mimansha
          //Date:- 12/2/2016
          //Purpose:- Display the value of Opt out of Email field
          var optOut = result.PersonHasOptedOutOfEmail;
          if ( optOut ) {
               $("#surgeon-detail p.email-opt-out").text("Does Not Accept Email");
            //$("#surgeon-detail input.email-opt-out").prop("checked", true);
          } else {
                  $("#surgeon-detail p.email-opt-out").text("Accept Email");
                //$("#surgeon-detail input.email-opt-out").prop("checked", false);
          }
          
          //Release 2.2- Surgeon req
          //CID:- 000064
          //Developer:- Mimansha
          //Date:- 12/2/2016
          //Purpose:- Display the value of Consultant Status field
          var consultantStatus = result.Consultant__c;
          if ( consultantStatus ) {               
              $("#tab-contacts input.consultant-status").prop("checked", true);
          } else {                 
                $("#tab-contacts input.consultant-status").prop("checked", false);
          }

          $("#tab-contacts div.title").text(globalDecodeEntities(result.PersonTitle) || "None");
          $("#tab-contacts div.npi").text(result.NPI__pc);

          var birthDateStr = "None";
          if ( result.PersonBirthdate) {
            birthDateStr = moment(result.PersonBirthdate).format("MM/DD/YYYY")
          }          
          $("#tab-contacts div.birthdate").text(birthDateStr);
          
          
          if(result.Gender__c != '0')
          {
              $("#tab-contacts div.gender").text(result.Gender__c);
          }
          else{
              $("#tab-contacts div.gender").text("");
          }
          
          $("#tab-contacts div.lang").text( globalDecodeEntities(result.Native_Language__c));
          
          console.log('User Type is---'+result.User_Type__pc);
          if(result.User_Type__pc != null && result.User_Type__pc != '0'){
              var userType = result.User_Type__pc;
              var userTypeElems = userType.split(" - ");
              if (userTypeElems.length > 1 ) {
                  userType = userTypeElems[1];
              }
              $("#tab-contacts div.user-type").text(userType);
          }
          else{
              $("#tab-contacts div.user-type").text("");
          }
          
          
          $("#tab-contacts div.assigned-sales-rep-email").text(result.Assigned_Sales_Rep_Email__pc || "None");

          var areaOfInterest = result.Arthrex_com_Surgeon_Specialty__pc ? $("<div/>").html(result.Arthrex_com_Surgeon_Specialty__pc).text() : "";

          $("#tab-contacts div.area-of-interest").text(areaOfInterest.replace(/;/g, ", ")); 
            
          var designation = result.Designation__pc ? $("<div/>").html(result.Designation__pc).text() : "";
          $("#tab-contacts div.designation").text(designation.replace(/;/g, ", "));                        
          $("#tab-contacts button.edit-surgeon-btn").attr("data-record-id",practitionerId);
        
          var mStreet = globalDecodeEntities(result.PersonMailingStreet);
          var mCity = globalDecodeEntities(result.PersonMailingCity);
          var mState = globalDecodeEntities(result.PersonMailingState);
          var mZip = result.PersonMailingPostalCode;

          
          $("#tab-contacts div.mailing-address").attr("data-street",mStreet);
          $("#tab-contacts div.mailing-address").attr("data-city",mCity);
          $("#tab-contacts div.mailing-address").attr("data-state",mState);
          $("#tab-contacts div.mailing-address").attr("data-zip",mZip);

          
          $("#tab-contacts div.mailing-address").html(formatAddress(mStreet, mCity, mState, mZip));


          // procedure tab ( pulled in from the controller ) 
          $("#surgeon-detail i.procedure-busy").show();
          $("#surgeon-detail table.pref-card-products tbody").empty();
          $("#surgeon-detail span.pref-card-data").hide();
          
            //  Resetting the pref card Id on the edit button to avoid pulling a wrong Id when there's no pref card
          $("#surgeon-detail button.btn-edit-pref-card").removeAttr("data-record-id");
          $("#surgeon-detail button.btn-pdf-pref-card").removeAttr("data-record-id");
          
          Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveTerritoryForPractitioner}",
                  practitionerId, function(result, event) {
                    console.log('PractitionerId in territory-----------------'+practitionerId);
                    var assignedTeam = '';               
                    if( result.length > 0 )
                    {
                        for ( var i=0; i < result.length; i++) {
                        
                            assignedTeam += ", " + globalDecodeEntities(result[i]).replace(/,/g , "");                        
                        }
                    }
                                       
                    $("#tab-contacts div.assigned-team").text(assignedTeam.substring(2) || "None" ); 

           });
           
            /*Release 2.2
            Component ID CID:- 000064
            Developer Name:- Mimansha Samal
            Date Added:- 12/9/2016
            Feature:- Display data in Account Affiliations tab*/             
          
          //Display Account Affiliations
          displayAccountAffiliations(practitionerId);          
     
          
          Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrievePractitionerPrefCards}",
                  practitionerId, function(result, event) {
                    if (event.status) {

                      $("#surgeon-detail select.pref-cards").attr("data-record-id", practitionerId);
                      $("#surgeon-detail select.pref-cards").empty();
                      if ( result.length === 0 ) {

                        $("#surgeon-detail select.pref-cards").empty().append("<option value=''>--None--</option>");
                        $("#surgeon-detail button.btn-edit-pref-card").attr("disabled", "disabled");
                        $("#surgeon-detail button.btn-pdf-pref-card").attr("disabled", "disabled");
                      } else {
                        
                        $("#surgeon-detail button.btn-edit-pref-card").removeAttr("disabled");
                        $("#surgeon-detail button.btn-pdf-pref-card").removeAttr("disabled");
                        
                        for ( var i=0; i < result.length; i++) {
                            var prefCard = result[i];
                            var prefCardOption = "<option value='"+result[i].Id+"'>"+globalDecodeEntities(result[i].Pref_Card_Name__c)+"</option";
                            $("#surgeon-detail select.pref-cards").prepend(prefCardOption);
                        } 

                      }
                    } else {
                       // do nothing on error ( probably a bad idea )
                    }

                     // turn off the notification and turn on the pull down and click the first one
                      $("#surgeon-detail span.pref-cards-notify").text("").hide();
                      if ( result.length > 0 ) {
                        $("#surgeon-detail select.pref-cards").val( $("#surgeon-detail  select.pref-cards option:first").val() ).change();
                      }
                      $("#surgeon-detail select.pref-cards").show();

                 });               
          
       
          // calendar tab ( pulled in from the controller )
          $("#surgeon-detail a[href=#tab-calendar]").hide();
          $("#surgeon-detail i.calendar-busy").show();
          Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveCasesByPractitioner}",
            practitionerId, function(cases, event) {

            
            $("#surgeon-detail table.table-calendar tbody").empty();  
            $("#surgeon-detail i.case-busy").hide();
            if ( cases.length > 0 ) {

              var rows = [];
              for ( var i=0; i < cases.length; i++) {
        
                var name = cases[i].Procedure_Names_Placeholder__c || "None";
 
                var desc = cases[i].Description__c || "None";
                if ( desc === "null" || desc === null ) { desc = "None"; }

                var startDate = moment(cases[i].Event_Start_Date__c).format("MM/DD/YYYY");
                var startTime = moment(cases[i].Event_Start_Date__c).format("h:mm A");
                var endDate = moment(cases[i].Event_End_Date__c).format("MM/DD/YYYY");
                var endTime = moment(cases[i].Event_End_Date__c).format("h:mm A");
                var dateRange = startDate+' '+startTime+' - '+endTime;

                var provider = "None";
                if ( cases[i].Health_Care_Provider__r ) {
                  provider = cases[i].Health_Care_Provider__r.Name; 
                }
                

                rows.push({
                  prefCard: globalDecodeEntities(name),
                  time: dateRange,
                  provider: globalDecodeEntities(provider),
                  case: cases[i]
                });

              }

              // init the bootstrap table witih sorting
              $("#surgeon-detail table.table-calendar").bootstrapTable('destroy');
              $("#surgeon-detail table.table-calendar").bootstrapTable({
                  sortable: true,
                  pagination: true,
                  classes: "table-no-bordered table-striped table-hover",
                  onClickRow: function(rowData, $element) {
                    openCaseModalFromCaseId(rowData.case.Id);                  
                  },
                  columns: [{
                      field: 'prefCard',
                      title: 'Procedure',
                      sortable: false
                  }, {
                      field: 'provider',
                      title: 'Hospital',
                      sortable: true
                  },{
                      field: 'time',
                      title: 'Time',
                      sortable: true,
                  }],
                  data: rows
              });
          
          

            } else {
              $("#surgeon-detail table.table-calendar")
                .append("<tr><td colspan='3' class='text-center'>No cases found</td></tr>");
            }

            $("#surgeon-detail i.calendar-busy").hide();
            $("#surgeon-detail a[href=#tab-calendar]").show();
            
          });
                   
          
          // Provider detail edit modal
          $("#provider-detail ")

          // BIO tab
          $("#tab-bio button.edit-surgeon-bio-btn").attr("data-record-id",practitionerId);

          var gradInst = "";
          var gradInstId = "";
          if ( result.PersonContact.Graduate_Institution__r ) { 
            gradInst = result.PersonContact.Graduate_Institution__r.Name;
            gradInstId = result.PersonContact.Graduate_Institution__r.Id;
          }
          $("#tab-bio div.graduate").text(globalDecodeEntities(gradInst));
          $("#tab-bio div.graduate").attr("data-record-id", gradInstId);

          var undergradInst = "";
          var undergradInstId = "";
          if ( result.PersonContact.Undergraduate_Institution__r ) { 
            undergradInst = result.PersonContact.Undergraduate_Institution__r.Name;
            undergradInstId = result.PersonContact.Undergraduate_Institution__r.Id;
          }
          $("#tab-bio div.undergraduate").text(globalDecodeEntities(undergradInst));
          $("#tab-bio div.undergraduate").attr("data-record-id", undergradInstId);

          var doctorateInst = "";
          var doctorateInstId = "";
          if ( result.PersonContact.Doctorate_Institution__r ) { 
            doctorateInst = result.PersonContact.Doctorate_Institution__r.Name;
            doctorateInstId = result.PersonContact.Doctorate_Institution__r.Id;
          }          
          $("#tab-bio div.doctorate").text(globalDecodeEntities(doctorateInst));
          $("#tab-bio div.doctorate").attr("data-record-id", doctorateInstId);

          $("#tab-bio div.internship").text(globalDecodeEntities( result.Internship__c ) || "" );
          $("#tab-bio div.residencies").text(globalDecodeEntities( result.Residencies__c) || "" );
          $("#tab-bio div.fellowships").text(globalDecodeEntities( result.Fellowships__c ) || "" );
          $("#tab-bio div.certifications").text(globalDecodeEntities( result.Certifications__c ) || "" );
          $("#tab-bio div.awards").text(globalDecodeEntities( result.Awards__c) || "" );
          $("#tab-bio div.professional-societies").text(globalDecodeEntities( result.Professional_Societies__c) || "" );
          $("#tab-bio div.sports-teams-affiliations").text(globalDecodeEntities(result.Sport_Interests__c ) || "");
          $("#tab-bio div.personal-interest").text(globalDecodeEntities(result.Personal_Intrest__c ) || "");
          $("#tab-bio div.spouse-and-children").text(globalDecodeEntities(result.Family_Information__c ) || "");

          // Activities tab
          $("#surgeon-detail a[href=#tab-activities]").hide();
          $("#surgeon-detail i.activities-busy").show();

          Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrievePractitionerTasks}",
                  practitionerId, function(result, event) {
                    if (event.status) {

                      //Yan: these events will not be used in Oct. 2016 release
                      // these come back in order
                      //$("#tab-activities div.axis-activity").html( $('<div/>').html(result[0] ).text() );
                      //$("#tab-activities div.arthrex-marketing-interactions").html( $('<div/>').html(result[1]).text() );
                      //$("#tab-activities div.arthrex-medical-education-training").html( $('<div/>').html(result[2]).text() );
                      //$("#tab-activities div.arthrex-events").html( $('<div/>').html(result[3]).text() );
                      
                    }
                    $("#surgeon-detail i.activities-busy").hide();
                    $("#surgeon-detail a[href=#tab-activities]").show();
                              

                 });

        });

        //if current tab is marketing, switch to contact info           
        if($("#marketingTab").hasClass("active")){
          console.log('marketing tab active');
          $("#marketingTab").removeClass("active");
          $("#tab-activities").removeClass("active");
          $("#contacts").parent("li").addClass("active");
          $("#tab-contacts").addClass("active");
        }

      } //  end of  displayPractitionerDetail
      
      <!-- ----------------------------------Start of Mimansha code------------------ -->
      function displayAccountAffiliations(practitionerId)
      {
          $("#add-account-affiliation-modal").attr("data-account-id", practitionerId);
          $("#surgeon-detail a[href=#tab-affiliations]").hide();
          $("#surgeon-detail i.calendar-busy").show();
          
          Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveAccountAffiliationsByPractitioner}",
            practitionerId, function(result, event) {

            $("#surgeon-detail table.table-affiliations tbody").empty();  
            $("#surgeon-detail i.case-busy").hide();

            

              var rows = [];
              var htm="";
              for ( var i=0; i < result.length; i++) {
                console.log('Account Info Affiliation-------'+result[i].Account_hcp__r.Name);
                var name = result[i].Account_hcp__r.Name || "None";
 
                var prefName = result[i].Account_hcp__r.Preferred_Name__c || "None";
                if ( prefName === "null" || prefName === null ) { prefName = "None"; }
               
                var customerNo = result[i].Account_hcp__r.Customer_Number__c;
                
                var phone = result[i].Account_hcp__r.Phone || "None";
              
                

                rows.push({
                  accountname: globalDecodeEntities( name ),
                  preferredname: globalDecodeEntities( prefName ),
                  customernumber: customerNo,
                  phonenumber: phone,
                  accountaffiliation: result[i]
                });
                htm += "<div id='"+result[i].Id+"' data-account-id='"+result[i].Account_hcp__c+"'></div>";
              }
              $("#accountsTag").html(htm);

              // init the bootstrap table witih sorting
              $("#surgeon-detail table.table-affiliations").bootstrapTable('destroy');
              $("#surgeon-detail table.table-affiliations").bootstrapTable({
                  sortable: true,
                  pagination: true,
                  classes: "table-no-bordered table-striped table-hover",
                  onClickRow: function(rowData, $element) {
                 
                    $("#add-account-affiliation-modal").attr("data-record-id", rowData.accountaffiliation.Id);
                    $("#add-account-affiliation-modal input.account-typeahead").val(rowData.accountaffiliation.Account_hcp__r.Name);
                    
                    $("#add-account-affiliation-modal button.btn-save").hide();
                    $("#add-account-affiliation-modal button.btn-delete").show();
                    $("#add-account-affiliation-modal input").attr("disabled",true);                    
                    $("#add-account-affiliation-modal").modal("show");                
                  },
                  columns: [{
                      field: 'accountname',
                      title: 'SAP Name',
                      sortable: true
                  }, {
                      field: 'preferredname',
                      title: 'Nick Name',
                      sortable: true
                  },{
                      field: 'customernumber',
                      title: 'Account Number',
                      sortable: true
                  },{
                      field: 'phonenumber',
                      title: 'Work Phone',
                      sortable: true,    
                  }],
                  data: rows
              });          
          

             
            

            $("#surgeon-detail i.calendar-busy").hide();
            $("#surgeon-detail a[href=#tab-affiliations]").show();
            
          });
          
          //Load the Accounts/Providers Typeahead on the Add Account Affiliation modal
          populateAccounts();
          
      }//end of displayAccountAffiliations
    <!-- ----------------------------------End of Mimansha code------------------ -->
    
      $("#marketingTab").on("click", function(e){

        if($("#PardotActivityDisplay div.detail_div").children().length != 0){
          
            $("#PardotActivityDisplay div.detail_div").empty();
        }

          //email = 'mremley@STEELHEADSURGICAL.COM';
          var pardotEmail = $("#surgeon-detail p.email").text();
          console.log('##--surgeonEmail: '+ pardotEmail);

          loadPardotActivity(pardotEmail, 'Any Type', 0);

      });



     function constructWebsite(website){
        
        if ( typeof website != "undefined") {
          if ( website.indexOf("http") != 0 ) {
            website = "http://"+website;
          }
          return website;
        }
       
        return "";
        
      } //  end of constructWebsite
      
      function setAccountsAndStaff(){
          Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrieveProviders}",
            pageNum, rowsPerPage,     
                  function(results, event) {
                    console.log(results);
                      if (event.status) {
                        for ( var i=0; i < results.length; i++) {
                          
                          var result = results[i];
                          var street = globalDecodeEntities(result.ShippingStreet);
                          var city = globalDecodeEntities(result.ShippingCity);
                          var state = globalDecodeEntities(result.ShippingState);
                          var address = formatAddress(street, city, state, result.ShippingPostalCode, result.ShippingCountryCode);
    
                          var disabled = '';
                          
                          var addressLink = '<br>No website available';
                          var website = constructWebsite(result.Website);
                          
                          if ( website != "") {
                            addressLink = '<br><a href="'+website+'" target="blank"><i class="fa fa-external-link"></i> Website</a>';
                          }
                         
                          address += addressLink;
                          
    
                          row = '<tr>';
                          row += '  <td><a data-toggle="tab" data-record-id="'+result.Id+'" href="#" class="client-link provider">'+globalDecodeEntities(result.Preferred_Name__c)+'</a></td>';
                          row += '  <td colspan="4" class="text-right"><span class="client-link website" style="font-size:0.8em">'+address+'</span></td>';
                          row += '</tr>';
    
                                $("table.table-providers").append(row);
    
                          // in tablet and smaller views the above table dissapears and is replaced by a picklist
                          // we need to populate the picklist too
                          var provName = globalDecodeEntities(result.Preferred_Name__c);
                          var option = '<option value="'+result.Id+'">'+provName+'</option>';
                          $("select.providers").append(option);      
    
                        }
                      } else {
    
                        var row = "<tr><td colspan='5'><div class='text-danger text-center'>Error retrieving data please try again</div></td></tr>";
                        $("table.table-practitioners").append(row);
    
                      }
                      $("i.busy").hide();
                  });
        }   //  end of setAccountsAndStaff
          
          // case modal popup javascript is defined in AxisTemplate js/cs-case-modal.js
            //window.caseModal({});
            
            /* Case property modal javascript for type-aheads, products, validation, saving, deleting etc
             ----------------------------------------------------------------------------*/
             // case modal popup javascript is defined in AxisTemplate js/cs-case-modal.js
             window.caseModal({
                 currentUserId: currentUserId,
                 currenUserTZ: currenUserTZ,
                 calendar : "#calendar",
                 reloadOnSave: true
             });
             

             /* END case property modal javascript
             ----------------------------------------------------------------------------*/
            // load the surgeon list
            var pageNum = 1;
            var rowsPerPage = 20;
            $("i.busy").show();
      Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrievePractitioners}",
        pageNum, rowsPerPage,     
              function(results, event) {

                  if (event.status) {
                    for ( var i=0; i < results.length; i++) {
                      
                      var result = results[i];

                          console.log('##--result: '+ JSON.stringify(result));
                          var now = new Date();
                          var cacheBust = now.getTime();
                    
                          row = '<tr><td><div class="contact-row">';
                          console.log('##--profile pic: '+result.Profile_Picture__c);
                          console.log('##--firstName: '+result.FirstName + '; LastName: '+result.LastName);
                          row += '<div class="col-lg-6"><img alt="image" src="'+result.Profile_Picture__c+'?cache='+cacheBust+'" class="profile-photo-28"/>';
                          row += '<a data-record-id="'+result.Id+'" class="client-link practitioner">'+globalDecodeEntities(result.LastName)+', '+globalDecodeEntities(result.FirstName)+'</a></div>';
                          row += '<div class="col-lg-6"><div class="text-right"><button class="btn btn-primary btn-xs create-case" data-practitioner-id="'+result.Id+'" data-practitioner-name="'+globalDecodeEntities(result.Name)+'" data-toggle="modal">';
                          row += '{!$Label.CS_Contacts_ScheduleCase}</button>&nbsp;';

                            var emailDisableAttr = ' disabled="true" ';
                            if ( result.PersonEmail && result.PersonEmail.length > 0 ) {
                              emailDisableAttr = '';
                            }

                          row += '<a href="mailto:'+result.PersonEmail+'" '+phoneDisabledAttr+' class="btn btn-primary btn-xs" style="text-decoration: none; color:white;"><i class="fa fa-envelope-o"></i></a>&nbsp;';

                            var phoneDisabledAttr = ' disabled="true" ';
                            if ( result.Phone && result.Phone.length > 0 ) {
                              phoneDisabledAttr = '';
                            }

                          row += '<a href="tel:'+result.Phone+'" '+emailDisableAttr+' class="btn btn-primary btn-xs" style="text-decoration: none; color:white;"><i class="fa fa-phone"></i></a></div></div>';

                          row += '</div></td></tr>';

                          $("table.table-practitioners").append(row);

                          // in tablet and smaller views the above table dissapears and is replaced by a picklist
                          // we need to populate the picklist too
                          var practName = globalDecodeEntities(result.Name);
                          var option = '<option value="'+result.Id+'">'+practName+'</option>';
                          $("select.practitioners").append(option);

                            
                      }

                      // click the first one, to trigger the detail tab
                      $("table.table-practitioners tbody a.client-link.practitioner").first().click();

                      // match the tablet and smaller picklist to the same option                      
                      $("select.practitioners").val($("select.practitioners option:first").next().val());

                  } else {

                    var row = "<tr><td colspan='5'><div class='text-danger text-center'>Error retrieving data please try again</div></td></tr>";
                    $("table.table-practitioners").append(row);

                  }
                  $("i.busy").hide();
              });

      // load the provider list
            var pageNum = 1;
            var rowsPerPage = 20;
            $("i.busy").show();
            
            //  Abstracted the loading of Accounts and Staff to a method above
        setAccountsAndStaff();


          // in addition to the type ahead searches this is a secondary filter that shows/hides
          // rows in the table list based on the search param. The typeahead displays
          // results on its own and this secondary filter shows/hides rows in the table
          // this works on surgeons and providers
          $("input.filter-table").on("keyup", function() {

            var query = $(this).val();
            if ( query.length >= 2 ) {

              var qRegEx = new RegExp(query,"i");
              $(this).closest("div.tab-pane").find("table.table tbody tr").each(function(idx) {
                if ( $(this).find("td a").first().text().match(qRegEx) ) {
                  // this row is a search hit, show it
                  $(this).show();
                } else {
                  // this row is a search miss, hide it
                  $(this).hide();
                }
                
              });

            } else {
              
              $(this).closest("div.tab-pane").find("table.table tbody tr").show();

            }

          });

          // clears the secondary filter when the tab loses focus like if the user clicks from account to provider or vice versa
          $("div.clients-list > ul.nav-tabs li").on("click", function() {
            console.log("click "+$(this).hasClass("active"));
            var activeTab = $(this).closest("ul.nav-tabs").find("li.active a").prop("href").split("#")[1];

            $("#"+activeTab).find("input.filter-table").val("");
            $("#"+activeTab).find("table.table tbody tr").show();

            console.log(activeTab);

          });

          // surgeon search
          /*
          $("#tab-1 input.practitioner-typeahead").typeahead({
              // typeahead setup for case providers
              minLength: 2,
              source: function(query, onSuccess) {
                  search(query, "{!$RemoteAction.CS_ARContactsCC.searchPractitioners}", onSuccess);                                    
              },
              displayText: function(item) {
                  return globalDecodeEntities(item.Name);
              },
              afterSelect: function(item) {
                displayPractitionerDetail(item.Id);                 
              }
          });
          */

          /*
            // provider search
          $("#tab-2 input.provider-typeahead").typeahead({
              // typeahead setup for case providers
              minLength: 2,
              source: function(query, onSuccess) {
                  search(query, "{!$RemoteAction.CS_ARContactsCC.searchProviders}", onSuccess);                                    
              },
              displayText: function(item) {
                  return globalDecodeEntities(item.Name);
              },
              afterSelect: function(item) {
                displayProviderDetail(item.Id);                 
              }
          }); 
          */

          //View Pardot Visit Detail
          $(document).on("click", "#PardotActivityDisplay i.pardot-visit-detail", function(e){
            //Clean pre-existing contents:
            $("#pardot-visit-modal").modal("hide");
            $("#pardot-visit-pageviews").text("");
            $("#pardot-visit-duration").text("");
            $("#pardot-visit-createdat").text("");
            

            var pardotVisitId = $(this).closest('.detail_div').attr("visit-id");
            console.log('Pardot Visit Id: ' + pardotVisitId);

            //Load visit details
            Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrievePractitionerPardotVisit}",
              pardotVisitId, function(result, event){

                  if(event.status && result != null){

                    //iterate each visit and construct the UI
                    if(result.visit.visitor_page_views.visitor_page_view != null){

                                //Clear all previous views
                                $("#PardotVisitPageViews").empty();
                                
                                $.each(result.visit.visitor_page_views.visitor_page_view, function(i, v){                      
                                var htmPageView = '<div class="col-sm-12 form-group detail_div" '+ 'page-view-id="' + v.id + '" style="display: inline;">' +
                                                        '     <div class="col-sm-8"> '+ 
                                                        '         '+v.url+' <br/> '+
                                                        '     '+v.title +  
                                                        '     </div> '+
                                                        //'     <div class="col-sm-3"> '+ 
                                                        //'         '+ moment(v.created_at).format("YYYY-MM-DD") +
                                                        //'     </div> '+
                                                        ' </div>';
                                $("#PardotVisitPageViews").append(htmPageView);  
                                console.log('New visit page views: ' + v.title + ' url: ' + v.url);
                                
                                });

                    }

                    //Display add. info
                    $("#pardot-visit-pageviews").text(globalDecodeEntities(result.visit.visitor_page_view_count));
                      
                    var min = Math.floor(result.visit.duration_in_seconds / 60);
                    if(min > 1)
                      $("#pardot-visit-duration").text(globalDecodeEntities(min) + ' Minutes');
                    else
                      $("#pardot-visit-duration").text('Less than 1 Minute');
                      
                    $("#pardot-visit-createdat").text(globalDecodeEntities(moment(result.created_at).format("YYYY-MM-DD")));

                  }// end of event.status && result !=null

              });//end of remote call 

            $("#pardot-visit-modal").modal("show");

          });


          //View Pardot Email Detail
          $(document).on("click", "#PardotActivityDisplay i.pardot-email-detail", function(e) {
               $("#pardot-email-modal").modal("hide");
              var pardotEmailId = $(this).closest('.detail_div').attr("email-id");
              console.log('Pardot Email Id: ' + pardotEmailId);

              //Load email activity
              Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrievePractitionerPardotEmail}",
                        pardotEmailId, function(result, event) {

                          if(event.status & result!=null){
                          //populate email info
                            $("#pardot-email-name").text(globalDecodeEntities(result.email.name));
                            $("#pardot-email-subject").text(globalDecodeEntities(result.email.subject));
                            $("#pardot-email-message").text(globalDecodeEntities(result.email.message.text));
                            $("#pardot-email-date").text(moment(result.created_at).format("YYYY-MM-DD HH:mm:ss"));

                          }
                          else{
                            //Display error when retrieving email details

                          }




                        });

              $("#pardot-email-modal").modal("show");
              
          });

          $(document).on("click", "button.load-more", function(e){

              //retrieve more results from pardot
              var pardotEmail = $("#surgeon-detail p.email").text();
              console.log('##--surgeonEmail: '+ pardotEmail);

              loadPardotActivity(pardotEmail, 'Any Type', 1);

          });

          
          // create case from contact (could be from the button surgeon list or the button on surgeon detail only viisble on tablet and smaller devices )       
          $(document).on("click", "button.create-case", function(e) {
            var recordId = $(this).attr("data-record-id");
            var practitionerId = $(this).attr("data-practitioner-id");
            var practitionerName = $(this).attr("data-practitioner-name");                                                

            var providerId = $(this).attr("data-provider-id");
            var providerName = $(this).attr("data-provider-name");

            $("#case-prop-modal input.provider").attr("data-record-id", providerId);
            $("#case-prop-modal input.provider").val(providerName);
            $("#case-prop-modal input.provider").trigger("record-id-set");
            
            $("#case-prop-modal input.practitioner").attr("data-record-id", practitionerId);
            $("#case-prop-modal input.practitioner").val(practitionerName);
            $("#case-prop-modal input.practitioner").trigger("record-id-set");

            $("#case-prop-modal span.modal-title-txt").text("Create Case");
            $("#case-prop-modal input").removeAttr("disabled");
            $("#case-prop-modal select").removeAttr("disabled");

            $("#case-prop-modal").modal("show");

          });

          $("#activityFilter").on("change", adjustPardotActivityList);

          // clicking on a provider
          $("table.table-providers").on("click", "a.provider", function(e) {
            var recordId = $(this).attr("data-record-id");
            displayProviderDetail(recordId);
          });

          // this select is only visible on tablet and smaller devices
          $("select.providers").on("change", function(e) {
            var recordId = $(this).val();
            if ( recordId != "0" ) {
              //$("select.practitioners").val("0");
              $("select.practitioners").select2('val', '');
              displayProviderDetail(recordId);
            }

          });
          
          // this select is only visible on tablet and smaller devices
          $("select.practitioners").on("change", function(e) {
            var recordId = $(this).val();
            if ( recordId != "0" ) {
              //$("select.providers").val("0");
              $("select.providers").select2('val', '');
              displayPractitionerDetail(recordId);
            }

          });

          // clicking on a practitioner
          $("table.table-practitioners").on("click", "a.practitioner", function(e) {
            var recordId = $(this).attr("data-record-id");
            displayPractitionerDetail(recordId);
          }); 

          


            // saving surgeon edits
            $("#edit-surgeon-modal button.edit-surgeon-save-btn ").on("click", function() {

              // parse birthdate to long
              var birthDateStr = $("#edit-surgeon-modal input.birthdate").val();
              var birthDate = null;
              
              // no, I didn't write this regex :) - Chad 
              // see http://stackoverflow.com/questions/5465375/javascript-date-regex-dd-mm-yyyy
              var validDateFormat = /^(((0[1-9]|[12]\d|3[01])\/(0[13578]|1[02])\/((19|[2-9]\d)\d{2}))|((0[1-9]|[12]\d|30)\/(0[13456789]|1[012])\/((19|[2-9]\d)\d{2}))|((0[1-9]|1\d|2[0-8])\/02\/((19|[2-9]\d)\d{2}))|(29\/02\/((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/g;

              if ( birthDateStr.match(validDateFormat) ) {
                birthDate = ""+moment(birthDateStr,"MM/DD/YYYY");
              }

              var surgeon = {
                id: $("#edit-surgeon-modal").attr("data-record-id"),
                npi: $("#edit-surgeon-modal input.npi").val(),
                birthDate: birthDate,
                firstName: $("#edit-surgeon-modal input.firstName").val(),
                lastName: $("#edit-surgeon-modal input.lastName").val(),
                email: $("#edit-surgeon-modal input.email").val(),
                //hasOptedOutOfEmail: $("#edit-surgeon-modal input.email-opt-out").is(":checked"),
                assignedSalesRepEmail: $("#edit-surgeon-modal input.assigned-sales-rep-email").val(),
                practiceName: $("#edit-surgeon-modal input.practice").val(),
                lang: $("#edit-surgeon-modal input.lang").val(),
                title: $("#edit-surgeon-modal input.title").val(),
                salutation: $("#edit-surgeon-modal select.salutation").val(),
                gender: $("#edit-surgeon-modal select.gender").val(),
                userType: $("#edit-surgeon-modal select.user-type").val(),
                mState: $("#edit-surgeon-modal select.mState").val(),
                practiceFocus: getMultiSelectValues($("#edit-surgeon-modal select.practice-focus")),
                designation: getMultiSelectValues($("#edit-surgeon-modal select.designation")),
                specialty: getMultiSelectValues($("#edit-surgeon-modal select.specialty")),                                  
                phone: $("#edit-surgeon-modal input.phone").val(),
                mobilePhone: $("#edit-surgeon-modal input.mobilePhone").val(),
                mStreet: $("#edit-surgeon-modal input.mStreet").val(),
                mCity: $("#edit-surgeon-modal input.mCity").val(),
                mZip: $("#edit-surgeon-modal input.mZip").val()
              };

              $("#edit-surgeon-modal button").attr("disabled",true);
              var btnText = $("#edit-surgeon-modal button.edit-surgeon-save-btn").text();
              $("#edit-surgeon-modal button.edit-surgeon-save-btn").text("Saving...");
              
              Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.updatePractitionerDemographics}",
              surgeon,
              function(result, event) {
     
                    $("#edit-surgeon-modal button.edit-surgeon-save-btn").text(btnText);
                    $("#edit-surgeon-modal button").removeAttr("disabled");
                    displayPractitionerDetail(surgeon.id);
                    $("#edit-surgeon-modal").modal('hide');

                });

            });

            // saving new surgeon requests
            $("#create-surgeon-modal button.new-surgeon-btn").on("click", function() {
              
              var npi = $("#create-surgeon-modal input.npi").val();
              var firstName = $("#create-surgeon-modal input.firstName").val();
              var lastName = $("#create-surgeon-modal input.lastName").val();
              if ( (npi.length === 0 ) || (firstName.length === 0 ) || (lastName.length === 0 ) ) {
              
                $("#create-surgeon-modal span.error").text("All fields are required");
              
              } else if ( !/^\d{10}$/.test(npi) ) {

                $("#create-surgeon-modal span.error").text("NPI must be a 10 digit number");
             
              } else {

                // there are fields to save
                $("#create-surgeon-modal button").attr("disabled",true);
                var btnText = $("#create-surgeon-modal button.new-surgeon-btn").text();
                $("#create-surgeon-modal button.new-surgeon-btn").text("Saving...");
                  
                /*  Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.saveNewSurgeonRequest}",
                      npi, firstName, lastName, function(result, event) {
                      
                      console.log('##-- result: '+ result);
                      console.log('##-- event: '+ event);
                      $("#create-surgeon-modal button.new-surgeon-btn").text(btnText);
                      $("#create-surgeon-modal").modal('hide');
                      toastr.options = {
                                        "positionClass": "toast-top-left",
                                    };
                        toastr.success("Your Surgeon request has been submitted and will be processed shortly.");
                                    
                 });*/
                 
                 url = $("#surgeonForm").attr("action");
                 orgid = $("#orgid").val();
                 retURL = $("#retURL").val();
                 type = 'New Surgeon Request';
                 subject = 'New Surgeon Request ('+npi+') '+lastName +', '+firstName;
                 //loggedInUsername = "{!$User.FirstName}" + " " + "{!$User.LastName}";
                 loggedInUseremail = "{!$User.Email}";
                 description = 'FirstName: '+ firstName 
                               + '\n LastName: '+ lastName
                               + '\n NPI: '+ npi;
                 $.post( url, { orgid: orgid, retURL: retURL, type: type, email:loggedInUseremail, subject: subject, description: description },
                        function( data ) {
            
                      $("#create-surgeon-modal button.new-surgeon-btn").text(btnText);
                      $("#create-surgeon-modal").modal('hide');
                    
                    toastr.options = {
                              "positionClass": "toast-top-left",
                          };
                          toastr.success("Your Surgeon request has been submitted and will be processed shortly.");
                } );
              } 
            });

            // clear the new surgeon modal fields when it's hidden
            $("#create-surgeon-modal").on("hidden.bs.modal"  , function (e) {
              $(this).find("input").val("");
              $("#create-surgeon-modal span.error").text("");
              $("#create-surgeon-modal button").removeAttr("disabled");
            });   
            
            
            $('#case-prop-modal').on('hidden.bs.modal', function (e) {
                
                $("#case-prop-modal button.case-save-and-btn").show();
                $("#case-prop-modal button.btn-add-taxonomy").show();
                //hide picklistrow
                $("#case-prop-modal .trhidePicklistRow").show();
            });          


            // on the surgeon detail when new preference card is clicked trigger the modal
            $("#surgeon-detail button.btn-new-pref-card").on("click", function(e) {
              var surgId = $(this).closest("div#tab-procedures").find("select.pref-cards").attr("data-record-id");
              
              // hide the delete button just in case it's visible
              $("#new-prefcard-modal button.btn-delete-prefcard").hide();
              $("#new-prefcard-modal input.prefCardName").removeAttr("readonly");

              $("#new-prefcard-modal").attr("data-current-practioner-id",surgId);
              $("#new-prefcard-modal table#tableTaxonomy tbody").empty();
              $("#new-prefcard-modal").one("shown.bs.modal", function() {

                
                $("#new-prefcard-modal div.disposables.rte").summernote('reset');
                $("#new-prefcard-modal div.sutures.rte").summernote('reset');
                $("#new-prefcard-modal div.medications.rte").summernote('reset');
                $("#new-prefcard-modal div.equipment.rte").summernote('reset');
                $("#new-prefcard-modal div.equipment-notes.rte").summernote('reset');
                
                // for some reason, summernote makes the first RTE button active
                $(".note-btn").removeClass("active");

              });    

              $("#new-prefcard-modal span.save-error").text("");
              $("#new-prefcard-modal span.save-add-error").text("");
              $("#new-prefcard-modal").modal("show") 

            });

            // delete pref card button clicked
            $("#new-prefcard-modal button.btn-delete-prefcard").on("click", function(e) {
            
            
              <!-- SP code for Delete Warning/Confirmation on Pref Card  -->
              
                
             $("#delete-preference-modal").modal("show");
            });      
            
                            
             
            $("#delete-preference-modal button.btn-delete-preference-card").on("click", function(e) {
            
            <!-- SP end of code -->     
              
                     
                         
              var prefCardId = $("#new-prefcard-modal").attr("data-record-id");
              var btnTxt = $("#new-prefcard-modal button.btn-delete-prefcard").text();
              $("#new-prefcard-modal button.btn-delete-prefcard").text("Deleting...");
              $("#new-prefcard-modal button").attr("disabled",true);
              Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.deletePractitionerProcedure}",
                prefCardId, function(result, event) {
              
                  // clear the product table, if we're deleting the last pref card we want there's not going to be 
                  // a pref card to select that will repopulate it
                  $("#tab-procedures table.pref-card-products tbody").empty();
                  
                  // select the next 
                  $("#tab-procedures select.pref-cards option[value="+prefCardId+"]").removeAttr("selected");
                  $("#tab-procedures select.pref-cards option[value="+prefCardId+"]").next().attr("selected",true);
                  $("#tab-procedures select.pref-cards option[value="+prefCardId+"]").remove();
                  
                  $("#tab-procedures select.pref-cards").change();
                  

                  $("#new-prefcard-modal div.disposables.rte").summernote('reset');
                  $("#new-prefcard-modal div.sutures.rte").summernote('reset');
                  $("#new-prefcard-modal div.medications.rte").summernote('reset');
                  $("#new-prefcard-modal div.equipment.rte").summernote('reset');
                  $("#new-prefcard-modal div.equipment-notes.rte").summernote('reset');                  
                  
                  $("#new-prefcard-modal button.btn-delete-prefcard").text(btnTxt);
                  $("#new-prefcard-modal button").removeAttr("disabled");

                  // hide the delete button
                  $("#new-prefcard-modal button.btn-delete-prefcard").hide();
                  $("#new-prefcard-modal").modal("hide");
                  <!-- SP code for Delete Warning/Confirmation on Pref Card  --> 
                  $("#delete-preference-modal").modal("hide"); 
                  <!-- SP end of code --> 

               });              

            });

            // edit pref card button clicked
            $("#surgeon-detail button.btn-edit-pref-card").on("click", function(e) {


              var surgId = $(this).closest("div#tab-procedures").find("select.pref-cards").attr("data-record-id");
              var prefCardId = $(this).attr("data-record-id");
              
              if(!prefCardId){
                //alert('prefCardId: '+prefCardId);
                return false;
              }
              
              
              $("i.edit-pref-card-busy").show();
              Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrievePractitionerPrefCard}",
              prefCardId, function(prefCard, event) {
                
                Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrievePractitionerPrefCardProducts}",
                prefCardId, function(prefCardProducts, event) {

                  $("i.edit-pref-card-busy").hide();

                  $("#new-prefcard-modal").attr("data-record-id", prefCardId);
                  $("#new-prefcard-modal").attr("data-current-practioner-id", surgId);
                  /*$("#new-prefcard-modal input.procedure").attr("data-record-id", prefCard.Procedure__r.Id);
                  $("#new-prefcard-modal input.procedure").val(globalDecodeEntities(prefCard.Procedure__r.Name));
                  if(prefCard.Surgical_Technique__c){
                    $("#new-prefcard-modal input.surgical-technique").val(globalDecodeEntities(prefCard.Surgical_Technique__r.Name));
                    $("#new-prefcard-modal input.surgical-technique").attr("data-record-id", prefCard.Surgical_Technique__c);
                  }
                  */
                  
                  displayPrefCardProdDetails("#new-prefcard-modal", "#tablePrefCardTaxonomy", prefCard.lstPrefCardProcs, true);
                  
                  $("#new-prefcard-modal textarea.position").val(globalDecodeEntities(prefCard.objPrefCard.Position__c));
                  $("#new-prefcard-modal input.prefCardName").val(globalDecodeEntities(prefCard.objPrefCard.Pref_Card_Name__c));

                  for ( var i=0; i < prefCardProducts.length; i++ ) {
                    
                    $("#new-prefcard-modal div.ctag-list.products").append(obj2ctag({
                      Name: globalDecodeEntities(prefCardProducts[i].Product__r.Name),
                      Id: prefCardProducts[i].Product__r.Id
                    }));

                  }

                  $("#new-prefcard-modal").attr("data-current-practioner-id",surgId);

                  
                  $("#new-prefcard-modal").on("shown.bs.modal", function() {

                    var disposables = $('<div/>').html(prefCard.objPrefCard.Disposables__c).text();
                    var sutures = $('<div/>').html(prefCard.objPrefCard.Sutures__c).text();
                    var medications = $('<div/>').html(prefCard.objPrefCard.Medications__c).text();
                    var equipment = $('<div/>').html(prefCard.objPrefCard.Equipment__c).text();
                    var equipmentNotes = $('<div/>').html(prefCard.objPrefCard.Equipment_Notes__c).text();

                    $("#new-prefcard-modal div.disposables.rte").summernote('code',disposables);
                    $("#new-prefcard-modal div.sutures.rte").summernote('code',sutures);
                    $("#new-prefcard-modal div.medications.rte").summernote('code',medications);
                    $("#new-prefcard-modal div.equipment.rte").summernote('code',equipment);
                    $("#new-prefcard-modal div.equipment-notes.rte").summernote('code',equipmentNotes);

                  });

                  $("#new-prefcard-modal button.btn-delete-prefcard").show();

                  $("#new-prefcard-modal span.save-error").text("");
                  $("#new-prefcard-modal").modal("show");
                  

                });

              }); 
            
            });
            
            <!-- sp code for PDF -->
            
            // open pref card pdf button clicked
            $("#surgeon-detail button.btn-pdf-pref-card").on("click", function(e) {            
                var prefCardId = $(this).attr("data-record-id");
                // alert(prefCardId);
                window.open('/ARPreferenceCardPDF?pid='+prefCardId, '_blank', 'toolbar=0,location=0,menubar=0');
            
            });  
            
            <!-- SP end of code --> 
              
            // on the surgeon detail when a preference card is clicked, load in the detailList
          $("#surgeon-detail select.pref-cards").on("change", function(e) {
            
            console.log('##--pref card changed');
            var prefCardId = $(this).val();
            var practitionerId = $(this).attr("data-record-id");

            $("#tab-procedures span.position").empty();
            $("#tab-procedures span.procedure").empty();
            $("#tab-procedures span.surgicalTechnique").empty();
              
            $("#tab-procedures div.disposables").empty();
            $("#tab-procedures div.medications").empty();
            $("#tab-procedures div.equipment").empty();
            $("#tab-procedures div.equipment-notes").empty();
            $("#tab-procedures div.sutures").empty();
            Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrievePractitionerPrefCard}",
            prefCardId, function(result, event) {
                
                $("#tab-procedures span.pref-card-data").show();
                
                $("#surgeon-detail button.btn-edit-pref-card").attr("data-record-id", prefCardId);
                
                <!-- sp code for PDF -->                 
                $("#surgeon-detail button.btn-pdf-pref-card").attr("data-record-id", prefCardId);                
                <!-- SP end of code -->  
                $("#tab-procedures span.position").text(globalDecodeEntities(result.objPrefCard.Position__c || '')); 
                
                console.log('##--result: '+ JSON.stringify(result));
                
                displayPrefCardProdDetails('', "#tableDetailTaxonomy", result.lstPrefCardProcs, false); 
                $("#tab-procedures div.disposables").html( $('<div/>').html(result.objPrefCard.Disposables__c).text() );
                $("#tab-procedures div.medications").html( $('<div/>').html(result.objPrefCard.Medications__c).text() );
                $("#tab-procedures div.equipment").html( $('<div/>').html(result.objPrefCard.Equipment__c).text() );
                $("#tab-procedures div.equipment-notes").html( $('<div/>').html(result.objPrefCard.Equipment_Notes__c).text() );
                $("#tab-procedures div.sutures").html( $('<div/>').html(result.objPrefCard.Sutures__c).text() );
                // now get the products
                Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrievePractitionerPrefCardProducts}",
                  prefCardId, function(result, event) {
                    
                    $("#tab-procedures table.pref-card-products tbody").empty();
                    for ( var i=0; i < result.length; i++)  {
                      
                      var row = "<tr>";
                      row += "<td>"
                      
                      var productCode = result[i].Product__r.Material_Number__c || "N/A";
                      
                      // row += "<a href='http://www.arthrex.com/products/'"+productCode+"target='_blank'> "+productCode+"</a>"; 
                      row += ""+productCode+""; 
                      
                      row += "</td>";
                      row += "<td>"+globalDecodeEntities(result[i].Product__r.Name)+"</td>";
                      row += "</tr>"                         
                      $("#tab-procedures table.pref-card-products tbody").append(row);
                    
                    }
                
                });
                                  
            }); 
          
          });                       

           $("#new-prefcard-modal input.card-procedure-typeahead").typeahead({
               // typeahead setup for case products
               minLength: 3,
               source: function(query, onSuccess) {
                   search(query, '{!$RemoteAction.CS_ARContactsCC.searchProcedures}', onSuccess);                                    
               },
               displayText: function(item) {
                   return globalDecodeEntities(item.Name);
               },
               afterSelect: function(item) {
                  $("#new-prefcard-modal input.procedure").attr("data-record-id", item.Id);
                  $("#new-prefcard-modal input.procedure").attr("data-record-name", item.Name);
                  
                  setProductsFor(item.Id, true, 'new-prefcard-modal');
                  setSurgicalTechniques('new-prefcard-modal', false);
               }
           });

           // whenever the procedure field blurs replace the text value with the procedure name stored in
           // data-record-name this keeps the input val in sync with what was selected
           $("#new-prefcard-modal input.card-procedure-typeahead").on("blur", function() {
              $(this).val( $(this).attr("data-record-name") );
           });
           

           $("#new-prefcard-modal  input.card-products-typeahead").typeahead({
               // typeahead setup for case products
               minLength: 3,
               items: 50,
               source: function(query, onSuccess) {
                  var procedure = $("#new-prefcard-modal input.procedure").attr("data-record-id");
                  query = procedure+"::"+query;

                  search(query, '{!$RemoteAction.CS_ARContactsCC.searchProducts}', onSuccess);                                    
               },
               displayText: function(item) {
                  return globalDecodeEntities(item.Name+" "+item.Material_Number__c);
               },
               afterSelect: function(item) {

                   if ( $("#new-prefcard-modal  span[data-record-id="+item.Id+"].ctag").length === 0 ) {
                       // no duplicates
                       item.Name += " "+item.Material_Number__c;

                       $("#new-prefcard-modal div.ctag-list.products").append(obj2ctag(item));
                   }
                   $("#new-prefcard-modal input.card-products-typeahead").val("");

               }
           });         

           $("#new-prefcard-modal .btn-clear-products").on("click", function(e) {
                
                e.preventDefault();
                e.stopPropagation();
              
                // deletes products selected in preference card
                $("#new-prefcard-modal div.products").empty();
                //$("#new-prefcard-modal div.products").attr("data-record-id").clear();
                  
           });
           
           $("#new-prefcard-modal button.btn-save-prefcard").on("click", function(e) {
              // saves a new preference card

              e.preventDefault();
              e.stopPropagation();
              
              var addedProcedures = $('#new-prefcard-modal #tablePrefCardTaxonomy > tbody  > tr').length;

              //  Prompt if there are any un-added product teams.
              
                if(addedProcedures > 0 &&
                    $("#new-prefcard-modal div.ctag-list.procedures").children().length > 0 ){
                    //if(confirm("Procedure selection is incomplete. Do you wish you go back and add them?")){
                    $("#new-prefcard-modal span.save-error").text("Procedure selection is incomplete. Do you wish to go back and add them?");
                    return false;
                    //}
                }
              
              
              if($("#new-prefcard-modal div.ctag-list.procedures").children().length > 0 ){
                addTaxonomy('#new-prefcard-modal');
              }
              
                
              var prefCardId = $("#new-prefcard-modal").attr("data-record-id");
              if ( typeof prefCardId === "undefined" || prefCardId.length === 0 ) {
                prefCardId = null;
                //$("#new-prefcard-modal input.prefCardName").removeAttr("readonly");
              } else {
                //$("#new-prefcard-modal input.prefCardName").attr("readonly",true);
              }

              // selecting - new - from the pull down on the tab sets the current practioners id 
              var practitionerId = $("#new-prefcard-modal").attr("data-current-practioner-id");
              
              var procedureId = $("#new-prefcard-modal input.procedure").attr("data-record-id");
              
              var lstProcedureIds = [];
              var lstSurgicalTechniqueIds = [];
              
              
              $('#new-prefcard-modal #tablePrefCardTaxonomy > tbody  > tr').each(function() {
                
                console.log('##--productTeam Ids: ' + $(this).attr("data-productteam-id"));
                var productTeamId = $(this).attr("data-productteam-id");
                var productTeamName = $(this).find('td.product-marker').val();
                
                console.log('##--productTeamName: '+ productTeamName);
                $(this).find('td.procedures-marker >span').each (function() {
                    console.log('##--procedure Ids: ' + $(this).attr("data-record-id"));
                    lstProcedureIds.push(productTeamId+'::'+ $(this).attr("data-record-id") +'::' + $(this).attr("data-label") + '::' + productTeamName);
                }); 
                
                $(this).find('td.surgical-marker >span').each (function() {
                    
                    console.log('##--surgical technique Ids: ' + $(this).attr("data-record-id")); 
                    lstSurgicalTechniqueIds.push(productTeamId+'::'+ $(this).attr("data-record-id") +'::' + $(this).attr("data-label"));
                }); 
                    
              });// for-each row 
              
              //var surgicalTechniqueId = $("#new-prefcard-modal input.surgical-technique").attr("data-record-id");
              var position = $("#new-prefcard-modal textarea.position").val();
              var productIds = [];
              $("#new-prefcard-modal div.products").children().each(function() {
                productIds.push($(this).attr("data-record-id"));
              });

              var disposablesData = $("#new-prefcard-modal div.disposables.rte").summernote('code');
              var suturesData = $("#new-prefcard-modal div.sutures.rte").summernote('code');
              var medicationsData = $("#new-prefcard-modal div.medications.rte").summernote('code');
              var equipmentData = $("#new-prefcard-modal div.equipment.rte").summernote('code');
              var equipmentNotesData = $("#new-prefcard-modal div.equipment-notes.rte").summernote('code');            

              var name = $("#new-prefcard-modal input.prefCardName").val();
               
              console.log('##--lstProcedureIds: ' + lstProcedureIds);
              // validate what the user has entered
                var valid = true;
                valid = valid && typeof lstProcedureIds != "undefined" && lstProcedureIds.length > 0;
                valid = valid && typeof name != "undefined" && name.length > 0;
                if ( !valid ) {
                    $("#new-prefcard-modal .save-error").text("Missing required fields");
    
                    return false;
                } else {
                    // no errors, clear the error text in case there was one previously
                    $("#new-prefcard-modal .save-error").text("");
                }
              
              // Save the preference card

              var btnTxt = $("#new-prefcard-modal button.btn-save-prefcard").text();
              $("#new-prefcard-modal button.btn-save-prefcard").text("Saving...");
              $("#new-prefcard-modal button").attr("disabled",true);
              
              // first, make sure the name is unique
              Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.isUniquePractitionerProcedureName}",
                practitionerId, name, function(result, event) { 
                  //console.log('##--procedureId: '+ procedureId);
                  //console.log('##--surgicalTechniqueId: '+ surgicalTechniqueId);
              
                  if ( result != true && prefCardId === null) {
                    // if prefCardId != null then this is an update and the procedure name is readonly anyway so we don't care
                    
                    $("#new-prefcard-modal span.save-error").text("Name must be unique");
                    $("#new-prefcard-modal button.btn-save-prefcard").text(btnTxt);
                    $("#new-prefcard-modal button").removeAttr("disabled");

                  } else {
                    // name is unique (or this is an update), proceed

                    Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.csavePractitionerProcedure}",
                      prefCardId, 
                      name,
                      practitionerId, 
                      lstProcedureIds,
                      //procedureId,
                      lstSurgicalTechniqueIds || "", 
                      //surgicalTechniqueId || "", 
                      disposablesData, 
                      equipmentData, 
                      equipmentNotesData,
                      medicationsData, 
                      suturesData, 
                      position, 
                      productIds, 
                       function(result, event) {
                        
                        console.log('##--practitioner proc save result: '+ JSON.stringify(result));
                        $("#new-prefcard-modal button.btn-save-prefcard").text(btnTxt);
                        $("#new-prefcard-modal button").removeAttr("disabled");

                        if ( typeof prefCardId === "undefined" || prefCardId === null || prefCardId.length === 0 ) {
                          // new prefcard, add it ot the pull down
                          $("#tab-procedures select.pref-cards").prepend("<option value='"+result.objPrefCard.Id+"' selected='true'>"+result.objPrefCard.Pref_Card_Name__c+"</option>");
                          
                          // remove the none prefcard if it exists
                          $("#tab-procedures select.pref-cards option[value='']").remove();

                        } else {
                          // prefcard update, just update the name in case it changed
                          $("#tab-procedures select.pref-cards option[value="+result.objPrefCard.Id+"]").text(result.objPrefCard.Pref_Card_Name__c);
                        }
                        
                        $("#tab-procedures select.pref-cards").change();
                        
                        $("#new-prefcard-modal div.disposables.rte").summernote('reset');
                        $("#new-prefcard-modal div.sutures.rte").summernote('reset');
                        $("#new-prefcard-modal div.medications.rte").summernote('reset');
                        $("#new-prefcard-modal div.equipment.rte").summernote('reset');
                        $("#new-prefcard-modal div.equipment-notes.rte").summernote('reset');
                        
                        // hide the delete button in case this was an edit
                        $("#new-prefcard-modal button.btn-delete-prefcard").hide();
                        
                        //enable the edit button
                        $("#surgeon-detail button.btn-edit-pref-card").removeAttr("disabled");
                        $("#surgeon-detail button.btn-pdf-pref-card").removeAttr("disabled");
                        
                        $("#new-prefcard-modal").modal("hide");

                     });                     

                  }

              });

           });

          $("#new-prefcard-modal").on("hidden.bs.modal"  , function (e) {  
              $("#new-prefcard-modal").removeAttr("data-current-practioner-id");
              $("#new-prefcard-modal").removeAttr("data-record-id");
              
              $("#new-prefcard-modal input.procedure").removeAttr("data-record-id");
              $("#new-prefcard-modal #select-procedure").selectpicker('show');
              $("#new-prefcard-modal input.procedure").removeAttr("data-record-name");
              $("#new-prefcard-modal #procedures").val(''); 
              $("#new-prefcard-modal input.procedure").val('');
              $("#new-prefcard-modal input.card-products-typeahead").val('');
              $("#new-prefcard-modal input.prefCardName").val('');
              $("#new-prefcard-modal input.surgical-technique").val('');
              $("#new-prefcard-modal input.surgical-technique").removeAttr("data-record-id");
              $("#new-prefcard-modal input.surgical-technique").removeAttr("data-record-name"); 
              $("#new-prefcard-modal textarea.position").val('');
              $("#new-prefcard-modal div.products").empty();
              $("#new-prefcard-modal .productteam tbody").empty(); 
              
              $("#new-prefcard-modal div.procedures.ctag-list").empty();
              $("#new-prefcard-modal div.surgical-technique.ctag-list").empty();
              $("#new-prefcard-modal table#tablePrefCardTaxonomy tbody").empty();
          });


            $(".ctag-list").on("click","[data-role=remove-tag]", function() {
              // removes tags from the tag-list
              $(this).parent().remove();
              
              syncSelectionAfterDelete('#new-prefcard-modal');
          }); 
          
          $("#new-prefcard-modal").on("show.bs.modal", function (e) {
            
            $("#new-prefcard-modal div#divProcedures").hide();
            $("#new-prefcard-modal #select-procedure").empty();
            $("#new-prefcard-modal #select-surgical-technique").empty();
            $("#new-prefcard-modal #select-procedure").selectpicker('refresh');
            $("#new-prefcard-modal #select-surgical-technique").selectpicker('refresh');
            
            //  TODO: Need to prepopulate Product Teams as drop down
            var selectList = $("#new-prefcard-modal select#select-productteam");
            selectList.find("option:gt(0)").remove();
            Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.getAllProductTeams}",
                function(result, event) {
                $.each(result, function(i, v){
                    console.log('##--Product_Category__c:' + v.Product_Category__c);
                    $('#new-prefcard-modal #select-productteam')
                         .append($("<option></option>")
                                    .attr("data-record-id", v.Id)
                                    .attr("value",globalDecodeEntities(v.Product_Category__c))
                                    .text(globalDecodeEntities(v.Name))); 
                });
            }); //  end of get all Product Teams
            
            
          });   //  end of new-prefcard-modal before show 
          
          // opens the edit surgeon modal and sets the account id
          $("#surgeon-detail button.edit-surgeon-btn").on("click", function() {
           
            var practitionerId = $(this).attr("data-record-id");
            
              
            $("#surgeon-detail i.edit-busy").show();  
            Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.retrievePractitioner}",
          practitionerId, function(result, event) {
                
                var assignedSalesRepEmail = result.Assigned_Sales_Rep_Email__pc || "None";                
                var awards = globalDecodeEntities(result.Awards__c) || "None";      
                var certifications = globalDecodeEntities(result.Certifications__c) || "None";      
                var competitions = globalDecodeEntities(result.Competitions__c) || "None";      
                var competitors = globalDecodeEntities(result.Competitors__c) || "None";      
                var education = result.Education__c ? $("<div/>").html(result.Education__c).text() : "None"; 
                var fellowships = globalDecodeEntities(result.Fellowships__c) || "None";      
                var firstName = globalDecodeEntities(result.FirstName);      
                var focusOfMyPractice = result.Focus_of_my_practice__pc ? $("<div/>").html(result.Focus_of_my_practice__pc).text() : ""; 

                var designation = result.Designation__pc ? $("<div/>").html(result.Designation__pc).text() : "";  
                var specialty = result.Arthrex_com_Surgeon_Specialty__pc ? $("<div/>").html(result.Arthrex_com_Surgeon_Specialty__pc).text() : "";  
                var gender = result.Gender__c;      
                var id = result.Id
                var internship = globalDecodeEntities(result.Internship__c) || "";      
                var lastName = globalDecodeEntities(result.LastName);      
                var npi = result.NPI__pc;      
                var lang = globalDecodeEntities(result.Native_Language__c);      
                var organization = globalDecodeEntities(result.Organization__c) || "None";      
                var birthdate = result.PersonBirthdate ? moment(result.PersonBirthdate).format("MM/DD/YYYY") : "None";      
                var email = result.PersonEmail;
                
                var hasOptedOutOfEmail = result.PersonHasOptedOutOfEmail;
                var city = globalDecodeEntities(result.PersonMailingCity);      
                var countryCode = result.PersonMailingCountryCode;      
                var zip = result.PersonMailingPostalCode;      
                var state = globalDecodeEntities(result.PersonMailingState);      
                var street = globalDecodeEntities(result.PersonMailingStreet);      
                var city = globalDecodeEntities(result.PersonMailingCity);      
                var phone = result.Phone;      
                var mobilePhone = result.PersonMobilePhone;
                var countryCode = result.PersonOtherCountryCode || "None";      
                var title = globalDecodeEntities(result.PersonTitle);      
                var personalInterest = globalDecodeEntities(result.Personal_Intrest__c);      
                var practiceName = globalDecodeEntities(result.Practice_Name__c);      
                var proSocieties = globalDecodeEntities(result.Professional_Societies__c) || "None";      
                var profilePic = result.Profile_Picture__c || "None";      
                var residencies = globalDecodeEntities(result.Residencies__c) || "None";      
                var salutation = globalDecodeEntities(result.Salutation);      
                var sportInterests = globalDecodeEntities(result.Sport_Interests__c) || "None";  
                var userType = globalDecodeEntities(result.User_Type__pc);
        
                // init all fields
                if( $("#edit-surgeon-modal input.email-opt-out").val() === "on" ) {
                  $("#edit-surgeon-modal input.email-opt-out").prop("checked", false);
                }
                $("#edit-surgeon-modal select").val("0");                
                $("#edit-surgeon-modal div.ctag-list").empty();                
                

                $("#edit-surgeon-modal").attr("data-record-id",id);
                $("#edit-surgeon-modal input.npi").val(npi);
                $("#edit-surgeon-modal input.birthdate").val(birthdate);
                $("#edit-surgeon-modal input.firstName").val(firstName);
                $("#edit-surgeon-modal input.lastName").val(lastName);
                $("#edit-surgeon-modal input.email").val(email);
                
                if ( hasOptedOutOfEmail ) {
                  $("#edit-surgeon-modal input.email-opt-out").click();
                }
                
                $("#edit-surgeon-modal input.assigned-sales-rep-email").val( assignedSalesRepEmail );
                $("#edit-surgeon-modal input.practice").val( practiceName );
                $("#edit-surgeon-modal input.lang").val(lang);
                $("#edit-surgeon-modal input.title").val(title);
                
                setSelectedValueByLabel($("#edit-surgeon-modal select.gender"),gender );
                setSelectedValueByLabel($("#edit-surgeon-modal select.salutation"), salutation );
                setSelectedValueByLabel($("#edit-surgeon-modal select.user-type"), userType  );
                setSelectedValueByLabel($("#edit-surgeon-modal select.practice-focus"), focusOfMyPractice.split(";") );
                setSelectedValueByLabel($("#edit-surgeon-modal select.designation"), designation.split(";") );
                setSelectedValueByLabel($("#edit-surgeon-modal select.specialty"), specialty.split(";") );
                setSelectedValueByLabel($("#edit-surgeon-modal select.mState"), state  );
                
                $("#edit-surgeon-modal input.phone").val( phone );
                $("#edit-surgeon-modal input.mobilePhone").val( mobilePhone );
                $("#edit-surgeon-modal input.mStreet").val( street );
                $("#edit-surgeon-modal input.mCity").val(city);
                $("#edit-surgeon-modal input.mZip").val(zip);         
    
                $("#edit-surgeon-modal").modal("show");
                
                $("#surgeon-detail i.edit-busy").hide();
            });
                        
          });

          // opens the edit surgeon bio modal and sets the account id
          $("#surgeon-detail button.edit-surgeon-bio-btn").on("click", function() {
            
            var practitionerId = $(this).attr("data-record-id");
            $("#surgeon-bio-modal").attr("data-record-id", practitionerId);

            $("#tab-bio button.edit-surgeon-bio-btn").attr("data-record-id",practitionerId);

            var graduate = $("#tab-bio div.graduate").text();
            var graduateId = $("#tab-bio div.graduate").attr("data-record-id");
            
            var undergraduate = $("#tab-bio div.undergraduate").text();
            var undergraduateId = $("#tab-bio div.undergraduate").attr("data-record-id");
            
            var doctorate = $("#tab-bio div.doctorate").text();
            var doctorateId = $("#tab-bio div.doctorate").attr("data-record-id");

            var internship = $("#tab-bio div.internship").text();
            var residencies = $("#tab-bio div.residencies").text();
            var fellowships = $("#tab-bio div.fellowships").text();
            var certifications = $("#tab-bio div.certifications").text();
            var awards = $("#tab-bio div.awards").text();
            var professionalSocieties = $("#tab-bio div.professional-societies").text();
            var sportsTeamsAffiliations = $("#tab-bio div.sports-teams-affiliations").text();
            var personalInterest = $("#tab-bio div.personal-interest").text();
            var spouseAndChildren = $("#tab-bio div.spouse-and-children").text();
          

            $("#surgeon-bio-modal input.graduate").val(graduate);
            $("#surgeon-bio-modal input.graduate").attr("data-record-id", graduateId);
            
            $("#surgeon-bio-modal input.undergraduate").val(undergraduate);
            $("#surgeon-bio-modal input.undergraduate").attr("data-record-id", undergraduateId);

            $("#surgeon-bio-modal input.doctorate").val(doctorate);
            $("#surgeon-bio-modal input.doctorate").attr("data-record-id", doctorateId);

            $("#surgeon-bio-modal textarea.internship").val(internship);
            $("#surgeon-bio-modal textarea.residencies").val(residencies);
            $("#surgeon-bio-modal textarea.fellowships").val(fellowships);
            $("#surgeon-bio-modal textarea.certifications").val(certifications);
            $("#surgeon-bio-modal textarea.awards").val(awards);
            $("#surgeon-bio-modal textarea.professional-societies").val(professionalSocieties);
            $("#surgeon-bio-modal textarea.sports-teams-affiliations").val(sportsTeamsAffiliations);
            $("#surgeon-bio-modal textarea.personal-interest").val(personalInterest);
            $("#surgeon-bio-modal textarea.spouse-and-children").val(spouseAndChildren);

            $("#surgeon-bio-modal").modal("show");

          
          });

          // saving surgeon bio
          $("#surgeon-bio-modal button.btn-save-surgeon-bio").on("click", function(e) {

            e.preventDefault();
            e.stopPropagation();
            
            $("#surgeon-bio-modal .save-error").text("");
            
            /*
            Below logic needs to be reevaluated
            */
            /*if(($("#surgeon-bio-modal input.graduate").val() != 'None' && $("#surgeon-bio-modal input.graduate").attr("data-record-id") == '') || 
                ($("#surgeon-bio-modal input.undergraduate").val() != 'None' && $("#surgeon-bio-modal input.undergraduate").attr("data-record-id") == '') ||
                ($("#surgeon-bio-modal input.doctorate").val() != 'None' && $("#surgeon-bio-modal input.doctorate").attr("data-record-id") == '')){
                
                $("#surgeon-bio-modal .save-error").text("Select valid institutions.");
                return false;
            }*/
            
                //  if a previously selected institution is deleted, we empty the Previous selected ID
            if($("#surgeon-bio-modal input.graduate").val() == ''){
                $("#surgeon-bio-modal input.graduate").attr("data-record-id", "");
            }
            if($("#surgeon-bio-modal input.undergraduate").val() == ''){
                $("#surgeon-bio-modal input.undergraduate").attr("data-record-id", "");
            }
            if($("#surgeon-bio-modal input.doctorate").val() == ''){
                $("#surgeon-bio-modal input.doctorate").attr("data-record-id", "");
            }
            
            var bio = {
              id : $("#surgeon-bio-modal").attr("data-record-id"),
              graduateId : $("#surgeon-bio-modal input.graduate").attr("data-record-id"),
              undergraduateId : $("#surgeon-bio-modal input.undergraduate").attr("data-record-id"),
              doctorateId : $("#surgeon-bio-modal input.doctorate").attr("data-record-id"),
              graduate : $("#surgeon-bio-modal input.graduate").val(),
              undergraduate : $("#surgeon-bio-modal input.undergraduate").val(),
              doctorate : $("#surgeon-bio-modal input.doctorate").val(),   
              internship : $("#surgeon-bio-modal textarea.internship").val(),
              residencies : $("#surgeon-bio-modal textarea.residencies").val(),
              fellowships : $("#surgeon-bio-modal textarea.fellowships").val(),
              certifications : $("#surgeon-bio-modal textarea.certifications").val(),
              awards : $("#surgeon-bio-modal textarea.awards").val(),
              professionalSocieties : $("#surgeon-bio-modal textarea.professional-societies").val(),
              sportsTeamsAffiliations : $("#surgeon-bio-modal textarea.sports-teams-affiliations").val(),
              personalInterest : $("#surgeon-bio-modal textarea.personal-interest").val(),
              spouseAndChildren : $("#surgeon-bio-modal textarea.spouse-and-children").val()
            };

            // Save the bio 
            var btnTxt = $("#surgeon-bio-modal button.btn-save-surgeon-bio").text();
            $("#surgeon-bio-modal button.btn-save-surgeon-bio").text("Saving...");
            $("#surgeon-bio-modal button").attr("disabled",true);
            Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.updatePractitionerBio}", 
              bio, function(result, event) {


                  $("#surgeon-bio-modal button.btn-save-surgeon-bio").text(btnTxt);
                  $("#surgeon-bio-modal button").removeAttr("disabled");

                  // reload the new practitioner info with the data from the modal
                  $("#tab-bio div.graduate").text( bio.graduate );
                  $("#tab-bio div.undergraduate").text( bio.undergraduate );
                  $("#tab-bio div.doctorate").text( bio.doctorate );
                  $("#tab-bio div.internship").text( bio.internship );
                  $("#tab-bio div.residencies").text( bio.residencies );
                  $("#tab-bio div.fellowships").text( bio.fellowships );
                  $("#tab-bio div.certifications").text( bio.certifications );
                  $("#tab-bio div.awards").text( bio.awards );
                  $("#tab-bio div.professional-societies").text( bio.professionalSocieties );
                  $("#tab-bio div.sports-teams-affiliations").text( bio.sportsTeamsAffiliations );
                  $("#tab-bio div.personal-interest").text( bio.personalInterest );
                  $("#tab-bio div.spouse-and-children").text( bio.spouseAndChildren );                  
                  
                  // hide the modal and clear the values
                  $("#surgeon-bio-modal").modal("hide");
                  $("#surgeon-bio-modal textarea").val("");
                  $("#surgeon-bio-modal").attr("data-record-id", "");                  

             });          

          });
          
          //Release 2.2
          //Component ID:- CID000064
          //Developer Name:- Mimansha Samal
          //Date:- 12/8/2016
          //Purpose:- cancel and Delete Account Affiliation for a Surgeon
       <!--  ---------------------Start-----Mimansha Samal Code-------------------- -->   
          //Cancel Add Account Affiliation Modal
          $("#add-account-affiliation-modal button.btn-cancel").on("click", function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            $("#add-account-affiliation-modal input").val("");
            //$("#add-account-affiliation-modal").attr("data-account-id", "");
            $("#add-account-affiliation-modal").attr("data-record-id", "");
            $("#add-surgeon-affiliation-modal #affiliationErrors").html('');
            $("#add-account-affiliation-modal button.btn-delete").hide();
            $("#add-account-affiliation-modal div.ctag-list.account").empty();           
            var practitionerId = $("#add-account-affiliation-modal").attr("data-account-id");
             console.log('practitioner ID in Close--'+practitionerId );
            displayAccountAffiliations(practitionerId);
            
            $("#add-account-affiliation-modal").modal("hide");
            

          });
          
          $('#add-account-affiliation-modal').on('hidden.bs.modal', function (e) {
                        $('#add-account-affiliation-modal input.clear-on-close').val('');
                        $('#add-account-affiliation-modal select.clear-on-close').val('');
                        $("#add-account-affiliation-modal div.ctag-list.account").empty();
                        $("#add-account-affiliation-modal input").removeAttr("disabled");
                        $("#add-account-affiliation-modal button.btn-save").show();
                        $("#add-account-affiliation-modal button.btn-delete").hide();
                        $("#add-account-affiliation-modal #affiliationErrors").html('');
          });
          
          // Delete account affiliation for practitioner
          $("#add-account-affiliation-modal button.btn-delete").on("click", function(e) {
            e.preventDefault();
            e.stopPropagation();

            var affiliationId = $("#add-account-affiliation-modal").attr("data-record-id");
            var practitionerId = $("#add-account-affiliation-modal").attr("data-account-id");
            
            console.log('Affiliation ID to be deleted----'+affiliationId+ 'practitioner delete--' + practitionerId  );
            
            var btnTxt = $("#add-account-affiliation-modal button.btn-delete").text();
            $("#add-account-affiliation-modal #affiliationErrors").text("");
            $("#add-account-affiliation-modal button.btn-delete").text("Deleting...");
            $("#add-account-affiliation-modal button").attr("disabled",true);
            Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.deleteAccountAffiliation}", 
              affiliationId, function(result, event) {

              if(event.statusCode == 200){   
                  $("#add-account-affiliation-modal button.btn-delete").text(btnTxt);
                  $("#add-account-affiliation-modal button").removeAttr("disabled");

                  $("#add-account-affiliation-modal input").val("");                  
                  $("#add-account-affiliation-modal save-error").text("");

                  $("#add-account-affiliation-modal").attr("data-record-id", "");
                  $("#add-account-affiliation-modal").attr("data-account-id", "");

                  displayAccountAffiliations(practitionerId);

                  $("#add-account-affiliation-modal").modal("hide");
              }
              else{
                  $("#add-account-affiliation-modal #affiliationErrors").html('Unexpected error. Please try again.');
                  $("#add-account-affiliation-modal button.btn-delete").text(btnTxt);
                  $("#add-account-affiliation-modal button").removeAttr("disabled");
              }                  

            });

          });
          
           $("#add-account-affiliation-modal button.btn-save").on("click", function() {
               console.log('enter');
               $('#add-account-affiliation-modal #affiliationErrors').html('');
               $("#add-account-affiliation-modal input.account-typeahead").val("");
               var accounts = [];
               var accountAlreadyExistsError = false;
               populateAccounts();
               var practitionerId = $("#add-account-affiliation-modal").attr("data-account-id");
               $("#add-account-affiliation-modal div.account").children().each(function() {
                            
                   var accountId =$(this).attr("data-record-id");
                   
                   console.log('Practitioner in save =='+practitionerId  +'HCP=='+accountId );
                   if($('#accountsTag').children('div[data-account-id='+accountId+']' ).length != 0){
                       accountAlreadyExistsError = true;
                   }else{
                       if($(this).attr("data-record-id")!=" " && $(this).attr("data-record-id")!=null ){                           
                           accounts.push($(this).attr("data-record-id"));
                       }
                   }
                   
               }); 
                        
               if(accountAlreadyExistsError){
                   $("#add-account-affiliation-modal #affiliationErrors").html('Account Affiliation already exists.');
               }
               else if (! accounts.length == 0 ){
                   Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.saveAccountAffiliations}",
                       practitionerId,accounts,function(result, event) {  
                                  
                           if(event.statusCode == 200){                                
                               $('#add-account-affiliation-modal').modal('hide'); 
                               displayAccountAffiliations(practitionerId);
                                   
                           }else{
                               $("#add-account-affiliation-modal #affiliationErrors").html('Unexpected error. Please try again.');
                           }
                   });   //  end of remote call
                            
               } else{
                   $("#add-account-affiliation-modal #affiliationErrors").html('Please select atleast one Health Care Organization.');
                            
               } 
                        
          }); //  end of account add type modal.save click   
              
    <!--  ---------------------End-----Mimansha Samal Code----------------------- -->
          
          // delete new contact for a provider
          $("#provider-contact-modal button.btn-delete").on("click", function(e) {
            e.preventDefault();
            e.stopPropagation();

            var contactId = $("#provider-contact-modal").attr("data-record-id");
            var accountId = $("#provider-contact-modal").attr("data-account-id");
              
            var btnTxt = $("#provider-contact-modal button.btn-delete").text();
            $("#provider-contact-modal button.btn-delete").text("Deleting...");
            $("#provider-contact-modal button").attr("disabled",true);
            Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.deleteProviderContact}", 
              contactId, function(result, event) {


                  $("#provider-contact-modal button.btn-delete").text(btnTxt);
                  $("#provider-contact-modal button").removeAttr("disabled");

                  $("#provider-contact-modal input").val("");
                  $("#provider-contact-modal textarea").val("");
                  $("#provider-contact-modal select").val("");
                  $("#provider-contact-modal save-error").text("");

                  $("#provider-contact-modal").attr("data-record-id", "");
                  $("#provider-contact-modal").attr("data-account-id", "");

                  displayProviderRelatedContacts(accountId);

                  $("#provider-contact-modal").modal("hide");                  

            });

          });          
          
          
          function validateEmail(email) {
            var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            return re.test(email);
          }
          
          $("button.new-contact").on("click", function(e) {
            $("#spnPhone").html("validated").hide();
            $("#spnMobilePhone").html("validated").hide();
            $("#provider-contact-modal span.save-error").text("");
          });
          
          // cancel new contact for a provider 
          $("#provider-contact-modal button.btn-cancel").on("click", function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            $("#provider-contact-modal input").val("");
            $("#provider-contact-modal textarea").val("");
            $("#provider-contact-modal select").val("");
            $("#provider-contact-modal span.save-error").text("");
            $("#provider-contact-modal").attr("data-account-id", "");
            $("#provider-contact-modal").attr("data-record-id", "");

            $("#provider-contact-modal button.btn-delete").hide();
            

            $("#provider-contact-modal").modal("hide");

          });
          
          
         
          // saving a new contact for a provider
          $("#provider-contact-modal button.btn-save").on("click", function(e) {
                var isValidPhone = true;
               
                // Release 2.2 /CID - 000057/Swetha P/Dec/9/2016/Phone validation
              
                if(document.getElementById('Phone').value.length > 0 && document.getElementById('Phone').value.length != 10){
                    $("#spnPhone").html("Invalid entry").show().css("color", "red").css("font-size", "12px");
                    isValidPhone = false;           
                }else{
                    $("#spnPhone").html("validated").hide();
                }
                
                // Mobile Phone Validation
                if(document.getElementById('contactMobilePhone').value.length > 0 && document.getElementById('contactMobilePhone').value.length != 10){
                    $("#spnMobilePhone").html("Invalid entry").show().css("color", "red").css("font-size", "12px");
                    isValidPhone = false;
                }else{
                    $("#spnMobilePhone").html("validated").hide();
                }
                               
                   // Release 2.2 /CID - 000057/Swetha P/Dec/9/2016/Phone validation
                   
            e.preventDefault();
            e.stopPropagation();
            
            var id = $("#provider-contact-modal").attr("data-record-id");
            var accountId = $("#provider-contact-modal").attr("data-account-id");
            var firstName = $("#provider-contact-modal input.firstName").val();
            var lastName = $("#provider-contact-modal input.lastName").val();
            var title = $("#provider-contact-modal input.title").val();
            var email = $("#provider-contact-modal input.email").val();
            var phone = $("#provider-contact-modal input.phone").val();
            var mobile = $("#provider-contact-modal input.mobile").val();
            var street = $("#provider-contact-modal input.street").val();
            var city = $("#provider-contact-modal input.city").val();
            var state = $("#provider-contact-modal select.state").val();
            var zip = $("#provider-contact-modal input.zip").val();
            var notes = $("#provider-contact-modal textarea.notes").val();          

            var hasMissingField = false;
            if ( firstName.length === 0 ) { hasMissingField = true; }
            if ( lastName.length === 0 ) { hasMissingField = true; }
            if ( email.length === 0 ) { hasMissingField = true; }
            if ( phone.length === 0 ) { hasMissingField = true; }
           
            var inValidEmail = false;
            
            if(!validateEmail(email)){
                inValidEmail = true;
            }
               // Release 2.2 /CID - 000057/Swetha P/Dec/9/2016/Phone validation
               
            if ( hasMissingField ) {
              // at least one required field is missing

              $("#provider-contact-modal span.save-error").text("Missing required fields");

            } else if ( !isValidPhone ) {
                    return false;
            } else if(inValidEmail){
            
                $("#provider-contact-modal span.save-error").text("Please provide a valid email");
            }else {
              // validation passed
              
             // Release 2.2 /CID - 000057/Swetha P/Dec/9/2016/Phone validation
             
               
              var contact = {
                id: id,
                accountId: accountId,
                firstName: firstName,
                lastName: lastName,
                email: email,
                title: title,
                phone: phone,
                mobile: mobile,
                city: city,
                state: state,
                street: street,
                zip: zip,
                notes: notes
              };

              var btnTxt = $("#provider-contact-modal button.btn-save").text();
              $("#provider-contact-modal button.btn-save").text("Saving...");
              $("#provider-contact-modal span.save-error").text("");
              $("#provider-contact-modal button").attr("disabled",true);
              Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.saveContact}", 
                contact, function(result, event) {


                    $("#provider-contact-modal button.btn-save").text(btnTxt);
                    $("#provider-contact-modal button").removeAttr("disabled");

                    $("#provider-contact-modal input").val("");
                    $("#provider-contact-modal textarea").val("");
                    $("#provider-contact-modal select").val("");
                    $("#provider-contact-modal save-error").text("");
                    $("#provider-contact-modal button.btn-delete").hide();

                    $("#provider-contact-modal").attr("data-record-id", "");
                    $("#provider-contact-modal").attr("data-account-id", "");

                    displayProviderRelatedContacts(accountId);

                    $("#provider-contact-modal").modal("hide");
                    

              });

            }

          });

          // opening the modal for editing povider detail
          $("#provider-detail button.edit-provider-detail").on("click", function() {

              // populate the fields from the detail
              $("#edit-provider-detail-modal input.nickname").val( $("#provider-detail div.nickname").text() );
              $("#edit-provider-detail-modal input.website").val( $("#provider-detail p.website").text() );
              $("#edit-provider-detail-modal input.number").val( $("#provider-detail p.number").text() );
              $("#edit-provider-detail-modal input.sap-name").val( $("#provider-detail p.sap-name").text() );
              $("#edit-provider-detail-modal input.phone").val( $("#provider-detail p.phone").text() );              
              $("#edit-provider-detail-modal input.fax").val( $("#provider-detail p.fax").text() );

              // replace '<br/>' with newlines for display in textarea
              var address = $("#provider-detail p.address").html().replace(/\<br\>/g, "\n").replace(/\<br \/\>/g, "\n")
              $("#edit-provider-detail-modal textarea.address").val( address );

              // clear any old errors before we bring up the modal
              $("#edit-provider-detail-modal .error").text("");

              $("#edit-provider-detail-modal").modal("show");

          });

          // saving provider detail
          $("#edit-provider-detail-modal button.save-provider-detail-btn").on("click", function() {

            var detail = {
              id: $("#edit-provider-detail-modal").attr("data-record-id"),
              nickName: $("#edit-provider-detail-modal input.nickname").val(),
              website: $("#edit-provider-detail-modal input.website").val()
            };

            var error = "";
            if ( typeof detail.nickName === "undefined" || detail.nickName.length === 0 ) {
              error = "Missing required field";
            }
            
            if ( error.length === 0 ) {
              // no validation errors

              var btnTxt = $(this).text();
              $(this).text("Saving...");
              $("#edit-provider-detail-modal button").attr("disabled",true);
              Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.updateProvider}",
              detail, function(result, event) { 

                  $("#edit-provider-detail-modal button.edit-provider-detail-btn").text(btnTxt);
                  $("#edit-provider-detail-modal button").removeAttr("disabled");
                  
                  if ( event.status ) {
                    // save successful, change the displayed nickname to the newly saved value
                    // for both the detail screen and in the account list
                    $("#provider-detail div.nickname").text(detail.nickName);
                    $("#provider-detail p.website").text(detail.website);
                    
                        //  update the list in the table
                    $("a.client-link.provider[data-record-id="+detail.id+"]").text(detail.nickName);
                    $("table.table-providers").empty();
                    setAccountsAndStaff();
                    
                    
                    $("#edit-provider-detail-modal").modal("hide");

                  } else {
                    // errors saving the update

                    $("#edit-provider-detail-modal .error").text(result);

                  }

              });

            } else {
              $("#edit-provider-detail-modal .error").text(error);
            }
            
            $(this).text(btnTxt);

          });
          
          //code added by Ansu for saving account detail release2.2/CID-000065  edit  //saving provider detail
          $("#account-detail-modal button.save-account-detail-btn").on("click", function() {

            var detail = {
              id: $("#edit-provider-detail-modal").attr("data-record-id"),
              credentialcompany: $("#account-detail-modal input.credentialcompany").val(),
              SignInLocation: $("#account-detail-modal input.SignInLocation").val(),
              RepresentativeParking: $("#account-detail-modal input.RepresentativeParking").val(),
              OperatingRoomLocation: $("#account-detail-modal input.OperatingRoomLocation").val(),
              SterileProcessingLocation: $("#account-detail-modal input.SterileProcessingLocation").val(),
              RequiredtoChangeScrubs: $("#account-detail-modal select.RequiredtoChangeScrubs").val(),
              SignInLocation: $("#account-detail-modal input.SignInLocation").val(),
              OtherAttireNotes: $("#account-detail-modal input.OtherAttireNotes").val(),
              AccountFiscalYear: $("#account-detail-modal input.AccountFiscalYear").val(),
              SterileProcessingHourStartTime: $("#account-detail-modal select.SterileProcessingHourStartTime").val(),
              SterileProcessingHourEndTime: $("#account-detail-modal select.SterileProcessingHourEndTime").val(),
              SterileProcessingHourTime: ($("#account-detail-modal select.SterileProcessingHourStartTime").val()!=" " ||  $("#account-detail-modal select.SterileProcessingHourEndTime").val()!=" ") ? globalDecodeEntities($("#account-detail-modal select.SterileProcessingHourStartTime").val()+ ' - ' +  $("#account-detail-modal select.SterileProcessingHourEndTime").val()) : " ",
              //AccountFiscalYearStartDay: $("#account-detail-modal select.AccountFiscalYearStartDay").val(),
              //AccountFiscalYearStartMonth: $("#account-detail-modal select.AccountFiscalYearStartMonth").val(),
              AccountFiscalYearEndDay: $("#account-detail-modal select.AccountFiscalYearEndDay").val(),
              AccountFiscalYearEndMonth: $("#account-detail-modal select.AccountFiscalYearEndMonth").val(),              
              AccountFiscalYear: ($("#account-detail-modal select.AccountFiscalYearEndDay").val()!=" " || $("#account-detail-modal select.AccountFiscalYearEndMonth").val()!=" ") ? globalDecodeEntities( $("#account-detail-modal select.AccountFiscalYearEndMonth").val() + ' ' + $("#account-detail-modal select.AccountFiscalYearEndDay").val()) : " ", 
              //website: $("#edit-provider-detail-modal input.website").val()
              businessHourStartTime: $("#account-detail-modal select.businessHourStartTime").val(),
              businessHourEndTime: $("#account-detail-modal select.businessHourEndTime").val(),
              businessTime: ($("#account-detail-modal select.businessHourStartTime").val()!=" " ||  $("#account-detail-modal select.businessHourEndTime").val()!=" ") ? globalDecodeEntities($("#account-detail-modal select.businessHourStartTime").val()+ ' - ' +  $("#account-detail-modal select.businessHourEndTime").val()) : " "
            };
            console.log('strt time'+ $("#account-detail-modal select.SterileProcessingHourStartTime").val()+'detail var=='+detail.SterileProcessingHourStartTime);
            var error = "";
            
           var currYear=new Date().getFullYear();
           //var strtMonthSelected=getMonthFromString(detail.AccountFiscalYearStartMonth);
           var endMonthSelected=getMonthFromString(detail.AccountFiscalYearEndMonth);
           //console.log('currYear=='+currYear+'EndMonth='+endMonthSelected+'Day=='+detail.AccountFiscalYearEndDay);
            if ((isValidDate(currYear,endMonthSelected,detail.AccountFiscalYearEndDay)==false))
            {
               error = "Invalid date.Please enter a valid Fiscal End Date";
            }
            if ((detail.SterileProcessingHourStartTime!=" "|| detail.SterileProcessingHourEndTime!=" ")&& (detail.SterileProcessingHourStartTime==" "|| detail.SterileProcessingHourEndTime==" "))
            {
               error = "Please enter both Start and End for Sterile Processing Hours";
            }
            if ((detail.businessHourStartTime!=" "|| detail.businessHourEndTime!=" ")&& (detail.businessHourStartTime==" "|| detail.businessHourEndTime==" "))
            {
               error = "Please enter both Start and End for Business Hours";
            }
            
            if ( error.length === 0 ) {
              // no validation errors

              var btnTxt = $(this).text();
              $(this).text("Saving...");
              $("#credentialcompany button").attr("disabled",true);
              Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.CS_ARContactsCC.updateProvider}",
              detail, function(result, event) { 

                  $("#account-detail-modal button.edit-provider-detail-btn").text(btnTxt);
                  $("#account-detail-modal button").removeAttr("disabled");
                  
                  if ( event.status ) {
                    // save successful, change the displayed nickname to the newly saved value
                    // for both the detail screen and in the account list
                    $("#tab-account-details div.credentialcompany").text(detail.credentialcompany);
                    $("#tab-account-details div.time").html(detail.businessTime);                    
                    $("#tab-account-details div.SignInLocation").text(detail.SignInLocation);
                    $("#tab-account-details div.RepresentativeParking").text(detail.RepresentativeParking);
                    $("#tab-account-details div.AccountFiscalYear").text(detail.AccountFiscalYear);
                    $("#tab-account-details div.OperatingRoomLocation").text(detail.OperatingRoomLocation);
                    $("#tab-account-details div.SterileProcessingLocation").text(detail.SterileProcessingLocation);
                    $("#tab-account-details div.SterileProcessingHours").html(detail.SterileProcessingHourTime); 
                    $("#tab-account-details div.RequiredtoChangeScrubs").text(detail.RequiredtoChangeScrubs);
                    $("#tab-account-details div.OtherAttireNotes").text(detail.OtherAttireNotes);
                    $("#tab-account-details div.AccountFiscalYear").html(detail.AccountFiscalYear);
                    //$("#tab-account-details div.AccountFiscalYearEnd").html(globalDecodeEntities(detail.AccountFiscalYearEndDay+ ' ' + detail.AccountFiscalYearEndMonth));
                                      
                    
                    
                        //  update the list in the table
                   // $("a.client-link.provider[data-record-id="+detail.id+"]").text(detail.nickName);
                   // $("table.table-providers").empty();
                   // setAccountsAndStaff();
                    
                    
                    $("#account-detail-modal").modal("hide");

                  } else {
                    // errors saving the update

                    $("#account-detail-modal.error").text(result);

                  }

              });

            } else {
            
              $("#account-detail-modal #editAccDetailErrors").html(error);
                            
            }
            
            $(this).text(btnTxt);

          });//code added by Ansu for saving account detail edit ends

    });
    
     
    </script>

    <!-- only visible on tablet and below -->
    <div class="row visible-sm visible-xs" style="margin-top:10px">
      <div class="col-xs-6">
        <div class="form-group">
          <label for="mobile_practitioners" class="label_block"><i class="fa fa-user-md"></i> Surgeons</label>
          <select id="mobile_practitioners" class="form-control practitioners select2">
            
          </select>
          <a href="" data-toggle="modal" data-target="#create-surgeon-modal" style="margin-top: 3px; display: block;">
              <span><i class="fa fa-pencil-square-o"></i>&nbsp;{!$Label.CS_NewSurgeon}</span>
          </a>          
        </div>
      </div>
      <div class="col-xs-6 text-right">
        <div class="form-group">
          <a href="#create-account-modal" class="pull-left" style="display:none">
            <span><i class="fa fa-pencil-square-o"></i>&nbsp;{!$Label.CS_NewAccount}</span>
          </a>
          <label for="mobile_providers" class="label_block"><i class="fa fa-hospital-o"></i>&nbsp; {!$Label.CS_ProvidersTab}</label>
          <select id="mobile_providers" class="form-control providers select2">
            
          </select>
        </div>      
      </div>
    </div>

    <!-- left hand pane -->
    <div class="row wrapper wrapper-content animated fadeInRight">
              <!--<div class="col-md-6 col-lg-7">-->
                  <div>
                     <div class="ibox ">
                        <div class="ibox-content">
                                
                            <div id="surgeon-detail"  class="tab-pane">
                                    <!--  active -->
                                    <div class="row GPadding" style="background-color:#e7eaec;">
                                      <div class="col-lg-2 col-sm-12 text-center">
                                          <div class="m-b-sm">
                                            <i class="detail-busy fa fa-refresh fa-spin" style="font-size: 3rem; float: left; display:none"></i>
                                           <img alt="image" class="img-circle profile-pic" src="" style="width: 100px; display:none"/>
                                          <!--<div class="cprofile-image">
                                                    <img src=""/>
                                                </div>-->
                                          </div>
                                          <!--<h2 class="name"> </h2>-->

                                          <div class="text-center visible-xs visible-sm" style="margin-bottom:10px">
                                            <button class="btn btn-primary btn-xs create-case" data-practitioner-id="" data-practitioner-name="" data-toggle="modal">Schedule Case</button>
                                            &nbsp;
                                            <a href="#" class="btn btn-primary btn-xs mail" style="text-decoration: none; color:white;">
                                              <i class="fa fa-envelope-o"></i>
                                            </a>&nbsp;
                                            <a href="#" class="btn btn-primary btn-xs telephone" style="text-decoration: none; color:white;">
                                              <i class="fa fa-phone"></i>
                                            </a>
                                          </div>
                                       </div>
                                       <table width="80%">
                                           <tr>
                                               <td>
                                                   SURGEON CUSTOMER
                                               </td>
                                           </tr>
                                           <tr>
                                               <td>
                                                   <strong><h2 style="font-weight:bold;" class="name"> </h2></strong>                                          
                                               </td>
                                           </tr>
                                           <tr>
                                               <td>
                                                   <br/>
                                               </td>
                                           </tr>
                                           <tr>
                                               <td>
                                                   <table width="100%">
                                                       <tr>
                                                           <td width="30%" style="vertical-align:top;">
                                                               PRACTICE NAME
                                                               <br/>
                                                               <label style="color:black;font-weight:normal;">Iron Man Sport</label>
                                                           </td>
                                                           <td width="15%" style="vertical-align:top;">
                                                               PRACTICE PHONE
                                                               <br/>
                                                               <label style="color:black;font-weight:normal;"><p class="phone"></p></label>
                                                           </td>
                                                           <td width="15%" style="vertical-align:top;">
                                                               MOBILE PHONE
                                                               <br/>
                                                               <label style="color:black;font-weight:normal;"><p class="mobilePhone"></p></label>
                                                           </td>
                                                           <td width="40%" style="vertical-align:top;">
                                                               EMAIL
                                                               <br/>
                                                               <label style="color:black;font-weight:normal;"><p class="email"></p></label>
                                                           </td>
                                                       </tr>
                                                   </table>
                                               </td>
                                           </tr>
                                           
                                       </table>
                                       
                                    </div>
                                    <div class="ibox-contentARCont" style="padding:14px 0px 7px; border-top: none !important;">
                                      <div class="GClient-detail">
                                       
                                          <div class="tabs-container">
                                             <ul class="nav nav-tabs practitioner">
                                                <li class="active"><a id="contacts" class="tab-skinny" data-toggle="tab" href="#tab-contacts" aria-expanded="false">{!$Label.CS_Contacts_Tab1}</a></li>
                                                <li class=""><a id="acct-affiliations" class="tab-skinny" data-toggle="tab" href="#tab-affiliations" aria-expanded="false">{!$Label.CS_Contacts_Tab6}</a></li>
                                                <li class=""><a id="pref-cards" class="tab-skinny" data-toggle="tab" href="#tab-procedures" aria-expanded="false">{!$Label.CS_Contacts_Tab2}</a></li>
                                                
                                                <li class="">
                                                  <i class="calendar-busy tab-busy fa fa-refresh fa-spin" style="display:none"></i>
                                                  <a id="calendar" class="tab-skinny" data-toggle="tab" href="#tab-calendar" aria-expanded="">{!$Label.CS_Contacts_Tab3} 
                                                  </a>
                                                </li>
                                                <li class="">
                                                  <a id="bio" class="tab-skinny" data-toggle="tab" href="#tab-bio" aria-expanded="false">{!$Label.CS_Contacts_Tab4}</a>
                                                </li>

                                                
                                                <li id="marketingTab" class="">

                                                  <i class="activities-busy tab-busy fa fa-refresh fa-spin" style="display:none"></i>
                                                  <a id="activities" class="tab-skinny" data-toggle="tab" href="#tab-activities" aria-expanded="false">{!$Label.CS_Contacts_Tab5} </a>
                                                </li>
                                                
                                                <!--
                                                <li class=""><a data-toggle="tab" href="#tab-8-{!pl1.AccountRecord.Id}" aria-expanded="false">{!$Label.CS_Files}</a>
                                                </li>
                                                -->
                                             </ul>
                                             <div class="tab-content">
                                              <!-- contacts tab -->
                                                <div id="tab-contacts" class="tab-pane active">
                                                   <div class="panel-body">
                                                      <div class="full-height-scroll">
                                                        <div class="clearfix">
                                                            <button class="btn btn-primary pull-right btn-xs edit-surgeon-btn">
                                                              <i class="fa fa-pencil-square-o"></i><i class="edit-busy fa fa-refresh fa-spin" style="display:none"></i> Edit
                                                            </button>
                                                        </div>
                                                        <div class="row">
                                                          <div class="col-sm-6">
                                                            
                                                            <div class="form-group">
                                                              <label>Full Name</label>
                                                              <div class="name"></div>
                                                            </div>
                                                            
                                                            <div class="form-group">
                                                              <label>Preferred Name</label>
                                                              <div class="Preferredname"></div>
                                                            </div>
                                                            
                                                            <div class="form-group">
                                                              <label>{!$Label.CS_Designation}</label>
                                                              <div class="designation"></div>
                                                            </div>

                                                            <div class="form-group" style="display:none">
                                                              <label>{!$Label.CS_AccountTitle}</label>
                                                              <div class="title"></div>
                                                            </div>
                                                            
                                                            <div class="form-group">
                                                              <label>{!$Label.CS_SurgeonType}</label>
                                                              <div class="user-type"></div>
                                                            </div>  
                                                             
                                                            <div class="form-group">
                                                              <label>{!$Label.CS_NPI}</label>
                                                              <div class="npi"></div>
                                                            </div>
                                                            
                                                            <div class="form-group">
                                                                <label>{!$Label.CS_NativeLanguage}</label>
                                                                <div class="lang"></div>
                                                            </div>
                                                            
                                                            <div class="form-group">
                                                              <label>{!$Label.CS_Gender}</label>
                                                              <div class="gender"></div>
                                                            </div>

                                                            <!-- div class="form-group">
                                                              <label>{!$Label.CS_Birthdate}</label>
                                                              <div class="birthdate"></div>
                                                            </div -->  

                                                            <div class="form-group">
                                                              <label>Practice Focus</label>
                                                              <div class="practiceFocus"></div>
                                                            </div>
    
                                                            <div class="form-group">
                                                                <label>{!$Label.CS_AreaInterest}</label>
                                                                <div class="area-of-interest"></div>
                                                            </div>
                                                            
                                                            <div class="form-group">
                                                              <label>Arthex Marketing Emails</label>
                                                              <div class="arthexMEmails"></div>
                                                            </div>
                                                            
                                                            <div class="form-group">
                                                              <label>Consultant</label>
                                                              <div class="consultant"></div>
                                                            </div>
                                                                                                                        
                                                            <div class="form-group">
                                                              <label>{!$Label.CS_AssignedTo}</label>
                                                              <div class="assigned-team"></div>
                                                            </div>

                                                          </div>
                                                          <div class="col-sm-6">
                                                            
                                                            <div class="form-group">
                                                              <label>{!$Label.CS_PracticePhone}</label>
                                                              <div class="phone"></div>
                                                            </div>
                                                            
                                                            <div class="form-group">
                                                              <label>Mobile Phone</label>
                                                              <div class="mobilePhone"></div>
                                                            </div>
                                                            
                                                            <div class="form-group">
                                                              <label>{!$Label.CS_Email}</label>
                                                              <div class="email"></div>
                                                            </div>
                                                            
                                                            <div class="form-group">
                                                              <label>Practice Name</label>
                                                              <div class="practiceName"></div>
                                                            </div>
                                                            
                                                            <div class="form-group">
                                                              <label>{!$Label.CS_PracticeAddr}</label>
                                                              <div class="mailing-address"></div>
                                                            </div>
                                                            
                                                            <div class="form-group" style="display:none">
                                                                <label>{!$Label.CS_AssignedSalesRepEmail}</label>
                                                                <div class="assigned-sales-rep-email"></div>
                                                            </div>
                                                            
                                                            <!--<div class="form-group">                                     
                                                                <label>{!$Label.CS_ConsulatantStatus}</label>
                                                                <input type="checkbox" class="consultant-status" disabled="true" />                                                              
                                                            </div>-->
                                                            
                                                          </div>
                                                          
                                                        </div>
                                                      </div>                                                                         
                                                   </div> 
                                                </div>
                                                
                                                <!--Release 2.2
                                                  Component ID CID:- 000064
                                                  Developer Name:- Mimansha Samal
                                                  Date Added:- 11/9/2016
                                                  Feature:- Account Affiliations tab-->
                                                  
                                                <div id="tab-affiliations" class="tab-pane"> 
                                                    <div class="full-height-scroll">
                                                          
                                                        <div class="text-right" style="padding:5px 0px">
                                                            <button class="btn btn-xs btn-primary new-contact" data-toggle="modal" data-target="#add-account-affiliation-modal">{!$Label.CS_NewButton}</button>
                                                        </div>                                                          
                                                        <div class="table-responsive">
                                                            <table class="table table-striped table-condensed table-affiliations">
                                                            <!-- populated by vr remoting -->
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>
             
                                                <div id="tab-procedures" class="tab-pane">
                                                    <div class="panel-body">
                                                      <div class="text-right">
                                                        <button class="btn btn-xs btn-primary btn-pdf-pref-card"><i class="fa fa-file-pdf-o"></i><i class="edit-pref-card-busy fa fa-refresh fa-spin" style="display:none"></i> PDF</button>
                                                        <button class="btn btn-xs btn-primary btn-edit-pref-card"><i class="fa fa-pencil-square-o"></i><i class="edit-pref-card-busy fa fa-refresh fa-spin" style="display:none"></i> Edit</button>
                                                      </div>
                                                      <div>
                                                        <b>{!$Label.CS_PrefCardName} </b>: &nbsp;&nbsp;
                                                        <select class="pref-cards">
                                                          <option value="">--None--</option>
                                                        </select>
                                                        <button class="btn btn-xs btn-primary btn-new-pref-card">{!$Label.CS_New}</button>
                                                        <span class="pref-cards-notify"></span>
                                                        
                                                        <span class="pref-card-data" style="display:none">
                                                     <!--    <br /> <b> {!$Label.CS_Procedure} </b>: &nbsp;&nbsp; <span class="procedure"></span>
                                                        <br /> <b> Surgical Technique </b>: &nbsp;&nbsp; <span class="surgicalTechnique"></span> -->
                                                        <table class="table table-condensed pcard-detail-procedures productTeam" id = "tableDetailTaxonomy" style="margin-bottom:0px"> 
                                                            <thead>
                                                                <tr>
                                                                    <th style="width:28%">Product Team</th>
                                                                    <th style="width:28%">Procedure</th>
                                                                    <th style="width:28%">Surgical Technique</th> 
                                                                    <th style="width:16%">&nbsp;</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                            </tbody>
                                                        </table>
                                                        
                                                        <br /> <b> {!$Label.CS_Position} </b>: &nbsp;&nbsp; <span class="position"></span>
                                                        <br /><br /> 
                                                        <div class="ibox float-e-margins">
                                                           <div class="ibox-content">
                                                              <table class="table pref-card-products" style="margin-bottom:0px">
                                                                  <thead>
                                                                    <tr>
                                                                       <th>{!$Label.CS_ProductNumber}</th>
                                                                       <th>{!$Label.CS_ProductName}</th>
                                                                    </tr>
                                                                 </thead>
                                                                 <tbody>
                                                                 </tbody>
                                                              </table>
                                                           </div>
                                                        </div>
                                                        <div class="GProcedure-details">
                                                            <!--<span class="btn btn-primary btn-xs GCustom-editmodaltabprocedure-buttonstyle="float:right;"><i class="fa fa-pencil-square-o"></i>Edit</span><br/>-->
                                                           <div class="GGrid col-lg-4">
                                                              <div class="GGrid-content"> <b>{!$Label.CS_Disposables}</b> <br/> 
                                                                <div class="disposables"></div>
                                                              </div>
                                                           </div>
                                                           <div class="GGrid col-lg-4">
                                                              <div class="GGrid-content"> <b>{!$Label.CS_Sutures}</b> <br/> 
                                                                <div class="sutures"></div>
                                                              </div>
                                                           </div>
                                                           <div class="GGrid col-lg-4">
                                                              <div class="GGrid-content"> <b>{!$Label.CS_Medications}</b> <br />
                                                                <div class="medications"></div>
                                                              </div>
                                                           </div>
                                                           <div class="GGrid col-lg-4">
                                                              <div class="GGrid-content"> <b>{!$Label.CS_Equipment}</b> <br /> 
                                                                <div class="equipment"></div>
                                                              </div>
                                                           </div>
                                                           <div class="GGrid col-lg-8">
                                                              <div class="GGrid-content">
                                                                 <b>{!$Label.CS_Equipment_Notes}</b> <br /> 
                                                                 <div class="equipment-notes"></div>
                                                              </div>
                                                           </div>
                                                        </div>
                                                        </span>
                                                    </div>
                                                    </div>
                                                     
                                                </div> 
                                                <div id="tab-calendar" class="tab-pane">
                                                   <div class="panel-body">
                                                      <div class="full-height-scroll">
                                                        <table class="table table-condensed table-calendar">
                                                          <!-- populated by vr remoting -->
                                                        </table>
                                                      </div>
                                                   </div>
                                                     
                                                </div>
                                                <div id="tab-bio" class="tab-pane">
                                                    <div class="panel-body">
                                                      <div class="full-height-scroll">
                                                        <div class="clearfix">
                                                            <button class="btn btn-primary pull-right btn-xs edit-surgeon-bio-btn">
                                                              <i class="fa fa-pencil-square-o"></i> {!$Label.CS_Edit}
                                                            </button>
                                                        </div>

                                                        <div class="row">
                                                          <div class="col-sm-6">
                                                            
                                                            <div class="form-group">
                                                              <label>Undergraduate</label>
                                                              <div class="undergraduate"></div>
                                                            </div>

                                                            <div class="form-group">
                                                              <label>Graduate</label>
                                                              <div class="graduate"></div>
                                                            </div>
                                                              
                                                            <div class="form-group">
                                                              <label>Doctorate</label>
                                                              <div class="doctorate"></div>
                                                            </div>  

                                                            <!-- div class="form-group">
                                                              <label>Internship</label>
                                                              <div class="internship"></div>
                                                            </div -->  

                                                            <div class="form-group">
                                                              <label>Residencies</label>
                                                              <div class="residencies"></div>
                                                            </div>  

                                                            <div class="form-group">
                                                              <label>Fellowships</label>
                                                              <div class="fellowships"></div>
                                                            </div>

                                                          </div>
                                                          <div class="col-sm-6">
                                                            
                                                            <div class="form-group">
                                                              <label>Certifications</label>
                                                              <div class="certifications"></div>
                                                            </div>

                                                            <div class="form-group">
                                                                <label>Awards</label>
                                                                <div class="awards"></div>
                                                            </div>
                                                            
                                                            <div class="form-group">
                                                                <label>Professional Societies</label>
                                                                <div class="professional-societies"></div>
                                                            </div>
                                                            
                                                            <div class="form-group">
                                                                <label>Sports Teams Affiliations</label>
                                                                <div class="sports-teams-affiliations"></div>
                                                            </div>                                                        

                                                            

                                                            <div class="form-group" style="display:none">
                                                                <label>Personal Interest</label>
                                                                <div class="personal-interest">None</div>
                                                            </div>
                                                            
                                                            <div class="form-group" style="display:none">
                                                                <label>Spouse and Children</label>
                                                                <div class="spouse-and-children">None</div>
                                                            </div>

                                                          </div>

                                                        </div>
                                                        

                                                        <!--
                                                        <div class="GGrid col-lg-6">
                                                           <div class="GGrid-content">
                                                              <label>{!$Label.CS_Education}</label>
                                                              <div class="education"></div>
                                                           </div>
                                                        </div>
                                                        <div class="GGrid col-lg-6">
                                                           <div class="GGrid-content">
                                                            <label>{!$Label.CS_Certification}</label>
                                                              <div class="certifications"></div>
                                                           </div>
                                                        </div>
                                                        <div class="GGrid col-lg-6">
                                                           <div class="GGrid-content">
                                                            <label>{!$Label.CS_Internship}</label>
                                                              <div class="internship"></div>
                                                           </div>
                                                        </div>
                                                        <div class="GGrid col-lg-6">
                                                           <div class="GGrid-content">
                                                            <label>{!$Label.CS_Awards}</label>
                                                              <div class="awards"></div>
                                                           </div>
                                                        </div>
                                                        <div class="GGrid col-lg-6">
                                                           <div class="GGrid-content">
                                                            <label>{!$Label.CS_Residencies}</label>
                                                              <div class="residencies"></div>
                                                           </div>
                                                        </div>
                                                        <div class="GGrid col-lg-6">
                                                           <div class="GGrid-content">
                                                            <label>{!$Label.CS_ProfessionalSocieties}</label>
                                                              <div class="professional-societies"></div>
                                                           </div>
                                                        </div>
                                                        <div class="GGrid col-lg-6">
                                                           <div class="GGrid-content">
                                                            <label>{!$Label.CS_Fellowships}</label>
                                                              <div class="fellowships"></div>
                                                           </div>
                                                        </div>
                                                        <div class="GGrid col-lg-6" style="display:none">
                                                           <div class="GGrid-content">
                                                            <label>{!$Label.CS_Competitions}</label>
                                                              <div class="competitions"></div>
                                                           </div>
                                                        </div>
                                                        <div class="GGrid col-lg-6">
                                                           <div class="GGrid-content">
                                                            <label>{!$Label.CS_SpouseandChildren}</label>
                                                              <div class="spouse-and-children"></div>
                                                           </div>
                                                        </div>
                                                        <div class="GGrid col-lg-6">
                                                           <div class="GGrid-content">
                                                            <label>{!$Label.CS_PersonalInterest}</label>
                                                              <div class="personal-interest"></div>
                                                           </div>
                                                        </div>
                                                        <div class="GGrid col-lg-6">
                                                           <div class="GGrid-content">
                                                            <label>Sports Team Affiliations</label>
                                                              <div class="favorite-sports-teams"></div>
                                                           </div>
                                                        </div>
                                                        <div class="GGrid col-lg-6" style="display:none">
                                                           <div class="GGrid-content">
                                                            <label>{!$Label.CS_Competitors}</label>
                                                              <div class="competitors"></div>
                                                           </div>
                                                        </div>
                                                        -->
                                                      </div>
                                                   </div>
                                                </div>
                                                <div id="tab-activities" class="tab-pane">
                                                    <div class="panel-body">
                                                      <div class="full-height-scroll" style="overflow: hidden; width: auto; height: 100%;"> 
 
                                                        <div class="col-sm-6 form-group detail_div">
                                                          <div class="form-group">
                                                              <label for="activityFilter" class="col-sm-2 control-label" style="padding-top: 7px">Show: </label>
                                                              <div class="col-sm-8">
                                                              
                                                               <select class="form-control" id="activityFilter" onchange="javascript:adjustPardotActivityList(this.value)">
                                                                 
                                                                  <!-- select class="form-control" id="activityFilter" onchange="javascript:loadPardotActivity('mremley@STEELHEADSURGICAL.COM', this.value)"-->
                                                                  <!--option value="AnyType">Any Type</option>
                                                                  <option value="Email">Email</option>
                                                                <option value="LandingPage">Landing Page</option>
                                                                <option value="Webinar">Webinar</option-->
                                                              </select>
                                                              </div>
                                                          <i id="pardot-refresh" class="detail-busy fa fa-refresh fa-spin" style="font-size: 3rem; float: left; display:none;"></i>
                                                          

                                                          </div>

                                                        </div>
                                 
                                                        <div id="PardotActivityDisplay" class="row">
                                                        </div>

                                                        <!--div class="clearfix">
                                                          <div class="row">
                                                            <div class="col-lg-12">
                                                             

                                                             <div class="col-sm-12 form-group detail_div"> 
                                                                <div class="col-sm-1">
                                                                  <i class="fa fa-folder-open-o fa-2x fa-inverse fa-border fa-meeting-log"></i>
                                                                  </div>
                                                                <div class="col-sm-8">
                                                                  Email <br/> 
                                                                  Test Email: Proof - Proof - Axis Activity Test Email
                                                                </div>
                                                                <div class="col-sm-3">
                                                                  2016-09-14 
                                                                </div>
                                                             </div>
                                                            </div>                                                        
                                                          </div>
                                                        </div-->



                                                        <!-- Yan: as part of Oct. 16 release, Axis activity, and Education training is out of scope. -->
                                                        <!-- div class="GGrid col-lg-12">
                                                          <div class="GGrid-content">
                                                            <label>{!$Label.CS_AXISActivity}</label>
                                                            <div class="axis-activity"></div>
                                                          </div>
                                                        </div-->
                                                        <!-- div class="GGrid col-lg-12">
                                                          <div class="GGrid-content">
                                                            <label>{!$Label.CS_ArthrexMedicalEducationTraining}</label>
                                                            <div class="arthrex-medical-education-training"></div> 
                                                          </div>
                                                        </div -->
                                                        <!-- div class="GGrid col-lg-12" style="display:none">
                                                          <div class="GGrid-content">
                                                            <label>{!$Label.CS_ArthrexEvents}</label>
                                                            <div class="arthrex-events"></div>
                                                          </div>
                                                        </div -->
                                                      </div>
                                                  </div>
                                                </div>      
                                             </div>
                                          </div>
                                       </div>
                                    
                                    </div>             
                            </div>
                          <div id="provider-detail" style="display:none" class="tab-pane" data-record-id="">
                                <!--  active -->
                                <div class="clearfix" style="padding:0px 20px 0px 0px;">
                                    <button class="btn btn-xs btn-primary pull-right edit-provider-detail" ><i class="fa fa-pencil-square-o"></i> Edit</button>
                                </div>
                                <div class="row m-b-lg GPadding"  style="min-height:150px">
                                  <div class="col-lg-4 col-sm-12 text-center" style="margin-bottom:10px">
                                      <h2>
                                        <i class="detail-busy fa fa-refresh fa-spin" style="font-size: 3rem; float: left;"></i>
                                        <div class="nickname"></div>
                                        
                                      </h2>
                                      
                                   </div>
                                   <div class="col-lg-4 col-sm-6">
                                      <strong>Account Number</strong>
                                      <p class="number"></p>
                                      <strong>{!$Label.CS_WorkPhone}</strong>
                                      <p class="phone"></p>
                                      <strong>{!$Label.CS_WorkFax}</strong>
                                      <p class="fax"></p>
                                   </div>
                                   <div class="col-lg-4 col-sm-6">
                                      <strong>SAP Name</strong>
                                      <p class="sap-name"></p>
                                      <strong>Shipping Address</strong>
                                      <p class="address"></p>
                                      <strong>Website</strong>
                                      <p class="website"></p>
                                   </div>
                                
                                </div>
                                
                                  <div class="ibox-contentARCont" style="padding:14px 0px 7px">
                                    <div class="GClient-detail">
                                      <div class="tabs-container">
                                          <ul class="nav nav-tabs">
                                          
                                              <li class="active"><a id="details" class="tab-skinny" data-toggle="tab" href="#tab-account-details" aria-expanded="false">{!$Label.CS_Contacts_Tab1}</a></li>
                                              <li class=""><a id="contacts" class="tab-skinny" data-toggle="tab" href="#tab-related-contacts" aria-expanded="false">{!$Label.ARContacts_RelatedContact}</a></li>
                                              <li class=""><a id="surgeons" class="tab-skinny" data-toggle="tab" href="#tab-related-surgeons" aria-expanded="false">{!$Label.ARContact_SurgeonAffiliation}</a></li>
                                          </ul>
                                          <div class="tab-content">
                                              <!-- related contacts tab -->
                                              <div id="tab-related-contacts" class="tab-pane">
                                                <div class="text-right" style="padding:5px 0px">
                                                  <button class="btn btn-xs btn-primary new-contact" data-toggle="modal" data-target="#provider-contact-modal">New</button>
                                                </div>
                                                <div class="table-responsive">
                                                  <table class="table table-striped table-condensed table-contacts">
                                                  </table>
                                                </div>
                                              </div>
                                          
                                              <!-- account details tab -->
                                              <div id="tab-account-details" class="tab-pane active">                                               
                                                <div class="panel-body">
                                                      <div class="full-height-scroll">
                                                      <div class="clearfix">
                                                            <button class="btn btn-primary pull-right btn-xs edit-accountDetail-btn">
                                                              <i class="fa fa-pencil-square-o"></i><i class="edit-busy fa fa-refresh fa-spin" style="display:none"></i> Edit
                                                            </button>
                                                          </div>
                                                          <div class="row">
                                                          <div class="col-sm-6">
                                                            <div class="form-group">
                                                              <strong>{!$Label.CS_AssignedTo}</strong>
                                                                  <div class="AssignedTo"></div>
                                                            </div>                                                          
                                                            
                                                            
                                                              
                                                              <div class="form-group">
                                                              <strong>{!$Label.CS_BusinessHours} </strong>
                                                                  <div class="time"></div>
                                                            </div>
                                                            
                                                            <div class="form-group">
                                                              <strong>{!$Label.CS_CredentialingCompany} </strong>
                                                                  <div class="credentialcompany"></div>
                                                              </div> 
                                                            
                                                            <div class="form-group" >
                                                              <strong>{!$Label.CS_SignInLocation} </strong>
                                                                  <div class="SignInLocation"></div>
                                                            </div>
                                                            
                                                            
                                                            <div class="form-group">
                                                            <strong>{!$Label.CS_RepresentativeParking} </strong>
                                                                <div class="RepresentativeParking"></div>
                                                            </div>
                                                            
                                                            
                                                            <div class="form-group">
                                                            <strong>{!$Label.CS_AccountFiscalYear} </strong>
                                                                <div class="AccountFiscalYear"></div>
                                                            </div>
                                                            </div>
                                                            <div class="col-sm-6">
                                                            <div class="form-group">
                                                            <strong>{!$Label.CS_OperatingRoomLocation} </strong>
                                                                <div class="OperatingRoomLocation"></div>
                                                            </div>
                                                            <div class="form-group">
                                                              <strong>{!$Label.CS_SterileProcessingLocation} </strong>
                                                              <div class="SterileProcessingLocation"></div>
                                                            </div>

                                                            <div class="form-group">
                                                              <strong>{!$Label.CS_SterileProcessingHours}</strong>
                                                              <div class="SterileProcessingHours"></div>
                                                            </div>
                                                                
                                                            <div class="form-group">
                                                              <strong>{!$Label.CS_RequiredtoChangeScrubs} </strong>
                                                                <div class="RequiredtoChangeScrubs"></div>
                                                            </div> 
                                                             <div class="form-group">                                                                    
                                                                <strong>{!$Label.CS_OtherAttireNotes} </strong>
                                                                <div class="OtherAttireNotes"></div>    
                                                             </div>
                                                            </div>      
                                                          </div>
                                                      </div>                                                                         
                                                   </div>
                                                
                                              </div>
                                          
                                              <!-- related surgeons tab -->
                                              <div id="tab-related-surgeons" class="tab-pane">  
                                                <div class="text-right" style="padding:5px 20px">
                                                            <button class="btn btn-xs btn-primary new-contact" data-toggle="modal" data-target="#add-surgeon-affiliation-modal">{!$Label.CS_NewButton}</button>
                                                 </div>                                               
                                                <div class="table-responsive">                                                  
                                                  <table class="table table-striped table-condensed table-surgeons">
                                                  </table>
                                                </div>
                                              </div>
                                          
                                      </div>
                                    </div>
                                  </div>
                               </div>
                          </div>
                                          
                        </div>
                     </div>
                  </div>            
    </div>

    <!-- Add Provide related contact modal -->
    <div class="modal fade  modal-authrex" id="provider-contact-modal" data-backdrop="static" tabindex="-1" role="dialog">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h4 class="modal-title"><i class="fa fa-plus-square-o"></i>&nbsp;&nbsp;Contact</h4>
          </div>
          <div class="modal-body">
            <div class="form contact-form">
              <div class="row">
                <div class="col-sm-6">
                  <div class="form-group">
                    <label><span class="text-danger">*</span> First Name</label>
                    <input type="text" class="firstName form-control"/>
                  </div>
                  <div class="form-group">
                    <label>Title</label>
                    <input type="text" class="title form-control"/>
                  </div>
                  <div class="form-group">
                    <label><span class="text-danger">*</span> Phone</label>
                    <input id="Phone" type="text" class="phone form-control" onkeypress='return isNumberCommaDot(event)'/>
                    <span id="spnPhone"></span>
                  </div>
                  <div class="form-group">
                    <label>Street</label>
                    <input type="text" class="street form-control"/>
                  </div>
                  <div class="form-group">
                    <label>State</label>
                    <select class="form-control state">
                      <option>Alabama</option>
                      <option>Alaska</option>
                      <option>Arizona</option>
                      <option>Arkansas</option>
                      <option>California</option>
                      <option>Colorado</option>
                      <option>Connecticut</option>
                      <option>Delaware</option>
                      <option>Dist of Columbia</option>
                      <option>Florida</option>
                      <option>Georgia</option>
                      <option>Hawaii</option>
                      <option>Idaho</option>
                      <option>Illinois</option>
                      <option>Indiana</option>
                      <option>Iowa</option>
                      <option>Kansas</option>
                      <option>Kentucky</option>
                      <option>Louisiana</option>
                      <option>Maine</option>
                      <option>Maryland</option>
                      <option>Massachusetts</option>
                      <option>Michigan</option>
                      <option>Minnesota</option>
                      <option>Mississippi</option>
                      <option>Missouri</option>
                      <option>Montana</option>
                      <option>Nebraska</option>
                      <option>Nevada</option>
                      <option>New Hampshire</option>
                      <option>New Jersey</option>
                      <option>New Mexico</option>
                      <option>North Carolina</option>
                      <option>New York</option>
                      <option>North Dakota</option>
                      <option>Ohio</option>
                      <option>Oklahoma</option>
                      <option>Oregon</option>
                      <option>Pennsylvania</option>
                      <option>Rhode Island</option>
                      <option>South Carolina</option>
                      <option>South Dakota</option>
                      <option>Tennessee</option>
                      <option>Texas</option>
                      <option>Utah</option>
                      <option>Vermont</option>
                      <option>Virginia</option>
                      <option>Washington</option>
                      <option>West Virginia</option>
                      <option>Wisconsin</option>
                      <option>Wyoming</option>
                    </select>
                  </div>                                                          
                </div>
                <div class="col-sm-6">
                  <div class="form-group">
                    <label><span class="text-danger">*</span> Last Name</label>
                    <input type="text" class="lastName form-control"/>
                  </div>
                  <div class="form-group">
                    <label><span class="text-danger">*</span> Email</label>
                    <input type="text" class="email form-control"/>
                  </div>    
                  <div class="form-group">
                    <label>Mobile</label>
                    <input id="contactMobilePhone" type="text" class="mobile form-control" onkeypress='return isNumberCommaDot(event)'/>
                    <span id="spnMobilePhone"></span>
                  </div>
                  <div class="form-group">
                    <label>City</label>
                    <input type="text" class="city form-control"/>
                  </div> 
                  <div class="form-group">
                    <label>Zip</label>
                    <input type="text" class="zip form-control"/>
                  </div>                                                                        
                </div>                
              </div>
              
              <div class="row">
                <div class="col-xs-12">
                  <div class="form-group">
                    <label>Notes</label>
                    <textarea class="notes form-control"></textarea>
                  </div> 
                </div>
              </div>
              
              <div class="row">
                <div class="col-xs-12">
                 <p>
                    IMPORTANT: "HIPAA Protected Health Information (PHI) should not be submitted using this form"
                 </p>
                </div>
              </div>

            </div>
          </div>
          <div class="modal-footer">
            <span class="text-danger save-error"></span>
            <button type="button" style="display:none" class="pull-left btn btn-warning btn-delete">Delete</button>
            <button type="button" class="btn btn-default btn-cancel">{!$Label.CS_Close}</button>
            <button type="button" class="btn btn-primary btn-save">{!$Label.CS_Save}</button>
          </div>
        </div><!-- /.modal-content -->
      </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

    <!-- Add Surgeon modal -->
    <div class="modal fade  modal-authrex" id="create-surgeon-modal" data-backdrop="static" tabindex="-1" role="dialog">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title"><i class="fa fa-plus-square-o"></i>&nbsp;&nbsp;{!$Label.CS_RequNewSurg}</h4>
          </div>
          <div class="modal-body row">
            <form action="{!LEFT($CurrentPage.URL,FIND('/',$CurrentPage.URL,9))}/servlet/servlet.WebToCase?encoding=UTF-8" method="POST" id="surgeonForm">
                <input type="hidden" name="orgid" value="{!$Organization.Id}" id="orgid"/>
                <input type="hidden" name="retURL" value="{!LEFT($CurrentPage.URL,FIND('/',$CurrentPage.URL,9))}?contactsubmitted" id="retURL"/>
                <div class="form">
                  <div class="form-group">
                    <label>{!$Label.CS_NPI}</label>
                    <input type="text" class="form-control npi"/>               
                  </div>
                  <div class="form-group">
                    <label>{!$Label.CS_FirstName}</label>
                    <input type="text" class="form-control firstName"/>               
                  </div>
                  <div class="form-group">
                    <label>{!$Label.CS_LastName}</label>
                    <input type="text" class="form-control lastName"/>               
                  </div>                            
                </div>
            </form>
          </div>
          <div class="modal-footer">
            <span class="error text-danger"></span>
            <button type="button" class="btn btn-default" data-dismiss="modal">{!$Label.CS_Close}</button>
            <button type="button" class="btn btn-primary new-surgeon-btn">{!$Label.CS_Save}</button>
          </div>
        </div><!-- /.modal-content -->
      </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->    
    
    <!--Release 2.2
    Component ID CID:- 000064
    Developer Name:- Mimansha Samal
    Date Added:- 10/9/2016
    Feature:- Add New Account Affiliations modal-->
    
    <!-- -------Start of Mimansha Code------------------------------------------- -->
    <div class="modal fade  modal-authrex" id="add-account-affiliation-modal" data-backdrop="static" tabindex="-1" role="dialog">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h4 class="modal-title"><i class="fa fa-plus-square-o"></i>&nbsp;&nbsp;{!$Label.CS_AccountAffiliation}</h4>
          </div>
          <div class="modal-body">
            <div class="form contact-form">
              <div class="row">
                <div class="col-sm-12">
                  <div class="form-group">
                    <label for="account" class="control-label"><span class="text-danger">*</span> {!$Label.CS_HealthCareOrg} <i class="account-busy fa fa-refresh fa-spin" style="display:none"></i></label>
                    <input  id="account" class="form-control account-typeahead clear-on-close" type="text" />
                    <div id="accountsTag" class="account ctag-list clear-on-close"></div>
                  </div>
                </div>        
              </div>
            </div>
          </div>
          <div class="modal-footer">
            <span class="text-danger save-error" id="affiliationErrors"></span>
            <button type="button" style="display:none" class="pull-left btn btn-warning btn-delete">Delete</button>
            <button type="button" class="btn btn-default btn-cancel">{!$Label.CS_Close}</button>
            <button type="button" class="btn btn-primary btn-save">{!$Label.CS_Save}</button>
          </div>
        </div><!-- /.modal-content -->
      </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
<!-- -------End of Mimansha Code------------------------------------------- -->
    
    <!-- edit provider detail -->
    <div class="modal fade  modal-authrex" id="edit-provider-detail-modal" data-backdrop="static" tabindex="-1" role="dialog">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title"><i class="fa fa-plus-square-o"></i>&nbsp;&nbsp; {!$Label.ARContact_EditAccount}</h4>
          </div>        
          <div class="modal-body row">
            <div class="form">
              <div class="form-group">
                <label><span class="text-danger">*</span>Nickname</label>
                <input type="text" class="form-control nickname"/>               
              </div>
              <div class="form-group">
                <label>Website</label>
                <input type="text" class="form-control website"/>               
              </div>
              <div class="form-group">
                <label>SAP Name</label>
                <input type="text" class="form-control sap-name" readonly="true" disabled="true"/>               
              </div>
              <div class="form-group">
                <label>Account Number</label>
                <input type="text" class="form-control number" readonly="true" disabled="true"/>               
              </div>  
              <div class="form-group">
                <label>Work Phone</label>
                <input type="text" class="form-control phone" readonly="true" disabled="true"/>               
              </div> 
              <div class="form-group">
                <label>Work Fax</label>
                <input type="text" class="form-control fax" readonly="true" disabled="true"/>               
              </div>     
              <div class="form-group">
                <label>Shipping Address</label>
                <textarea class="form-control address" readonly="true" disabled="true"></textarea>
              </div>                                                                 
            </div>
          </div>
          <div class="modal-footer">
            <span class="error text-danger"></span>
            <button type="button" class="btn btn-default" data-dismiss="modal">{!$Label.CS_Close}</button>
            <button type="button" class="btn btn-primary save-provider-detail-btn">{!$Label.CS_Save}</button>
          </div>
        </div><!-- /.modal-content -->
      </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->     

    <!-- Edit Surgeon detail modal -->
    <div class="modal fade  modal-authrex" id="edit-surgeon-modal" data-backdrop="static" tabindex="-1" role="dialog">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title"><i class="fa fa-plus-square-o"></i>&nbsp;&nbsp; {!$Label.CS_EditSurg}</h4>
          </div>
          <div class="modal-body row">
            <div class="form">              

        <div class="row">

                <div class="col-sm-6 form-group">
                  <strong>{!$Label.CS_Salutation} </strong>
                  <select class="salutation form-control">
                      <option value="0">- {!$Label.CS_Select} -</option>
                  </select>
                </div>

                <div class="col-sm-6 form-group">
                  <strong>{!$Label.CS_FirstName} </strong>
                  <input type="text" maxlength="40" class="form-control firstName"/>
                </div>

                <div class="col-sm-6 form-group">
                  <strong>{!$Label.CS_LastName} </strong>
                  <input type="text" maxlength="80" class="form-control lastName"/>
                </div>

                <div class="col-sm-6 form-group">
                  <strong>{!$Label.CS_PracticeName} </strong>
                  <input type="text" class="form-control practice"/>
                </div>


                <div class="col-sm-6 form-group">
                  <strong>Practice Phone</strong>
                    <input type="text" onkeypress="return OnlyNum(event)" class="form-control phone"/>
                </div>                

                <div class="col-sm-6 form-group">
                  <strong>Mobile Phone</strong>
                    <input type="text" onkeypress="return OnlyNum(event)" class="form-control mobilePhone"/>
                </div>                

                <div class="col-sm-6 form-group"  style="display:none">
                  <strong>{!$Label.CS_AccountTitle} </strong>
                  <input type="text" maxlength="80" class="form-control title"/>
                </div>

                <div class="col-sm-6 form-group">
                  <strong>{!$Label.CS_NPI}: </strong>
                  <input type="text" class="form-control npi"/>
                </div>

                <div class="col-sm-6 form-group" style="display:none">
                  <strong>{!$Label.CS_Birthdate}</strong>
                  <div class="input-group date birthdate-container">
                    <input type="text" class="form-control birthdate clear-on-close" readonly="true" />
                      <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                      </span>
                  </div>                
                </div>
                  
                <div class="col-sm-6 form-group">
                  <strong>{!$Label.CS_Gender}: </strong>
                  <select class="gender form-control">
                      <option value="0">- {!$Label.CS_Select} -</option>
                  </select>
              
                </div>
                  
                <div class="col-sm-6 form-group">
                  <strong>{!$Label.CS_NativeLanguage} </strong>
                  <input type="text" class="form-control lang"/>
                </div>
                                    
                <div class="col-sm-6 form-group">
                  <strong>{!$Label.CS_SurgeonType} </strong>
                  <select class="form-control user-type">
                      <option value="0">- {!$Label.CS_Select} -</option>
                  </select>
                </div> 
                
                <div class="col-sm-6 form-group" style="display:none">
                  <strong>{!$Label.CS_AssignedRepEmail}</strong>
                  <input type="text" class="form-control assigned-sales-rep-email"/>
                </div>                   
                <!-- Do Not Email checkbox will not display on Edit Screen from Release 2.2--By mimansha Samal
                <div class="col-sm-6 form-group">
                  <strong>{!$Label.CS_Email}</strong>
                  <input type="text" class="form-control email"/>
                  <div class="checkbox">
                      <label>
                        <input type="checkbox" class="email-opt-out"/>
                        <strong>{!$Label.CS_ContactEmailOptOut}</strong>
                      </label>
                  </div>
                </div>  -->  
              
              </div>
              <div class="row">

                <div class="col-xs-12 form-group">
                  <strong>{!$Label.CS_PracticeFocus} </strong>
                  <select class="form-control practice-focus multi-select">
                      <option value="0">- {!$Label.CS_Select} -</option>
                  </select>
                  <div class="ctag-list"></div>
                </div>
                <div class="col-xs-12 form-group">
                    <strong>{!$Label.CS_AreaInterest} </strong>
                    <select class="form-control specialty multi-select">
                        <option value="0">- {!$Label.CS_Select} -</option>
                    </select>
                    <div class="ctag-list"></div>
                </div>

                  <div class="col-xs-12 form-group">
                    <strong>{!$Label.CS_Designation} </strong>
                    <select class="form-control designation multi-select">
                      <option value="0">- {!$Label.CS_Select} -</option>
                    </select>
                    <div class="ctag-list"></div>
                  </div>              

              </div>              
              <div class="row">
                <div class="col-sm-6 form-group">
                  <strong>{!$Label.CS_PracticeStreet} </strong>
                  <input type="text" maxlength="255" class="form-control mStreet" placeholder="Street"/>
                </div>
                <div class="col-sm-6 form-group">
                  <strong>{!$Label.CS_PracticeCity} </strong>
                    <input type="text" class="form-control mCity" placeholder="City"/>
                </div>
                <div class="col-sm-6 form-group">
                  <strong>{!$Label.CS_PracticeState} </strong>    
                    <select class="form-control mState">
                      <option>Alabama</option>
                      <option>Alaska</option>
                      <option>Arizona</option>
                      <option>Arkansas</option>
                      <option>California</option>
                      <option>Colorado</option>
                      <option>Connecticut</option>
                      <option>Delaware</option>
                      <option>Dist of Columbia</option>
                      <option>Florida</option>
                      <option>Georgia</option>
                      <option>Hawaii</option>
                      <option>Idaho</option>
                      <option>Illinois</option>
                      <option>Indiana</option>
                      <option>Iowa</option>
                      <option>Kansas</option>
                      <option>Kentucky</option>
                      <option>Louisiana</option>
                      <option>Maine</option>
                      <option>Maryland</option>
                      <option>Massachusetts</option>
                      <option>Michigan</option>
                      <option>Minnesota</option>
                      <option>Mississippi</option>
                      <option>Missouri</option>
                      <option>Montana</option>
                      <option>Nebraska</option>
                      <option>Nevada</option>
                      <option>New Hampshire</option>
                      <option>New Jersey</option>
                      <option>New Mexico</option>
                      <option>New York</option>
                      <option>North Carolina</option>
                      <option>North Dakota</option>
                      <option>Ohio</option>
                      <option>Oklahoma</option>
                      <option>Oregon</option>
                      <option>Pennsylvania</option>
                      <option>Rhode Island</option>
                      <option>South Carolina</option>
                      <option>South Dakota</option>
                      <option>Tennessee</option>
                      <option>Texas</option>
                      <option>Utah</option>
                      <option>Vermont</option>
                      <option>Virginia</option>
                      <option>Washington</option>
                      <option>West Virginia</option>
                      <option>Wisconsin</option>
                      <option>Wyoming</option>
                    </select>

                </div>
                <div class="col-sm-6 form-group">
                  <strong>{!$Label.CS_PracticeZipCode} </strong>    
                    <input type="text" class="form-control mZip" placeholder="Zip"/>
                </div>

              </div>

            </div>

          </div>
          <div class="modal-footer">
            <span class="error"></span>
            <button type="button" class="btn btn-default" data-dismiss="modal">{!$Label.CS_Close}</button>
            <button type="button" class="btn btn-primary edit-surgeon-save-btn">{!$Label.CS_Save}</button>
          </div>
        </div><!-- /.modal-content -->
      </div><!-- /.modal-dialog -->
    </div><!-- /.modal --> 

    <!--Modal for new preference card -->
    <div class="modal fade  modal-authrex" id="new-prefcard-modal" data-backdrop="static" tabindex="-1" role="dialog">
      <div class="modal-dialog modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title"><i class="fa fa-plus-square-o"></i>&nbsp;&nbsp;Preference Card</h4>
          </div>
          <div class="modal-body ModalOverflow">
            

            <apex:form styleClass="row pref-card">
                
            <div class="form">    
                <div class="row">
                    
                    <div class="form-group col-sm-12">                        
                      <label class="control-label"><span class="text-danger">*</span> {!$Label.CS_Name}</label>
                      <input type="text" class="form-control prefCardName" placeholder="Preference card name"/>
                    </div>
                    
                    <div class="row" id="divTaxonomy">
                        <div class="col-xs-12">
                            <div>

                                <table class="table table-condensed pcard-procedures productTeam" id = "tablePrefCardTaxonomy" style="margin-bottom:0px">
                                    <!-- <caption><h3>{!$Label.AROpportunity_Products}</h3></caption> -->
                                    <thead>
                                        <tr>
                                            <th style="width:28%"><span class="text-danger">*</span> Product Team</th>
                                            <th style="width:30%"><span class="text-danger">*</span> Procedure</th>
                                            <th style="width:26%">Surgical Technique</th> 
                                            <th style="width:16%">&nbsp;</th>
                                        </tr>
                                        <tr>
                                            <td>
                                                <!-- <input type="text" id="pcard-productteam" class="form-control pcard-productteam pcard-productteam-typeahead" autocomplete="off"/> -->
                                                <select id="select-productteam" class="form-control"  onchange="productTeamSelected('#new-prefcard-modal', this.value)">
                                                    <option value=""> Select Product Team </option>
                                                </select>
                                            </td>
                                            <td>
                                                
                                                <div id="divProcedures" class="input-group" style="display: none;">
                                                    <input type="text" id="procedures" class="form-control procedures other-procedures-typeahead"
                                                            placeholder="Other Procedure" autocomplete="off"/>
                                                    <span class="input-group-btn">
                                                        <button class="btn btn-default" type="button" onclick="addOtherProcedure()">+</button>
                                                    </span>
                                                    <span class="input-group-btn">
                                                        <button class="btn btn-error" type="button" onclick="resetProcedureSelection('#new-prefcard-modal')">x</button>
                                                    </span>
                                                </div>
                                                <select id="select-procedure" class="form-control default-color selectpicker" multiple="multiple" 
                                                            data-style="default-color"  data-selected-text-format="static"
                                                            data-width="250px" title="Procedures" data-container=".ModalOverflow">
                                                    
                                                </select>
                                                
                                                <div class="dropdown">
                                                    <div class="dropdown-content">
                                                        <div id="divNewProcedure">
                                                            <div class="form-group">
                                                                <label for="newProcedure">Other Procedure</label>
                                                                <input type="text" class="form-control newProcedure-typeahead" id="newProcedure" placeholder="New Procedure"/>
                                                            </div>
                                                            <button type="button" class="btn btn-default">Add</button>
                                                        </div>
                                                    </div>
                                                </div>
                                                
                                                
                                                <div class="procedures ctag-list clear-on-close"></div>
                                            </td>
                                            <td>
                                                <!-- <input type="text" id="surgical-technique" class="form-control surgical-technique surgical-technique-typeahead"/>
                                                <div class="surgical-technique ctag-list clear-on-close"></div> -->
                                                
                                                <div id="divSurgicalTechnique" class="input-group" style="display: none;">
                                                    <input type="text" id="surgical-technique" class="form-control surgical-technique surgical-technique-typeahead"
                                                            placeholder="Other surgical-technique"/>
                                                    <span class="input-group-btn">
                                                        <button class="btn btn-default" type="button" onclick="addOtherProcedure()">+</button>
                                                    </span>
                                                </div>
                                                <select id="select-surgical-technique" class="form-control default-color selectpicker" multiple="multiple" 
                                                            data-style="default-color" data-selected-text-format="static"
                                                            data-width="250px" title="Surgical Techniques" data-container=".ModalOverflow">
                                                    
                                                </select>
                                                
                                               <div class="dropdown"  >
                                                    <div class="dropdown-content">
                                                        <div id="divNewSurgicalTechnique">
                                                            <div class="form-group">
                                                                <label for="newSurgicalTechnique">Other Surgical Technique</label>
                                                                <input type="text" class="form-control newSurgicalTechnique-typeahead" id="newSurgicalTechnique" placeholder="New Surgical Technique"/>
                                                            </div>
                                                            <button type="button" class="btn btn-default">Add</button>
                                                        </div>
                                                    </div>
                                                </div> 
                                                
                                                
                                                <div class="surgical-technique ctag-list clear-on-close"></div>
                                            </td> 
                                            <td style="vertical-align:middle;text-align:right" >
                                                <span class="text-danger save-add-error"></span>
                                                <button type="button" class="btn btn-xs btn-primary btn-add-taxonomy" onclick="addTaxonomy('#new-prefcard-modal')"> Add</button>
                                            </td>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </div>  
                    </div>

                    <!-- <div class="form-group col-sm-12">                        
                      <label class="control-label"><span class="text-danger">*</span> {!$Label.CS_ProcedureName}</label>
                      <input type="text" data-record-name="" data-record-id="" class="form-control procedure card-procedure-typeahead" placeholder="Search by name"/>
                    </div>
                    
                    <div class="form-group col-sm-12">                        
                      <label class="control-label">Surgical Technique</label>
                      <input type="text" data-record-name="" data-record-id="" class="form-control surgical-technique surgical-technique-typeahead" placeholder="Search by name"/>
                    </div> -->
                  
                    <div class="form-group col-sm-12">
                      <label class="control-label">{!$Label.Products_ARContact}</label> &nbsp;<button type="button" class="btn btn-xs btn-primary btn-clear-products">Clear</button>
                      <input type="text" class="card-products-typeahead form-control clear-on-close" placeholder="Search by name"/>
                      <div class="products ctag-list clear-on-close"></div>
                    </div>
    
                    <div class="form-group col-sm-12">                        
                      <label class="control-label">{!$Label.Position_ARContact}</label>
                      <textarea class="form-control position"></textarea>
                    </div>                
                </div>

                
                <div class="row">
                    
                    <div class="col-sm-12 form-group">
                          <label class="control-label">{!$Label.CS_Disposables}</label>
                          <div class="rte disposables">
                          </div>
                    </div>
                    
                    <div class="col-sm-12 form-group">
                        <label class="control-label">{!$Label.Sutures_ARContact}</label>
                          <div class="rte sutures">
                          </div>
                    </div>
                    
                    <div class="col-sm-12 form-group">
                        <label class="control-label">{!$Label.Medications_ARContact}</label>
                          <div class="rte medications">
                          </div>
                    </div>
                    
                    <div class="col-sm-12 form-group">
                        <label class="control-label">{!$Label.Equipment_ARContact}</label>
                          <div class="rte equipment">
                          </div>
                    </div>
                    
                    <div class="col-sm-12 form-group">
                        <label class="control-label">{!$Label.Equipment_Notes_ARContact}</label>
                          <div class="rte equipment-notes">
                          </div>
                    </div>
                    
                </div>
              
            </div>
            </apex:form>


          </div>
          <div class="modal-footer">
            <span class="text-danger save-error"></span>
            <button type="button" style="display:none" class="pull-left btn btn-warning btn-delete-prefcard">Delete</button>
                            
            <button type="button" class="btn btn-default" data-dismiss="modal">{!$Label.CS_Close}</button>
            <button type="button" class="btn btn-primary btn-save-prefcard">{!$Label.CS_Save}</button>
          </div>
        </div><!-- /.modal-content -->
      </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->    

    <!-- modal for editing practitioner bio -->
    <div class="modal fade  modal-authrex" id="surgeon-bio-modal" data-backdrop="static" tabindex="-1" role="dialog">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title"><i class="fa fa-plus-square-o"></i>&nbsp;&nbsp;{!$Label.CS_EditSurgBio}</h4>
          </div>

          <div class="modal-body">

            <div class="row">
              <div class="col-sm-6">
                <div class="form-group">
                  <label>Undergraduate</label>
                  <input class="form-control undergraduate institution-typeahead"/>
                </div>

                <div class="form-group">
                  <label>Graduate</label>
                  <input class="form-control graduate institution-typeahead"/>
                </div>
                  
                <div class="form-group">
                  <label>Doctorate</label>
                  <input class="form-control doctorate institution-typeahead"/>
                </div>  

                <!-- div class="form-group">
                  <label>Internship</label>
                  <textarea class="form-control internship"></textarea>
                </div -->  

                <div class="form-group">
                  <label>Residencies</label>
                  <textarea class="form-control residencies"></textarea>
                </div>  
                <div class="form-group">
                  <label>Fellowships</label>
                  <textarea class="form-control fellowships"></textarea>
                </div>

              </div>
              <div class="col-sm-6">
                <div class="form-group">
                  <label>Certifications</label>
                  <textarea class="form-control certifications"></textarea>
                </div>

                <div class="form-group">
                    <label>Awards</label>
                    <textarea class="form-control awards"></textarea>
                </div>
                
                <div class="form-group">
                    <label>Professional Societies</label>
                    <textarea class="form-control professional-societies"></textarea>
                </div>
                
                <div class="form-group">
                    <label>Sports Teams Affiliations</label>
                    <textarea class="form-control sports-teams-affiliations"></textarea>
                </div>        
                                                                
                
                <div class="form-group" style="display:none">
                    <label>Personal Interest</label>
                    <textarea class="form-control personal-interest"></textarea>
                </div>
                
                <div class="form-group"  style="display:none">
                    <label>Spouse and Children</label>
                    <textarea class="form-control spouse-and-children"></textarea>
                </div>
              </div>
            </div>
          </div>

          <div class="modal-footer">
            <span class="text-danger save-error"></span>&nbsp;&nbsp;
            <button type="button" class="btn btn-default" data-dismiss="modal">{!$Label.CS_Close}</button>
            <button type="button" class="btn btn-primary btn-save-surgeon-bio">{!$Label.CS_Save}</button>
          </div>
        </div><!-- /.modal-content -->
      </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->     

    <!-- modal for Pardot Visit detail view-->
    <div class="modal fade  modal-authrex" id="pardot-visit-modal" data-backdrop="static" tabindex="-1" role="dialog">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title"><i class="fa fa-plus-square-o"></i>&nbsp;&nbsp;Pardot Activity Detail</h4>
          </div>

          <div class="modal-body">
            <div class="row">
              <div >
                <div class="form-group">
                  <label>Page Views</label>
                  <output id="pardot-visit-pageviews"/>
                </div>


                <div class="form-group">
                  <label>Duration</label>
                  <output id="pardot-visit-duration"/>
                </div>


                <div class="form-group">
                  <label>Created At</label>
                  <output id="pardot-visit-createdat"/>
                </div>

                <hr/>
                <div class="form-group">
                  <label>Visitor Page Views</label>
                </div>

                <!-- Visit Page Views Detail -->
                 <div id="PardotVisitPageViews" class="row">
                 <!-- Header row-->
                 <div class="col-sm-12 form-group detail_div">
                  <div class="col-sm-8"><label>URL/Title</label></div>
                  <!--div class="col-sm-3"><label>Date</label></div-->
                 </div>

                 </div>

                 <!-- div class="table-responsive">
                 <table id="pardotVisitPageViewsList" >
                    <thead>
                      <tr>
                        <th data-field="startDate" data-title="URL/Title" data-sortable="true"/>
                        <th data-field="provider" data-title="Date" data-sortable="true" data-filter-control="input"/>
                    </tr>
                    </thead>
                 </table>
                 </div -->

              <div class="modal-footer">
                <span class="text-danger save-error"></span>&nbsp;&nbsp;
                <button type="button" class="btn btn-default" data-dismiss="modal">{!$Label.CS_Close}</button>
              </div>
              </div><!-- / modal-content -->
          </div><!-- /.pardot modal-dialog -->
        </div><!-- /.pardot modal -->  
      </div>
      </div>
    </div> 


    <!-- modal for Pardot Email detail view-->
    <div class="modal fade  modal-authrex" id="pardot-email-modal" data-backdrop="static" tabindex="-1" role="dialog">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title"><i class="fa fa-plus-square-o"></i>&nbsp;&nbsp;Pardot Activity Detail</h4>
          </div>

          <div class="modal-body">
            <div class="row">
              <div >
                <div class="form-group">
                  <label>Name</label>
                  <output id="pardot-email-name"/>
                </div>

                <div class="form-group">
                  <label>Subject</label>
                  <output id="pardot-email-subject"/>
                </div>

                <div class="form-group">
                  <label>Created At</label>
                  <output id="pardot-email-date"/>
                </div>

                <div class="form-group">
                  <label>Message</label>
                  <output id="pardot-email-message" style="max-width:100%" />
                </div>

          <div class="modal-footer">
            <span class="text-danger save-error"></span>&nbsp;&nbsp;
            <button type="button" class="btn btn-default" data-dismiss="modal">{!$Label.CS_Close}</button>
          </div>
        </div><!-- / modal-content -->
      </div><!-- /.pardot modal-dialog -->
    </div><!-- /.pardot modal -->  
    </div>
    </div>
    </div>  
    
     <!-- SP code for Delete Warning/Confirmation on Pref Card  -->
    
    <!-- modal for delete Preference Card -->
    <div class="modal fade  modal-authrex" id="delete-preference-modal" data-backdrop="static" tabindex="-1" role="dialog">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title"><i class="fa fa-plus-square-o"></i>&nbsp;&nbsp;Preference Card</h4>
          </div>

          <div class="modal-body">

            <div class="row">
              <div class="col-sm-8">
                <div class="form-group">
       <label>Are you sure you want to delete the Preference Card?</label>
                </div>                
              </div>
            </div>
          </div>

          <div class="modal-footer">
            <span class="text-danger save-error"></span>&nbsp;&nbsp;
            <button type="button" class="btn btn-primary btn-delete-preference-card">Yes</button>
            <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
            
          </div>
        </div><!-- /.modal-content -->
      </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->    
    
    <!-- SP end of code -->    
 <!--Code added by Ansu for release 2.2 edit account details modal -->
     <div class="modal fade  modal-authrex" id="account-detail-modal" data-backdrop="static" tabindex="-1" role="dialog">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title"><i class="fa fa-plus-square-o"></i>&nbsp;&nbsp;{!$Label.ARContact_EditAccount}</h4>
          </div>

          <div class="modal-body">

            <div class="row">
              
                <!-- div class="form-group col-sm-12">
                <label>{!$Label.CS_AssignedTo}</label>
                <input type="text" class="form-control AssignedTo"/>                  
                </div -->

                
                <div class="form-group col-sm-6">                 
                   <label>{!$Label.ARContact_BusinessHoursStart}</label>&nbsp;<i class="fa fa-clock-o"></i>                 
                       <select class="businessHourStartTime form-control">
                          <option value=" ">- {!$Label.CS_Select} -</option>
                          </select> 
                </div>
                <div class="form-group col-sm-6">
                    <label>{!$Label.ARContact_BusinessHoursEnd}</label>&nbsp;<i class="fa fa-clock-o"></i>
                       <select class="businessHourEndTime form-control">
                       <option value=" ">- {!$Label.CS_Select} -</option>
                          </select> 
                   </div>      
                
                  
                <div class="form-group col-sm-12">
                  <label>{!$Label.CS_CredentialingCompany}</label>
                  <input class="form-control credentialcompany"/>
                </div>  

                <div class="form-group col-sm-12">
                  <label>{!$Label.CS_SignInLocation}</label>
                  <input class="form-control SignInLocation"></input>
                </div >  
               
                 <div class="form-group col-sm-12">
                  <label>{!$Label.CS_RepresentativeParking}</label>
                  <input class="form-control RepresentativeParking"></input>
                </div>
             
                <!--<div class="form-group col-sm-3">                 
                   <label>{!$Label.ARContact_AccountFiscalYearStartMonth}</label>                   
                       <select class="AccountFiscalYearStartMonth form-control">
                          <option value=" ">- {!$Label.CS_Select} -</option>
                          </select>
                </div> 
                
                <div class="form-group col-sm-3">                 
                   <label>{!$Label.ARContact_AccountFiscalYearStartDay}</label>                   
                       <select class="AccountFiscalYearStartDay form-control">
                          <option value=" ">- {!$Label.CS_Select} -</option>
                          </select>
                </div> -->
                
                <!-- <div class="form-group col-sm-12 text-center">
                    <label>{!$Label.ARContact_AccountFiscalYearEndMonth}</label> 
                </div> -->
                
                <div class="form-group col-sm-6">
                    <label>{!$Label.ARContact_AccountFiscalYearEndMonth}</label> 
                       <select class="AccountFiscalYearEndMonth form-control">
                       <option value=" ">- {!$Label.CS_Select} -</option>
                          </select> 
                   </div>  
                
                                
                <div class="form-group col-sm-6">                 
                     <label>&nbsp;</label>                   
                       <select class="AccountFiscalYearEndDay form-control">
                          <option value=" ">- {!$Label.CS_Select} -</option>
                          </select>
                </div>   
                
                <div class="form-group col-sm-12">
                    <label>{!$Label.CS_OperatingRoomLocation}</label>
                    <input class="form-control OperatingRoomLocation"></input>
                </div>
                
                <div class="form-group  col-sm-12">
                    <label>{!$Label.CS_SterileProcessingLocation}</label>
                    <input class="form-control SterileProcessingLocation"></input>
                </div>
                
                <!-- div class="form-group  col-sm-12">
                    <label>{!$Label.CS_SterileProcessingHours}</label>
                    <input class="form-control SterileProcessingHours"></input>
                </div -->        
                <div class="form-group col-sm-6">                 
                   <label>{!$Label.ARContact_SterileProcessingHoursStart}</label>&nbsp;<i class="fa fa-clock-o"></i>                   
                       <select class="SterileProcessingHourStartTime form-control">
                          <option value=" ">- {!$Label.CS_Select} -</option>
                          </select> 
                </div>
                <div class="form-group col-sm-6">
                    <label>{!$Label.ARContact_SterileProcessingHoursEnd}</label>&nbsp;<i class="fa fa-clock-o"></i>
                       <select class="SterileProcessingHourEndTime form-control">
                       <option value=" ">- {!$Label.CS_Select} -</option>
                          </select> 
                   </div>                                                 
                
                <div class="form-group  col-sm-12" >
                    <label>{!$Label.CS_RequiredtoChangeScrubs}</label>
                    <select class="form-control RequiredtoChangeScrubs">
                          <option value=" ">- {!$Label.CS_Select} -</option>
                          <option value="Yes">Yes</option>
                          <option value="No">No</option>
                       </select>
                </div>
                
                <div class="form-group  col-sm-12"  >
                    <label>{!$Label.CS_OtherAttireNotes}</label>
                    <input class="form-control OtherAttireNotes"></input>
                </div>                
              </div>
           
            <div class="modal-footer">
                <span class="error text-danger" id="editAccDetailErrors"></span>
                <button type="button" class="btn btn-default" data-dismiss="modal">{!$Label.CS_Close}</button>
                <button type="button" class="btn btn-primary save-account-detail-btn">{!$Label.CS_Save}</button>
            </div>
          </div>
        </div>
      </div>
    </div>   
 <!-- Code added by Ansu  for edit modal ends -->
  <!-- Code added by Ansu  for release 2.2/CID-000065 add surgeon affiliations  -->
<div class="modal fade  modal-authrex" id="add-surgeon-affiliation-modal" data-backdrop="static" tabindex="-1" role="dialog">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h4 class="modal-title"><i class="fa fa-plus-square-o"></i>&nbsp;&nbsp;{!$Label.ARContact_SurgeonAffiliation}</h4>
          </div>
          <div class="modal-body">
            <div class="form contact-form">
              <div class="row">
                <div class="col-sm-12">
                  <div class="form-group">
                    <label for="surgeon" class="control-label"><span class="text-danger">*</span> {!$Label.AROpportunity_Surgeon}<i class="surgeon-busy fa fa-refresh fa-spin" style="display:none"></i></label>
                    <input  id="surgeon" class="form-control surgeon-typeahead clear-on-close" type="text" />
                    <div id="surgeonsTag" class="surgeon ctag-list clear-on-close"></div>
                  </div>
                </div>        
              </div>
            </div>
          </div>
          <div class="modal-footer">
            <span class="text-danger save-error" id="affiliationErrors"></span>
            <button type="button" style="display:none" class="pull-left btn btn-warning btn-delete">Delete</button>
            <button type="button" class="btn btn-default btn-cancel">{!$Label.CS_Close}</button>
            <button type="button" class="btn btn-primary btn-save">{!$Label.CS_Save}</button>
          </div>
        </div><!-- /.modal-content -->
      </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
<!-- Code added by Ansu ends -->

</apex:define>
</apex:composition>
</apex:page>